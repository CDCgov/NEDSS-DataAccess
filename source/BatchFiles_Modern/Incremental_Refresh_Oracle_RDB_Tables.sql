DROP TABLE PERSON_RACE;
DROP TABLE PERSON_ETHNICITY;
DROP TABLE PERSON_NAME;
DROP TABLE PERSON_CONTACT;
DROP TABLE PERSON_LOCATION;
DROP TABLE ORG_ROLE;
DROP TABLE ORG_CONTACT;
DROP TABLE ORG_LOCATION;

DROP TABLE GEOCODING_LOCATION;
DROP TABLE RACE;
DROP TABLE DETAIL_ETHNICITY;
DROP TABLE NAME;
DROP TABLE CONTACT_INFO;
DROP TABLE ORG_ROLE_CODE;

DROP TABLE PERSON_RELATIONSHIP;
DROP TABLE PERSON_ID;
DROP TABLE ORG_ID;

DROP TABLE Case_Count;
DROP TABLE GENERIC_CASE;
DROP TABLE CRS_CASE;
DROP TABLE Measles_CASE;
DROP TABLE RUBELLA_CASE;

DROP TABLE NOTIFICATION_EVENT;
DROP TABLE NOTIFICATION;

DROP TABLE TREATMENT_EVENT;
DROP TABLE TREATMENT;

DROP TABLE VACCINATION;

DROP TABLE HEP_MULTI_VALUE_FIELD;
DROP TABLE HEPATITIS_CASE;
DROP TABLE HEP_MULTI_VALUE_FIELD_GROUP;

DROP TABLE Bmird_CASE;
DROP TABLE ANTIBIOTICS;
DROP TABLE ANTIBIOTICS_GROUP;
DROP TABLE ANTIMICROBIAL;
DROP TABLE ANTIMICROBIAL_GROUP;
DROP TABLE BMIRD_MULTI_VALUE_FIELD;
DROP TABLE BMIRD_MULTI_VALUE_FIELD_GROUP;


DROP TABLE Pertussis_CASE;
DROP TABLE PERTUSSIS_SUSPECTED_SOURCE_FLD;
DROP TABLE PERTUSSIS_SUSPECTED_SOURCE_GRP;
DROP TABLE PERTUSSIS_TREATMENT_FIELD;
DROP TABLE PERTUSSIS_TREATMENT_GROUP;



DROP TABLE LAB_RESULT_VAL;
DROP TABLE LAB_RESULT_COMMENT;
DROP TABLE LAB_TEST_RESULT;
DROP TABLE TEST_RESULT_GROUPING;
DROP TABLE RESULT_COMMENT_GROUP;
DROP TABLE LAB_RPT_USER_COMMENT;
DROP TABLE LAB_TEST;
DROP TABLE MORB_RPT_USER_COMMENT;
DROP TABLE MORBIDITY_REPORT_EVENT;
DROP TABLE MORBIDITY_REPORT;


DROP TABLE SUMMARY_REPORT_CASE;
DROP TABLE SUMMARY_CASE_GROUP;


DROP TABLE LDF_Data;
DROP TABLE Person_LDF_Group;
DROP TABLE Organization_LDF_Group;
DROP TABLE LDF_Group;


DROP TABLE Confirmation_method_Group;
DROP TABLE Confirmation_method;
DROP TABLE HEP100;
DROP TABLE INVESTIGATION;

DROP TABLE LOCATION;

DROP TABLE PERSON_LDF_CLINIC;
DROP TABLE CLINIC_VISITED;
DROP TABLE PERSON_FACT;
DROP TABLE COUNTRY_TRAVELED_TO_LDF;
DROP TABLE PERSON_LDF;

DROP TABLE DRUG_RESULT;
DROP TABLE ORGANISM_RESULT_VALUE;

DROP TABLE LAB_RESULT_CONDITION;
DROP TABLE LAB_RESULT_GROUP;
DROP TABLE Condition;
DROP TABLE RDB_DATE;

DROP TABLE CODE_VAL_GENERAL;
DROP TABLE CODESET;
DROP VIEW REJECTED_NND;
DROP VIEW ORG_LINE_LIST;
DROP VIEW LAB_TEST_REPORT;
DROP TABLE EVENT_METRIC;
DROP TABLE SR100;
DROP TABLE LAB100;
DROP TABLE LAB101;
DROP TABLE F_TB_PAM;
DROP TABLE F_VAR_PAM;
DROP TABLE ORGANIZATION;
DROP TABLE  PERSON;
DROP TABLE user_profile;


DELETE FROM S_TB_PAM;
DELETE FROM S_TB_HIV;
DELETE FROM S_TB_PAM_CASE_ENTITY;
DELETE FROM S_MOVE_STATE;
DELETE FROM S_HC_PROV_TY_3;
DELETE FROM S_DISEASE_SITE;
DELETE FROM S_ADDL_RISK;
DELETE FROM S_MOVE_CNTY;
DELETE FROM S_GT_12_REAS;
DELETE FROM S_MOVE_CNTRY;
DELETE FROM S_MOVED_WHERE;
DELETE FROM S_SMR_EXAM_TY;
DELETE FROM S_OUT_OF_CNTRY;

DELETE FROM S_VAR_PAM;
DELETE FROM S_VAR_PAM_CASE_ENTITY;
DELETE FROM S_RASH_LOC_GEN;
DELETE FROM S_PCR_SOURCE;


DELETE FROM F_S_TB_PAM;
DELETE FROM F_S_VAR_PAM;


DELETE FROM TB_DATAMART;
DELETE FROM TB_HIV_DATAMART;
DELETE FROM VAR_DATAMART;



CREATE TABLE ANTIBIOTICS (
       ANTIBIOTICS_KEY      NUMBER(8) NOT NULL,
       ANTIBIOTICS_GRP_KEY  NUMBER(8) NOT NULL,
       INTRAPARTUM_ANTIBIOTICS_NM VARCHAR2(50) NULL,
       INTRAPARTUM_ANTIBIOTICS_METHOD VARCHAR2(50) NULL,
       INTRAPARTUMANTIBIOTICS_STARTDT DATE NULL,
       INTRAPARTUMANTIBIOTICS_STOPDT DATE NULL,
       INTRAPARTUM_ANTIBIOTICS_DOSE NUMBER(11,5) NULL
);

CREATE UNIQUE INDEX XPKANTIBIOTICS ON ANTIBIOTICS
(
       ANTIBIOTICS_KEY                ASC,
       ANTIBIOTICS_GRP_KEY            ASC
);


ALTER TABLE ANTIBIOTICS
       ADD  ( PRIMARY KEY (ANTIBIOTICS_KEY, ANTIBIOTICS_GRP_KEY) ) ;


CREATE TABLE ANTIBIOTICS_GROUP (
       ANTIBIOTICS_GRP_KEY  NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKANTIBIOTICS_GROUP ON ANTIBIOTICS_GROUP
(
       ANTIBIOTICS_GRP_KEY            ASC
);


ALTER TABLE ANTIBIOTICS_GROUP
       ADD  ( PRIMARY KEY (ANTIBIOTICS_GRP_KEY) ) ;


CREATE TABLE ANTIMICROBIAL (
       ANTIMICROBIAL_GRP_KEY NUMBER(8) NOT NULL,
       ANTIMICROBIAL_AGENT_TESTED_IND VARCHAR2(50) NULL,
       SUSCEPTABILITY_METHOD VARCHAR2(50) NULL,
       S_I_R_U_RESULT       VARCHAR2(50) NULL,
       MIC_SIGN             VARCHAR2(50) NULL,
       MIC_VALUE            NUMBER(11,5) NULL,
       ANTIMICROBIAL_KEY    NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKANTIMICROBIAL ON ANTIMICROBIAL
(
       ANTIMICROBIAL_GRP_KEY          ASC,
       ANTIMICROBIAL_KEY              ASC
);


ALTER TABLE ANTIMICROBIAL
       ADD  ( PRIMARY KEY (ANTIMICROBIAL_GRP_KEY, ANTIMICROBIAL_KEY) ) ;


CREATE TABLE ANTIMICROBIAL_GROUP (
       ANTIMICROBIAL_GRP_KEY NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKANTIMICROBIAL_GROUP ON ANTIMICROBIAL_GROUP
(
       ANTIMICROBIAL_GRP_KEY          ASC
);


ALTER TABLE ANTIMICROBIAL_GROUP
       ADD  ( PRIMARY KEY (ANTIMICROBIAL_GRP_KEY) ) ;


CREATE TABLE BMIRD_CASE (
       INVESTIGATOR_KEY     NUMBER(8) NOT NULL,
       PHYSICIAN_KEY        NUMBER(8) NOT NULL,
       PATIENT_KEY          NUMBER(8) NOT NULL,
       REPORTER_KEY         NUMBER(8) NOT NULL,
       NURSING_HOME_KEY     NUMBER(8) NOT NULL,
       DAYCARE_FACILITY_KEY NUMBER(8) NOT NULL,
       TRANSFERED_IND       VARCHAR2(50) NULL,
       INV_ASSIGNED_DT_KEY  NUMBER(8) NOT NULL,
       BIRTH_WEIGHT_IN_GRAMS NUMBER(8) NULL,
       BIRTH_WEIGHT_POUNDS  NUMBER(8) NULL,
       CASE_LOCATION_KEY    NUMBER(8) NOT NULL,
       BIRTH_WEIGHT_OUNCES  NUMBER(8) NULL,
       WEIGHT_IN_POUNDS  NUMBER(8) NULL,
       WEIGHT_IN_OUNCES  NUMBER(8) NULL,
       WEIGHT_IN_KILOGRAM  NUMBER(8) NULL,
       WEIGHT_UNKNOWN  VARCHAR2(50) NULL,
       HEIGHT_IN_FEET  NUMBER(8) NULL,
       HEIGHT_IN_INCHES  NUMBER(8) NULL,
       HEIGHT_IN_CENTIMETERS  NUMBER(8) NULL,
       HEIGHT_UNKNOWN VARCHAR2(50) NULL,
       OTH_STREP_PNEUMO1_CULT_SITES VARCHAR2(50) NULL,
       OTH_STREP_PNEUMO2_CULT_SITES VARCHAR2(50) NULL,
       IHC_SPECIMEN_1 VARCHAR2(50) NULL,
       IHC_SPECIMEN_2 VARCHAR2(50) NULL,
       IHC_SPECIMEN_3 VARCHAR2(50) NULL,
       SAMPLE_COLLECTION_DT DATE NULL,
       CONJ_MENING_VACC VARCHAR2(50) NULL,
       TREATMENT_HOSPITAL_KEY NUMBER(8) NULL,
       TREATMENT_HOSPITAL_NM VARCHAR2(100) NULL,
       OTH_TYPE_OF_INSURANCE    VARCHAR2(50) NULL,
       PREGNANT_IND         VARCHAR2(50) NULL,
       OUTCOME_OF_FETUS     VARCHAR2(50) NULL,
       UNDER_1_MONTH_IND    VARCHAR2(50) NULL,
       GESTATIONAL_AGE      NUMBER(11,5) NULL,
       BACTERIAL_SPECIES_ISOLATED VARCHAR2(50) NULL,
       FIRST_POSITIVE_CULTURE_DT DATE NULL,
       UNDERLYING_CONDITION_IND VARCHAR2(50) NULL,
       PATIENT_YR_IN_COLLEGE VARCHAR2(50) NULL,
       CULTURE_SEROTYPE     VARCHAR2(50) NULL,
       PATIENT_STATUS_IN_COLLEGE VARCHAR2(50) NULL,
       PATIENT_CURR_LIVING_SITUATION VARCHAR2(50) NULL,
       HIB_VACC_RECEIVED_IND VARCHAR2(50) NULL,
       CULTURE_SEROGROUP    VARCHAR2(50) NULL,
       ATTENDING_COLLEGE_IND VARCHAR2(50) NULL,
       OXACILLIN_ZONE_SIZE  NUMBER(11,5) NULL,
       OXACILLIN_INTERPRETATION VARCHAR2(50) NULL,
       PNEUVACC_RECEIVED_IND VARCHAR2(50) NULL,
       PNEUCONJ_RECEIVED_IND VARCHAR2(50) NULL,
       FIRST_ADDITIONAL_SPECIMEN_DT DATE NULL,
       SECOND_ADDITIONAL_SPECIMEN_DT DATE NULL,
       PATIENT_HAD_SURGERY_IND VARCHAR2(50) NULL,
       SURGERY_DT           DATE NULL,
       PATIENT_HAVE_BABY_IND VARCHAR2(50) NULL,
       BABY_DELIVERY_DT     DATE NULL,
       IDENT_THRU_AUDIT_IND VARCHAR2(50) NULL,
       SAME_PATHOGEN_RECURRENT_IND VARCHAR2(50) NULL,
       OTHER_SPECIES_ISOLATE_SITE VARCHAR2(2000) NULL,
       OTHER_CASE_IDENT_METHOD VARCHAR2(2000) NULL,
       OTHER_HOUSING_OPTION VARCHAR2(2000) NULL,
       PATIENT_CURR_ATTEND_SCHOOL_NM VARCHAR2(100) NULL,
       POLYSAC_MENINGOC_VACC_IND VARCHAR2(50) NULL,
       FAMILY_MEDICAL_INSURANCE_TYPE VARCHAR2(50) NULL,
       HIB_CONTACT_IN_LAST_2_MON_IND VARCHAR2(50) NULL,
       TYPE_HIB_CONTACT_IN_LAST_2_MON VARCHAR2(2000) NULL,
       PRETERM_BIRTH_WK_NBR NUMBER(11,5) NULL,
       IMMUNOSUPRESSION_HIV_STATUS VARCHAR2(2000) NULL,
       ACUTE_SERUM_AVAILABLE_IND VARCHAR2(50) NULL,
       ACUTE_SERUM_AVAILABLE_DT DATE NULL,
       CONVALESNT_SERUM_AVAILABLE_IND VARCHAR2(50) NULL,
       CONVALESNT_SERUM_AVAILABLE_DT DATE NULL,
       BIRTH_OUTSIDE_HSPTL_IND VARCHAR2(50) NULL,
       BIRTH_OUTSIDE_HSPTL_LOCATION VARCHAR2(50) NULL,
       BABY_HSPTL_DISCHARGE_DTTIME DATE NULL,
       BABY_SAME_HSPTL_READMIT_IND VARCHAR2(50) NULL,
       BABY_SAME_HSPTL_READMIT_DTTIME DATE NULL,
       FRM_HOME_TO_DIF_HSPTL_IND VARCHAR2(50) NULL,
       FRM_HOME_TO_DIF_HSPTL_DTTIME DATE NULL,
       MOTHER_LAST_NM       VARCHAR2(50) NULL,
       MOTHER_FIRST_NM      VARCHAR2(50) NULL,
       MOTHER_HOSPTL_ADMISSION_DTTIME DATE NULL,
       MOTHER_PATIENT_CHART_NBR VARCHAR2(2000) NULL,
       MOTHER_PENICILLIN_ALLERGY_IND VARCHAR2(50) NULL,
       MEMBRANE_RUPTURE_DTTIME DATE NULL,
       MEMBRANE_RUPTURE_GE_18HRS_IND VARCHAR2(50) NULL,
       RUPTURE_BEFORE_LABOR_ONSET VARCHAR2(50) NULL,
       MEMBRANE_RUPTURE_TYPE VARCHAR2(50) NULL,
       DELIVERY_TYPE        VARCHAR2(50) NULL,
       MOTHER_INTRAPARTUM_FEVER_IND VARCHAR2(50) NULL,
       FIRST_INTRAPARTUM_FEVER_DTTIME DATE NULL,
       RECEIVED_PRENATAL_CARE_IND VARCHAR2(50) NULL,
       PRENATAL_CARE_IN_LABOR_CHART VARCHAR2(50) NULL,
       PRENATAL_CARE_VISIT_NBR NUMBER(11,5) NULL,
       FIRST_PRENATAL_CARE_VISIT_DT DATE NULL,
       LAST_PRENATAL_CARE_VISIT_DT DATE NULL,
       LAST_PRENATAL_CARE_VISIT_EGA NUMBER(11,5) NULL,
       GBS_BACTERIURIA_IN_PREGNANCY VARCHAR2(50) NULL,
       PREVIOUS_BIRTH_WITH_GBS_IND VARCHAR2(50) NULL,
       GBS_CULTURED_BEFORE_ADMISSION VARCHAR2(50) NULL,
       GBS_1ST_CULTURE_DT   DATE NULL,
       GBS_1ST_CULTURE_POSITIVE_IND VARCHAR2(50) NULL,
       GBS_2ND_CULTURE_DT   DATE NULL,
       GBS_2ND_CULTURE_POSITIVE_IND VARCHAR2(50) NULL,
       GBS_AFTER_ADM_BEFORE_DELIVERY VARCHAR2(50) NULL,
       AFTER_ADM_GBS_CULTURE_DT DATE NULL,
       GBS_CULTURE_DELIVERY_AVAILABLE VARCHAR2(50) NULL,
       INTRAPARTUM_ANTIBIOTICS_GIVEN VARCHAR2(50) NULL,
       FIRST_ANTIBIOTICS_GIVEN_DTTIME DATE NULL,
       INTRAPARTUMANTIBIOTICSINTERVAL VARCHAR2(20) NULL,
       INTRAPARTUM_ANTIBIOTICS_REASON VARCHAR2(50) NULL,
       BABY_BIRTH_TIME      VARCHAR2(20) NULL,
       NEISERRIA_2NDARY_CASE_IND VARCHAR2(50) NULL,
       NEISERRIA_2ND_CASE_CONTRACT VARCHAR2(50) NULL,
       OTHER_2NDARY_CASE_TYPE VARCHAR2(2000) NULL,
       NEISERRIA_RESIST_TO_RIFAMPIN VARCHAR2(50) NULL,
       NEISERRIA_RESIST_TO_SULFA VARCHAR2(50) NULL,
       FIRST_HSPTL_DISCHARGE_TIME VARCHAR2(2000) NULL,
       FIRST_HSPTL_READMISSION_TIME VARCHAR2(2000) NULL,
       SECOND_HSPTL_ADMISSION_TIME VARCHAR2(2000) NULL,
       ABCCASE              VARCHAR2(50) NULL,
       HSPTL_MATERNAL_ADMISSION_TIME VARCHAR2(2000) NULL,
       MEMBRANE_RUPTURE_TIME VARCHAR2(2000) NULL,
       INTRAPARTUM_FEVER_RECORD_TIME VARCHAR2(2000) NULL,
       ANTIBIOTICS_1ST_ADMIN_TIME VARCHAR2(2000) NULL,
       BMIRD_MULTI_VAL_GRP_KEY NUMBER(8) NOT NULL,
       OTHER_PRIOR_ILLNESS  VARCHAR2(2000) NULL,
       OTHER_MALIGNANCY     VARCHAR2(2000) NULL,
       ORGAN_TRANSPLANT     VARCHAR2(2000) NULL,
       DAYCARE_IND          VARCHAR2(50) NULL,
       NURSING_HOME_IND     VARCHAR2(50) NULL,
       TYPES_OF_OTHER_INFECTION VARCHAR2(2000) NULL,
       BACTERIAL_OTHER_SPECIED VARCHAR2(2000) NULL,
       STERILE_SITE_OTHER   VARCHAR2(2000) NULL,
       UNDERLYING_CONDITIONS_OTHER VARCHAR2(2000) NULL,
       CULTURE_SEROGROUP_OTHER VARCHAR2(2000) NULL,
       PERSISTENT_DISEASE_IND VARCHAR2(50) NULL,
       GBS_CULTURE_POSITIVE_IND VARCHAR2(50) NULL,
       ANTIMICROBIAL_GRP_KEY NUMBER(8) NOT NULL,
       ANTIBIOTICS_GRP_KEY  NUMBER(8) NOT NULL,
       BACTERIAL_OTHER_ISOLATED VARCHAR2(50) NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       ADT_HSPTL_KEY        NUMBER(8) NOT NULL,
       RPT_SRC_ORG_KEY      NUMBER(8) NOT NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       FAMILY_MED_INSURANCE_TYPE_OTHE VARCHAR2(2000) NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,
       PRIOR_STATE_CASE_ID  VARCHAR2(2000) NULL,
       BIRTH_CNTRY_CD       VARCHAR2(50) NULL,
       INITIAL_HSPTL_NAME   VARCHAR2(100) NULL,
       BIRTH_HSPTL_NAME     VARCHAR2(100) NULL,
       FROM_HOME_HSPTL_NAME VARCHAR2(100) NULL,
       CULTURE_IDENT_ORG_NAME VARCHAR2(100) NULL,
       TRANSFER_FRM_HSPTL_NAME VARCHAR2(100) NULL,
       CASE_REPORT_STATUS   VARCHAR2(50) NULL,
       TRANSFER_FRM_HSPTL_ID VARCHAR2(100) NULL,
       BIRTH_HSPTL_ID       VARCHAR2(100) NULL,
       DIF_HSPTL_ID         VARCHAR2(100) NULL,
       ABC_STATE_CASE_ID    VARCHAR2(100) NULL,
       INV_PATIENT_CHART_NBR VARCHAR2(2000) NULL,
        GEOCODING_LOCATION_KEY NUMBER(8)
);

CREATE UNIQUE INDEX XPKBMIRD_CASE ON BMIRD_CASE
(
       INVESTIGATOR_KEY               ASC,
       PHYSICIAN_KEY                  ASC,
       PATIENT_KEY                    ASC,
       REPORTER_KEY                   ASC,
       NURSING_HOME_KEY               ASC,
       DAYCARE_FACILITY_KEY           ASC,
       INV_ASSIGNED_DT_KEY            ASC,
       CASE_LOCATION_KEY              ASC,
       BMIRD_MULTI_VAL_GRP_KEY        ASC,
       ANTIBIOTICS_GRP_KEY            ASC,
       ANTIMICROBIAL_GRP_KEY          ASC,
       INVESTIGATION_KEY              ASC,
       ADT_HSPTL_KEY                  ASC,
       RPT_SRC_ORG_KEY                ASC,
       CONDITION_KEY                  ASC,
       LDF_GROUP_KEY                  ASC
);


ALTER TABLE BMIRD_CASE
       ADD  ( PRIMARY KEY (INVESTIGATOR_KEY, PHYSICIAN_KEY, 
              PATIENT_KEY, REPORTER_KEY, NURSING_HOME_KEY, 
              DAYCARE_FACILITY_KEY, INV_ASSIGNED_DT_KEY, 
              CASE_LOCATION_KEY, BMIRD_MULTI_VAL_GRP_KEY, 
              ANTIBIOTICS_GRP_KEY, ANTIMICROBIAL_GRP_KEY, 
              INVESTIGATION_KEY, ADT_HSPTL_KEY, RPT_SRC_ORG_KEY, 
              CONDITION_KEY, LDF_GROUP_KEY) ) ;


CREATE TABLE BMIRD_MULTI_VALUE_FIELD (
       BMIRD_MULTI_VAL_FIELD_KEY NUMBER(8) NOT NULL,
       TYPES_OF_INFECTIONS  VARCHAR2(50) NULL,
       UNDERLYING_CONDITION_NM VARCHAR2(50) NULL,
       NON_STERILE_SITE     VARCHAR2(50) NULL,
       STREP_PNEUMO_2_CULTURE_SITES VARCHAR2(50) NULL,
       STREP_PNEUMO_1_CULTURE_SITES VARCHAR2(50) NULL,
       GBS_2ND_CULTURE_SITES VARCHAR2(50) NULL,
       GBS_1ST_CULTURE_SITES VARCHAR2(50) NULL,
       PAST_SIGNIFICANT_MEDICAL_HIST VARCHAR2(50) NULL,
       STERILE_SITE         VARCHAR2(50) NULL,
       AFTER_ADM_GBS_CULTURE_SITES VARCHAR2(50) NULL,
       BMIRD_MULTI_VAL_GRP_KEY NUMBER(8) NOT NULL,
       OTHER_PRIOR_CONDITION_IND VARCHAR2(50) NULL,
       HOW_WAS_CASE_IDENTIFIED VARCHAR2(50) NULL
);

CREATE UNIQUE INDEX XPKBMIRD_MULTI_VALUE_FIELD ON BMIRD_MULTI_VALUE_FIELD
(
       BMIRD_MULTI_VAL_FIELD_KEY      ASC,
       BMIRD_MULTI_VAL_GRP_KEY        ASC
);


ALTER TABLE BMIRD_MULTI_VALUE_FIELD
       ADD  ( PRIMARY KEY (BMIRD_MULTI_VAL_FIELD_KEY, 
              BMIRD_MULTI_VAL_GRP_KEY )) ;


CREATE TABLE BMIRD_MULTI_VALUE_FIELD_GROUP (
       BMIRD_MULTI_VAL_GRP_KEY NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKBMIRD_MULTI_VALUE_FIELD_GRO ON BMIRD_MULTI_VALUE_FIELD_GROUP
(
       BMIRD_MULTI_VAL_GRP_KEY        ASC
);


ALTER TABLE BMIRD_MULTI_VALUE_FIELD_GROUP
       ADD  ( PRIMARY KEY (BMIRD_MULTI_VAL_GRP_KEY) ) ;


CREATE TABLE CASE_COUNT (
       CASE_COUNT           NUMBER(8) NULL,
       INVESTIGATOR_KEY     NUMBER(8) NOT NULL,
       REPORTER_KEY         NUMBER(8) NOT NULL,
       PHYSICIAN_KEY        NUMBER(8) NOT NULL,
       CASE_LOCATION_KEY    NUMBER(8) NOT NULL,
       RPT_SRC_ORG_KEY      NUMBER(8) NOT NULL,
       INV_ASSIGNED_DT_KEY  NUMBER(8) NOT NULL,
       PATIENT_KEY          NUMBER(8) NOT NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       INVESTIGATION_COUNT  NUMBER(8) NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       ADT_HSPTL_KEY        NUMBER(8) NULL,
       GEOCODING_LOCATION_KEY NUMBER(8)
);

CREATE UNIQUE INDEX XPKCASE_COUNT ON CASE_COUNT
(
       INV_ASSIGNED_DT_KEY            ASC,
       INVESTIGATOR_KEY               ASC,
       REPORTER_KEY                   ASC,
       PHYSICIAN_KEY                  ASC,
       CASE_LOCATION_KEY              ASC,
       RPT_SRC_ORG_KEY                ASC,
       PATIENT_KEY                    ASC,
       INVESTIGATION_KEY              ASC,
       CONDITION_KEY                  ASC
);


ALTER TABLE CASE_COUNT
       ADD  ( PRIMARY KEY (INV_ASSIGNED_DT_KEY, INVESTIGATOR_KEY, 
              REPORTER_KEY, PHYSICIAN_KEY, CASE_LOCATION_KEY, 
              RPT_SRC_ORG_KEY, PATIENT_KEY, INVESTIGATION_KEY, 
              CONDITION_KEY) ) ;


CREATE TABLE CLINIC_VISITED (
       CLINIC_KEY           NUMBER(8) NOT NULL,
       CLINIC_NM            VARCHAR2(50) NULL,
       CLINIC_STREET_ADDRESS VARCHAR2(50) NULL,
       CLINIC_CITY          VARCHAR2(50) NULL,
       CLINIC_STATE         VARCHAR2(50) NULL,
       CLINIC_CNTY          VARCHAR2(50) NULL,
       CLINIC_CNTRY         VARCHAR2(50) NULL,
       CLINIC_ZIP           VARCHAR2(50) NULL,
       CLINIC_PHONE_NBR     VARCHAR2(50) NULL
);

CREATE UNIQUE INDEX XPKCLINIC_VISITED ON CLINIC_VISITED
(
       CLINIC_KEY                     ASC
);


ALTER TABLE CLINIC_VISITED
       ADD  ( PRIMARY KEY (CLINIC_KEY) ) ;


CREATE TABLE CODE_VAL_GENERAL (
       CODE_VAL             VARCHAR2(50) NULL,
       CODE_DESC            VARCHAR2(300) NULL,
       CODE_SYS_CD          VARCHAR2(50) NULL,
       CODE_SYS_CD_DESC     VARCHAR2(50) NULL,
       CODE_EFF_DT          DATE NULL,
       CODE_END_DT          DATE NULL,
       CD                   VARCHAR2(20) NOT NULL,
       CODE_KEY             NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKCODE_VAL_GENERAL ON CODE_VAL_GENERAL
(
       CD                             ASC,
       CODE_KEY                       ASC
);


ALTER TABLE CODE_VAL_GENERAL
       ADD  ( PRIMARY KEY (CD, CODE_KEY) ) ;


CREATE TABLE CODESET (
       CD                   VARCHAR2(20) NOT NULL,
       TBL_NM               VARCHAR2(32) NULL,
       COL_NM               VARCHAR2(32) NULL,
       CD_SYS_CD            VARCHAR2(20) NULL,
       CD_SYS_CD_DESC       VARCHAR2(100) NULL,
       CD_SYS_VER           VARCHAR2(20) NULL,
       DATA_TYPE            VARCHAR2(20) NULL,
       DATA_LENGTH          NUMBER(4) NULL,
       CODE_SET_NM          VARCHAR2(32) NULL,
       CD_DESC              VARCHAR2(300) NULL
);

CREATE UNIQUE INDEX XPKCODESET ON CODESET
(
       CD                             ASC
);


ALTER TABLE CODESET
       ADD  ( PRIMARY KEY (CD) ) ;


CREATE TABLE CONDITION (
       CONDITION_CD         VARCHAR2(50) NULL,
       CONDITION_DESC       VARCHAR2(300) NULL,
       CONDITION_SHORT_NM   VARCHAR2(50) NULL,
       CONDITION_CD_EFF_DT  DATE NULL,
       CONDITION_CD_END_DT  DATE NULL,
       NND_IND              VARCHAR2(50) NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       DISEASE_GRP_CD       VARCHAR2(20) NULL,
       DISEASE_GRP_DESC     VARCHAR2(100) NULL,
       PROGRAM_AREA_CD      VARCHAR2(20) NULL,
       PROGRAM_AREA_DESC    VARCHAR2(100) NULL,
       CONDITION_CD_SYS_CD_NM VARCHAR2(100) NULL,
       ASSIGNING_AUTHORITY_CD VARCHAR2(50) NULL,
       ASSIGNING_AUTHORITY_DESC VARCHAR2(100) NULL,
       CONDITION_CD_SYS_CD  VARCHAR2(50) NULL
);

CREATE UNIQUE INDEX XPKCONDITION ON CONDITION
(
       CONDITION_KEY                  ASC
);


ALTER TABLE CONDITION
       ADD  ( PRIMARY KEY (CONDITION_KEY) ) ;


CREATE TABLE CONFIRMATION_METHOD (
       CONFIRMATION_METHOD_KEY NUMBER(8) NOT NULL,
       CONFIRMATION_METHOD_CD VARCHAR2(50) NULL,
       CONFIRMATION_METHOD_DESC VARCHAR2(50) NULL
);

CREATE UNIQUE INDEX XPKCONFIRMATION_METHOD ON CONFIRMATION_METHOD
(
       CONFIRMATION_METHOD_KEY        ASC	
);


ALTER TABLE CONFIRMATION_METHOD
       ADD  ( PRIMARY KEY (CONFIRMATION_METHOD_KEY) ) ;


CREATE TABLE CONFIRMATION_METHOD_GROUP (
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       CONFIRMATION_METHOD_KEY NUMBER(8) NOT NULL,
       CONFIRMATION_DT      DATE NULL
);

CREATE UNIQUE INDEX XPKCONFIRMATION_METHOD_GROUP ON CONFIRMATION_METHOD_GROUP
(
       INVESTIGATION_KEY              ASC,
       CONFIRMATION_METHOD_KEY        ASC
);


ALTER TABLE CONFIRMATION_METHOD_GROUP
       ADD  ( PRIMARY KEY (INVESTIGATION_KEY, CONFIRMATION_METHOD_KEY) ) ;


CREATE TABLE CONTACT_INFO (
       CONTACT_KEY          NUMBER(8) NOT NULL,
       PHONE_NBR            VARCHAR2(50) NULL,
       PHONE_EXT            VARCHAR2(50) NULL,
       CNTRY_CD             VARCHAR2(50) NULL,
       URL                  VARCHAR2(100) NULL,
       EMAIL_ADDRESS        VARCHAR2(100) NULL,
       PHONE_TYPE           VARCHAR2(100) NULL,
       PHONE_COMMENTS       VARCHAR2(2000) NULL,
       PHONE_USE            VARCHAR2(50) NULL,
       PHONE_TYPE_DESC      VARCHAR2(50) NULL
);

CREATE UNIQUE INDEX XPKCONTACT_INFO ON CONTACT_INFO
(
       CONTACT_KEY                    ASC
);


ALTER TABLE CONTACT_INFO
       ADD  ( PRIMARY KEY (CONTACT_KEY) ) ;


CREATE TABLE COUNTRY_TRAVELED_TO_LDF (
       COUNTRY_TRAVELED_TO_KEY NUMBER(8) NOT NULL,
       COUNTRY_NM           VARCHAR2(50) NULL,
       TRAVEL_START_DT      DATE NULL,
       TRAVEL_END_DT        DATE NULL,
       PERSON_KEY           NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKCOUNTRY_TRAVELED_TO_LDF ON COUNTRY_TRAVELED_TO_LDF
(
       COUNTRY_TRAVELED_TO_KEY        ASC,
       PERSON_KEY                     ASC
);


ALTER TABLE COUNTRY_TRAVELED_TO_LDF
       ADD  ( PRIMARY KEY (COUNTRY_TRAVELED_TO_KEY, PERSON_KEY) ) ;


CREATE TABLE CRS_CASE (
       AT_PREGNANCY_18YOUNGR_CHILDNBR NUMBER(11,5) NULL,
       AUTOPSY_PERFORMED_IND VARCHAR2(50) NULL,
       BIRTH_DELIVERED_IN_US_NBR NUMBER(11,5) NULL,
       BIRTH_STATE          VARCHAR2(50) NULL,
       BIRTH_WEIGHT         NUMBER(20) NULL,
       BIRTH_WEIGHT_UNIT    VARCHAR2(50) NULL,
       BY_WHOM_NOT_MD_DIAGNSD_RUBELLA VARCHAR2(2000) NULL,
       CHILD_18YOUNGR_RUBELLA_VACCD VARCHAR2(50) NULL,
       CHILD_AGE_AT_DIAGNOSIS_UNIT VARCHAR2(50) NULL,
       CHILD_AGE_AT_THIS_DIAGNOSIS NUMBER(11,5) NULL,
       CHILD_CONGNITAL_HEART_DISEASE VARCHAR2(50) NULL,
       CHILD_DERMAL_ERYTHROPOISESIS VARCHAR2(50) NULL,
       CHILD_CONGNITAL_GLAUCOMA VARCHAR2(50) NULL,
       CHILD_JAUNDICE       VARCHAR2(50) NULL,
       CHILD_LOW_PLATELETS  VARCHAR2(50) NULL,
       CHILD_MENINGOENCEPHALITIS VARCHAR2(50) NULL,
       CHILD_MICROENCEPHALY VARCHAR2(50) NULL,
       CHILD_OTHER_ABNORMALITIES VARCHAR2(50) NULL,
       CHILD_PURPURA        VARCHAR2(50) NULL,
       CHILD_RADIOLUCENT_BONE VARCHAR2(50) NULL,
       CHILD_CATARACTS      VARCHAR2(50) NULL,
       CHILD_ENLARGED_LIVER VARCHAR2(50) NULL,
       CHILD_ENLARGED_SPLEEN VARCHAR2(50) NULL,
       CHILD_HEARING_LOSS   VARCHAR2(50) NULL,
       CHILD_MENTAL_RETARDATION VARCHAR2(50) NULL,
       CHILD_OTHER_ABNORMALITIES_1 VARCHAR2(2000) NULL,
       CHILD_OTHER_ABNORMALITIES_2 VARCHAR2(2000) NULL,
       CHILD_OTHER_ABNORMALITIES_3 VARCHAR2(2000) NULL,
       CHILD_OTHER_ABNORMALITIES_4 VARCHAR2(2000) NULL,
       CHILD_PATENT_DUCTUS_ARTERIOSUS VARCHAR2(50) NULL,
       CHILD_PIGMENTARY_RETINOPATHY VARCHAR2(50) NULL,
       CHILD_PULMONIC_STENOSIS VARCHAR2(50) NULL,
       CHILD_RUBELLA_LAB_TEST_DONE VARCHAR2(50) NULL,
       REASON_NOT_A_CRS_CASE VARCHAR2(50) NULL,
       DEATH_CERTIFICATE_2NDARY_CAUSE VARCHAR2(2000) NULL,
       DEATH_CERTIFICATE_PRIMARY_CAUS VARCHAR2(2000) NULL,
       DIFFERENCE_BETWEEN_TEST_1_2 VARCHAR2(50) NULL,
       FAMILYPLAND_PRIOR_CONCEPTION VARCHAR2(50) NULL,
       FINAL_ANATOMICAL_DEATH_CAUSE VARCHAR2(2000) NULL,
       PRENATAL_FIRST_VISIT_DT DATE NULL,
       GESTATIONAL_AGE_IN_WK_AT_BIRTH NUMBER(11,5) NULL,
       HEALTH_PROVIDER_LAST_EVAL_DT DATE NULL,
       IGM_EIA_1_METHOD_USED VARCHAR2(50) NULL,
       IGM_EIA_2_METHOD_USED VARCHAR2(50) NULL,
       IGM_EIA_NONCAPTURE_RESULT VARCHAR2(50) NULL,
       IGM_EIA_OTHER_TST_RESULT_VAL VARCHAR2(2000) NULL,
       IGM_EIA_TEST_1_RESULT_VAL VARCHAR2(2000) NULL,
       IGM_EIA_TEST_2_RESULT_VAL VARCHAR2(2000) NULL,
       INFANT_DEATH_FRM_CRS VARCHAR2(50) NULL,
       MATERNAL_ILL_CLINICAL_FEATURE VARCHAR2(2000) NULL,
       CASE_LOCATION_KEY    NUMBER(8) NOT NULL,
       MOTHER_AGE_AT_GIVEN_BIRTH NUMBER(11,5) NULL,
       MOTHER_ARTHRALGIA_ARTHRITIS VARCHAR2(2000) NULL,
       MOTHER_BIRTH_CNTRY   VARCHAR2(50) NULL,
       MOTHER_EXPOSD_TO_RUBELLA_CASE VARCHAR2(50) NULL,
       MOTHER_GIVEN_PRIOR_BIRTH_IN_US VARCHAR2(50) NULL,
       MOTHER_HAD_FEVER     VARCHAR2(50) NULL,
       MOTHER_HAD_LYMPHADENOPATHY VARCHAR2(50) NULL,
       MOTHER_HAS_MACULOPAPULAR_RASH VARCHAR2(50) NULL,
       MOTHER_IMMUNIZED_IND VARCHAR2(50) NULL,
       MOTHER_KNOW_EXPOSED_AT_WHERE VARCHAR2(50) NULL,
       MOTHER_LIVING_IN_US_YRS NUMBER(11,5) NULL,
       MOTHER_OCCUPATION_ATCONCEPTION VARCHAR2(2000) NULL,
       MOTHER_OTHER_VACC_INFO_SRC VARCHAR2(2000) NULL,
       MOTHER_RASH_ONSET_DT DATE NULL,
       MOTHER_RELATIONTO_RUBELLA_CASE VARCHAR2(50) NULL,
       MOTHER_RUBELLA_CASE_EXPOSE_DT DATE NULL,
       MOTHER_TRAVEL_BACK_US_1_DT DATE NULL,
       MOTHER_TRAVEL_BACK_US_2_DT DATE NULL,
       MOTHER_TRAVEL_OUT_US_1_DT DATE NULL,
       MOTHER_TRAVEL_OUT_US_2_DT DATE NULL,
       MOTHER_TRAVEL_1_TO_CNTRY VARCHAR2(50) NULL,
       MOTHER_TRAVEL_2_TO_CNTRY VARCHAR2(50) NULL,
       MOTHER_UNK_EXPOSURE_TRAVEL_IND VARCHAR2(50) NULL,
       MOTHER_IS_A_RPTD_RUBELLA_CASE VARCHAR2(50) NULL,
       MOTHERRUBELLA_IMMUNIZE_INFOSRC VARCHAR2(50) NULL,
       OTHER_CONGNITAL_HEART_DISS_IND VARCHAR2(50) NULL,
       OTHER_CONGNITALHEART_DISS_DESC VARCHAR2(2000) NULL,
       OTHER_RELATIONSHIP   VARCHAR2(2000) NULL,
       OTHER_RUBELLA_LAB_TEST_DESC VARCHAR2(2000) NULL,
       OTHER_RUBELLA_LAB_TEST_DONE VARCHAR2(50) NULL,
       OTHER_RUBELLA_LAB_TEST_DT DATE NULL,
       OTHER_RUBELLA_LAB_TEST_RESULT VARCHAR2(2000) NULL,
       OTHER_RUBELLA_SPECIMEN_TYPE VARCHAR2(2000) NULL,
       OTHER_RUBELLA_TEST_RESULT_VAL VARCHAR2(2000) NULL,
       PREGNANCY_MO_RUBELLA_SYMPTM_UP NUMBER(11,5) NULL,
       PRENATAL_CARE_THIS_PREGNANCY VARCHAR2(50) NULL,
       PREVIOUS_PREGNANCY_NBR NUMBER(11,5) NULL,
       RT_PCR_DT            DATE NULL,
       RT_PCR_OTHER_SPECIMEN_SRC VARCHAR2(2000) NULL,
       RT_PCR_PERFORMED     VARCHAR2(50) NULL,
       RT_PCR_RESULT        VARCHAR2(50) NULL,
       RT_PCR_SRC           VARCHAR2(50) NULL,
       RT_PCR_TEST_RESULT_VAL VARCHAR2(2000) NULL,
       RUBELLA_IGG_TEST_1   VARCHAR2(50) NULL,
       RUBELLA_IGG_TEST_1_DT DATE NULL,
       RUBELLA_IGG_TEST_1_RESULT VARCHAR2(50) NULL,
       RUBELLA_IGG_TEST_2   VARCHAR2(50) NULL,
       RUBELLA_IGG_TEST_2_DT DATE NULL,
       RUBELLA_IGG_TEST_2_RESULT VARCHAR2(50) NULL,
       RUBELLA_IGG_TEST1_RESULT_VAL VARCHAR2(2000) NULL,
       RUBELLA_IGG_TEST2_RESULT_VAL  VARCHAR2(2000) NULL,
       RUBELLA_IGM_EIA_CAPTURE VARCHAR2(50) NULL,
       RUBELLA_IGM_EIA_CAPTURE_DT DATE NULL,
       RUBELLA_IGM_EIA_CAPTURE_RESULT VARCHAR2(50) NULL,
       RUBELLA_IGM_EIA_NONCAPTURE_DT DATE NULL,
       RUBELLA_IGM_EIA_TESTED VARCHAR2(50) NULL,
       RUBELLA_IGM_OTHER_TEST VARCHAR2(50) NULL,
       RUBELLA_IGM_OTHER_TEST_DESC VARCHAR2(2000) NULL,
       RUBELLA_IGM_OTHER_TEST_DT DATE NULL,
       RUBELLA_IGM_OTHER_TEST_RESULT VARCHAR2(50) NULL,
       RUBELLA_LIKE_ILL_IN_PREGNANCY VARCHAR2(50) NULL,
       RUBELLA_SPECIMEN_TYPE VARCHAR2(50) NULL,
       RUBELLAVACCD_18YOUNGR_CHILDNBR NUMBER(11,5) NULL,
       SEROLOGICAL_CONFIRMD_AT_ILL VARCHAR2(50) NULL,
       SEROLOGICAL_TST_BEFR_PREGNANCY VARCHAR2(50) NULL,
       SEROLOGICALLY_CONFIRMD_DT DATE NULL,
       SEROLOGICALLY_CONFIRMD_RESULT VARCHAR2(50) NULL,
       SPECIMEN_TO_CDC_FOR_GENOTYPING VARCHAR2(50) NULL,
       TOTAL_LIVE_BIRTH_NBR NUMBER(11,5) NULL,
       VACCINE_SRC          VARCHAR2(50) NULL,
       VIRUS_ISOLATION_DT   DATE NULL,
       VIRUS_ISOLATION_OTHER_SRC VARCHAR2(2000) NULL,
       VIRUS_ISOLATION_PERFORMED VARCHAR2(50) NULL,
       VIRUS_ISOLATION_RESULT VARCHAR2(50) NULL,
       VIRUS_ISOLATION_SPECIMEN_SRC VARCHAR2(50) NULL,
       YR_MOTHER_PRIOR_DELIVERY_IN_US VARCHAR2(2000) NULL,
       INVESTIGATOR_KEY     NUMBER(8) NOT NULL,
       PATIENT_KEY          NUMBER(8) NOT NULL,
       PHYSICIAN_KEY        NUMBER(8) NOT NULL,
       REPORTER_KEY         NUMBER(8) NOT NULL,
       INV_ASSIGNED_DT_KEY  NUMBER(8) NOT NULL,
       PRENATAL_CARE_OBTAINED_FRM_2 VARCHAR2(50) NULL,
       PRENATAL_CARE_OBTAINED_FRM_3 VARCHAR2(50) NULL,
       PRENATAL_CARE_OBTAINED_FRM_1 VARCHAR2(50) NULL,
       RPT_SRC_ORG_KEY      NUMBER(8) NOT NULL,
       ADT_HSPTL_KEY        NUMBER(8) NOT NULL,
       MOTHER_RUBELLA_ACQUIRED_PLACE VARCHAR2(50) NULL,
       MOTHER_RUBELLA_ACQUIRED_CNTRY VARCHAR2(50) NULL,
       MOTHER_RUBELLA_ACQUIRED_CITY VARCHAR2(2000) NULL,
       MOTHER_RUBELLA_ACQUIRED_STATE VARCHAR2(50) NULL,
       MOTHER_RUBELLA_ACQUIRED_CNTY VARCHAR2(50) NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       SENT_FOR_GENOTYPING_DT DATE NULL,
       DIAGNOSED_BY_PHYSICIAN_IND VARCHAR2(50) NULL,
       MOTHER_RUBELLA_LAB_TEST_IND VARCHAR2(50) NULL,
       MOTHER_VACCINATED_DT DATE NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,
       GENOTYPE_SEQUENCED_CRS VARCHAR2(50) NULL,
       GENOTYPE_ID_CRS VARCHAR2(50) NULL,
       GENOTYPE_OTHER_ID_CRS VARCHAR2(50) NULL,
       GEOCODING_LOCATION_KEY NUMBER(8));

CREATE UNIQUE INDEX XPKCRS_CASE ON CRS_CASE
(
       CASE_LOCATION_KEY              ASC,
       INVESTIGATOR_KEY               ASC,
       PATIENT_KEY                    ASC,
       REPORTER_KEY                   ASC,
       PHYSICIAN_KEY                  ASC,
       INV_ASSIGNED_DT_KEY            ASC,
       ADT_HSPTL_KEY                  ASC,
       RPT_SRC_ORG_KEY                ASC,
       INVESTIGATION_KEY              ASC,
       CONDITION_KEY                  ASC,
       LDF_GROUP_KEY                  ASC
);


ALTER TABLE CRS_CASE
       ADD  ( PRIMARY KEY (CASE_LOCATION_KEY, INVESTIGATOR_KEY, 
              PATIENT_KEY, REPORTER_KEY, PHYSICIAN_KEY, 
              INV_ASSIGNED_DT_KEY, ADT_HSPTL_KEY, RPT_SRC_ORG_KEY, 
              INVESTIGATION_KEY, CONDITION_KEY, LDF_GROUP_KEY) ) ;


CREATE TABLE DETAIL_ETHNICITY (
       DETAIL_ETHNICITY_KEY NUMBER(8) NOT NULL,
       PERSON_ETHNICITY_DESC VARCHAR2(100) NULL,
       PERSON_ETHNICITY_CD  VARCHAR2(50) NULL
);

CREATE UNIQUE INDEX XPKDETAIL_ETHNICITY ON DETAIL_ETHNICITY
(
       DETAIL_ETHNICITY_KEY           ASC
);


ALTER TABLE DETAIL_ETHNICITY
       ADD  ( PRIMARY KEY (DETAIL_ETHNICITY_KEY) ) ;


CREATE TABLE DRUG_RESULT (
       DRUG_RESULT_KEY      NUMBER(8) NOT NULL,
       DRUG_RESULT_CD       VARCHAR2(20) NULL,
       DRUG_RESULT_CD_DESC  VARCHAR2(20) NULL,
       DRUG_RESULT_CD_SYS_CD VARCHAR2(20) NULL,
       DRUG_RESULT_CD_SYS_NM VARCHAR2(20) NULL,
       DRUG_RESULT_CD_EFF_DT DATE NULL,
       DRUG_RESULT_CD_END_DT DATE NULL,
       DRUG_NM              VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX XPKDRUG_RESULT ON DRUG_RESULT
(
       DRUG_RESULT_KEY                ASC
);


ALTER TABLE DRUG_RESULT
       ADD  ( PRIMARY KEY (DRUG_RESULT_KEY) ) ;


CREATE TABLE GENERIC_CASE (
       INVESTIGATOR_KEY     NUMBER(8) NOT NULL,
       PHYSICIAN_KEY        NUMBER(8) NOT NULL,
       REPORTER_KEY         NUMBER(8) NOT NULL,
       INV_ASSIGNED_DT_KEY  NUMBER(8) NOT NULL,
       ILLNESS_DURATION     VARCHAR2(20) NULL,
       ILLNESS_DURATION_UNIT VARCHAR2(20) NULL,
       PATIENT_AGE_AT_ONSET NUMBER(8) NULL,
       PATIENT_KEY          NUMBER(8) NOT NULL,
       PATIENT_AGE_AT_ONSET_UNIT VARCHAR2(20) NULL,
       FOOD_HANDLR_IND      VARCHAR2(50) NULL,
       DAYCARE_ASSOCIATION_IND VARCHAR2(50) NULL,
       DETECTION_METHOD     VARCHAR2(20) NULL,
       DETECTION_METHOD_OTHER VARCHAR2(100) NULL,
       ADT_HSPTL_KEY        NUMBER(8) NOT NULL,
       PATIENT_PREGNANCY_STATUS VARCHAR2(50) NULL,
       PELVIC_INFLAMMATORY_DISS_IND VARCHAR2(50) NULL,
       RPT_SRC_ORG_KEY      NUMBER(8) NOT NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       CASE_LOCATION_KEY    NUMBER(8) NOT NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,
       GEOCODING_LOCATION_KEY NUMBER(8)
);

CREATE UNIQUE INDEX XPKGENERIC_CASE ON GENERIC_CASE
(
       INVESTIGATOR_KEY               ASC,
       PHYSICIAN_KEY                  ASC,
       REPORTER_KEY                   ASC,
       INV_ASSIGNED_DT_KEY            ASC,
       PATIENT_KEY                    ASC,
       RPT_SRC_ORG_KEY                ASC,
       ADT_HSPTL_KEY                  ASC,
       INVESTIGATION_KEY              ASC,
       CONDITION_KEY                  ASC,
       CASE_LOCATION_KEY              ASC,
       LDF_GROUP_KEY                  ASC
);


ALTER TABLE GENERIC_CASE
       ADD  ( PRIMARY KEY (INVESTIGATOR_KEY, PHYSICIAN_KEY, 
              REPORTER_KEY, INV_ASSIGNED_DT_KEY, PATIENT_KEY, 
              RPT_SRC_ORG_KEY, ADT_HSPTL_KEY, INVESTIGATION_KEY, 
              CONDITION_KEY, CASE_LOCATION_KEY, LDF_GROUP_KEY) ) ;


CREATE TABLE HEP_MULTI_VALUE_FIELD (
       HEP_MULTI_VAL_GRP_KEY NUMBER(8) NOT NULL,
       HEP_MULTI_VAL_DATA_KEY NUMBER(8) NOT NULL,
       REASON_FOR_TESTING   VARCHAR2(50) NULL,
       DISEASE_DIAGNOSIS    VARCHAR2(50) NULL,
       CNTRY_TRAVELD_OUT_USA_CAN VARCHAR2(50) NULL,
       CNTRY_NPP_TRAVELD_OUT_USA_CAN VARCHAR2(50) NULL,
       HEP_B_CONTACT_TYPE   VARCHAR2(50) NULL,
       TATTOOED_IN6WKMON_LOCATION VARCHAR2(50) NULL,
       PIERCING_IN6WKMON_LOCATION VARCHAR2(50) NULL,
       HEPB_INCARCERATION_FACILITY_TY VARCHAR2(50) NULL,
       HEP_C_CONTACT_TYPE   VARCHAR2(50) NULL,
       HEP_A_CONTACT_TYPE   VARCHAR2(50) NULL
);

CREATE UNIQUE INDEX XPKHEP_MULTI_VALUE_FIELD ON HEP_MULTI_VALUE_FIELD
(
       HEP_MULTI_VAL_GRP_KEY          ASC,
       HEP_MULTI_VAL_DATA_KEY         ASC
);


ALTER TABLE HEP_MULTI_VALUE_FIELD
       ADD  ( PRIMARY KEY (HEP_MULTI_VAL_GRP_KEY, 
              HEP_MULTI_VAL_DATA_KEY) ) ;


CREATE TABLE HEP_MULTI_VALUE_FIELD_GROUP (
       HEP_MULTI_VAL_GRP_KEY NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKHEP_MULTI_VALUE_FIELD_GROUP ON HEP_MULTI_VALUE_FIELD_GROUP
(
       HEP_MULTI_VAL_GRP_KEY          ASC
);


ALTER TABLE HEP_MULTI_VALUE_FIELD_GROUP
       ADD  ( PRIMARY KEY (HEP_MULTI_VAL_GRP_KEY) ) ;


CREATE TABLE HEPATITIS_CASE (
       REPORTER_KEY         NUMBER(8) NOT NULL,
       INVESTIGATOR_KEY     NUMBER(8) NOT NULL,
       PHYSICIAN_KEY        NUMBER(8) NOT NULL,
       PATIENT_KEY          NUMBER(8) NOT NULL,
       ALT_RESULT_DT        DATE NULL    ,
       INV_ASSIGNED_DT_KEY  NUMBER(8) NOT NULL,
       AST_RESULT_DT        DATE NULL,
       RPT_SRC_ORG_KEY      NUMBER(8) NOT NULL,
       CASE_LOCATION_KEY    NUMBER(8) NOT NULL,
       PATIENT_SYMPTOMATIC_IND VARCHAR2(50) NULL,
       PATIENT_JUNDICED_IND VARCHAR2(50) NULL,
       PATIENT_PREGNANT_IND VARCHAR2(50) NULL,
       PATIENT_PREGNANCY_DUE_DT DATE NULL,
       HEP_A_TOTAL_ANTIBODY VARCHAR2(50) NULL,
       HEP_A_IGM_ANTIBODY   VARCHAR2(50) NULL,
       HEP_B_SURFACE_ANTIGEN VARCHAR2(50) NULL,
       HEP_B_TOTAL_ANTIBODY VARCHAR2(50) NULL,
       HEP_B_IGM_ANTIBODY   VARCHAR2(50) NULL,
       HEP_C_TOTAL_ANTIBODY VARCHAR2(50) NULL,
       HEP_D_TOTAL_ANTIBODY VARCHAR2(50) NULL,
       HEP_E_TOTAL_ANTIBODY VARCHAR2(50) NULL,
       ANTIHCV_SIGNAL_TO_CUTOFF_RATIO VARCHAR2(2000) NULL,
       ANTIHCV_SUPPLEMENTAL_ASSAY VARCHAR2(50) NULL,
       HCV_RNA              VARCHAR2(50) NULL,
       ALT_SGPT_RESULT      NUMBER(11,5) NULL,
       ALT_SGPT_RESULT_UPPER_LIMIT NUMBER(11,5) NULL,
       AST_SGOT_RESULT      NUMBER(11,5) NULL,
       AST_SGOT_RESULT_UPPER_LIMIT NUMBER(11,5) NULL,
       HEP_A_EPLINK_IND     VARCHAR2(50) NULL,
       HEP_A_CONTACTED_IND  VARCHAR2(50) NULL,
       D_N_P_EMPLOYEE_IND   VARCHAR2(50) NULL,
       D_N_P_HOUSEHOLD_CONTACT_IND VARCHAR2(50) NULL,
       HEP_A_KEYENT_IN_CHILDCARE_IND VARCHAR2(50) NULL,
       HEPA_MALE_SEX_PARTNER_NBR VARCHAR2(50) NULL,
       HEPA_FEMALE_SEX_PARTNER_NBR VARCHAR2(50) NULL,
       STREET_DRUG_INJECTED_IN_2_6_WK VARCHAR2(50) NULL,
       STREET_DRUG_USED_IN_2_6_WK VARCHAR2(50) NULL,
       TRAVEL_OUT_USA_CAN_IND VARCHAR2(50) NULL,
       HOUSEHOLD_NPP_OUT_USA_CAN VARCHAR2(50) NULL,
       PART_OF_AN_OUTBRK_IND VARCHAR2(50) NULL,
       ASSOCIATED_OUTBRK_TYPE VARCHAR2(50) NULL,
       FOODBORNE_OUTBRK_FOOD_ITEM VARCHAR2(2000) NULL,
       FOODHANDLER_2_WK_PRIOR_ONSET VARCHAR2(50) NULL,
       HEP_A_VACC_RECEIVED_IND VARCHAR2(50) NULL,
       HEP_A_VACC_RECEIVED_DOSE VARCHAR2(50) NULL,
       HEP_A_VACC_LAST_RECEIVED_YR NUMBER(11,5) NULL,
       IMMUNE_GLOBULIN_RECEIVED_IND VARCHAR2(50) NULL,
       GLOBULIN_LAST_RECEIVED_YR DATE NULL,
       HEP_B_CONTACTED_IND  VARCHAR2(50) NULL,
       HEP_B_OTHER_CONTACT_TYPE VARCHAR2(2000) NULL,
       HEPB_STD_TREATED_IND VARCHAR2(50) NULL,
       HEPB_STD_LAST_TREATMENT_YR NUMBER(11,5) NULL,
       STREET_DRUG_INJECTED_IN6WKMON VARCHAR2(50) NULL,
       HEMODIALYSIS_IN_LAST_6WKMON VARCHAR2(50) NULL,
       BLOOD_CONTAMINATION_IN6WKMON VARCHAR2(50) NULL,
       HEPB_BLOOD_RECEIVED_IN6WKMON VARCHAR2(50) NULL,
       HEPB_BLOOD_RECEIVED_DT DATE NULL,
       BLOOD_EXPOSURE_IN_LAST6WKMON VARCHAR2(50) NULL,
       BLOOD_EXPOSURE_IN6WKMON_OTHER VARCHAR2(2000) NULL,
       HEPB_MED_DEN_EMPLOYEE_IN6WKMON VARCHAR2(50) NULL,
       HEPB_MED_DEN_BLOOD_CONTACT_FRQ VARCHAR2(50) NULL,
       HEPB_PUB_SAFETY_WORKER_IN6WKMO VARCHAR2(50) NULL,
       HEPB_PUBSAFETY_BLOODCONTACTFRQ VARCHAR2(50) NULL,
       TATTOOED_IN6WKMON_BEFORE_ONSET VARCHAR2(50) NULL,
       TATTOOED_IN6WKMONOTHERLOCATION VARCHAR2(2000) NULL,
       PIERCING_IN6WKMON_BEFORE_ONSET VARCHAR2(50) NULL,
       PIERCING_IN6WKMONOTHERLOCATION VARCHAR2(2000) NULL,
       DEN_WORK_OR_SURGERY_IN6WKMON VARCHAR2(50) NULL,
       NON_ORAL_SURGERY_IN6WKMON VARCHAR2(50) NULL,
       HSPTLIZD_IN6WKMON_BEFORE_ONSET VARCHAR2(50) NULL,
       LONGTERMCARE_RESIDENT_IN6WKMON VARCHAR2(50) NULL,
       B_INCARCERATED24PLUSHRSIN6WKMO VARCHAR2(50) NULL,
       STREET_DRUG_USED_IN6WKMON VARCHAR2(50) NULL,
       B_INCARCERATED_6PLUS_MON_IND VARCHAR2(50) NULL,
       B_LAST6PLUSMON_INCARCERATE_YR NUMBER(4) NULL,
       BLAST6PLUSMO_INCARCERATEPERIOD NUMBER(4) NULL,
       B_LAST_INCARCERATE_PERIOD_UNIT VARCHAR2(50) NULL,
       HEP_B_VACC_RECEIVED_IND VARCHAR2(50) NULL,
       HEP_B_VACC_SHOT_RECEIVED_NBR VARCHAR2(50) NULL,
       HEP_B_VACC_LAST_RECEIVED_YR NUMBER(4) NULL,
       ANTI_HBSAG_TESTED_IND VARCHAR2(50) NULL,
       ANTI_HBS_POSITIVE_REACTIVE_IND VARCHAR2(50) NULL,
       HEP_C_CONTACTED_IND  VARCHAR2(50) NULL,
       MED_DEN_EMPLOYEE_IN_2WK6MO VARCHAR2(50) NULL,
       PUBLIC_SAFETY_WORKER_IN_2WK6MO VARCHAR2(50) NULL,
       TATTOOED_IN2WK6MO_BEFORE_ONSET VARCHAR2(50) NULL,
       TATTOOED_IN2WK6MO_LOCATION VARCHAR2(50) NULL,
       PIERCING_IN2WK6MO_BEFORE_ONSET VARCHAR2(50) NULL,
       PIERCING_IN2WK6MO_LOCATION VARCHAR2(50) NULL,
       STREET_DRUG_INJECTED_IN_2WK6MO VARCHAR2(50) NULL,
       STREET_DRUG_USED_IN_2WK6MO VARCHAR2(50) NULL,
       HEMODIALYSIS_IN_LAST_2WK6MO VARCHAR2(50) NULL,
       BLOOD_CONTAMINATION_IN_2WK6MO VARCHAR2(50) NULL,
       HEPC_BLOOD_RECEIVED_IN_2WK6MO VARCHAR2(50) NULL,
       BLOOD_EXPOSURE_IN_LAST2WK6MO VARCHAR2(50) NULL,
       BLOOD_EXPOSURE_IN2WK6MO_OTHER VARCHAR2(2000) NULL,
       DEN_WORK_OR_SURGERY_IN2WK6MO VARCHAR2(50) NULL,
       NON_ORAL_SURGERY_IN2WK6MO VARCHAR2(50) NULL,
       HSPTLIZD_IN2WK6MO_BEFORE_ONSET VARCHAR2(50) NULL,
       LONGTERMCARE_RESIDENT_IN2WK6MO VARCHAR2(50) NULL,
       INCARCERATED_24PLUSHRSIN2WK6MO VARCHAR2(50) NULL,
       BLOOD_TRANSFUSION_BEFORE_1992 VARCHAR2(50) NULL,
       ORGAN_TRANSPLANT_BEFORE_1992 VARCHAR2(50) NULL,
       CLOT_FACTOR_CONCERN_BEFORE1987 VARCHAR2(50) NULL,
       LONGTERM_HEMODIALYSIS_IND VARCHAR2(50) NULL,
       EVER_INJECT_NONPRESCRIBED_DRUG VARCHAR2(50) NULL,
       LIFETIME_SEX_PARTNER_NBR NUMBER(15,5) NULL,
       EVER_INCARCERATED_IND VARCHAR2(50) NULL,
       HEPATITIS_CONTACTED_IND VARCHAR2(50) NULL,
       HEPATITIS_CONTACT_TYPE VARCHAR2(50) NULL,
       PATIENT_MOTHER_BORN_OUT_USA VARCHAR2(50) NULL,
       MOTHER_HBSAG_POSITIVE_IND VARCHAR2(50) NULL,
       MOTHR_HBSAG_POSTV_POSTDELIVERY VARCHAR2(50) NULL,
       MOTHER_HBSAG_POSITIVE_DT DATE NULL,
       HEP_B_VACC_DOSE_CHILD_RECEIVED VARCHAR2(50) NULL,
       HEPB_1STVACC_CHILD_RECEIVED_DT DATE NULL,
       HEPB_2NDVACC_CHILD_RECEIVED_DT DATE NULL,
       HEPB_3RDVACC_CHILD_RECEIVED_DT DATE NULL,
       CHILD_RECEIVED_HBIG_IND VARCHAR2(50) NULL,
       CHILD_RECEIVED_HBIG_DT DATE NULL,
       OUTPATIENT_IV_INFUSION_IN6WKMO VARCHAR2(50) NULL,
       OUTPATIENT_IV_INFUSIONIN2WK6MO VARCHAR2(50) NULL,
       HEP_MULTI_VAL_GRP_KEY NUMBER(8) NOT NULL,
       OTHER_REASON_FOR_TESTING VARCHAR2(2000) NULL,
       ADT_HSPTL_KEY        NUMBER(8) NOT NULL,
       HEPATITIS_OTHER_CONTACT_TYPE VARCHAR2(2000) NULL,
       HEPA_OTHER_CONTACT_TYPE VARCHAR2(2000) NULL,
       PIERCING_IN2WK6MO_OTHER_LOCAT VARCHAR2(2000) NULL,
       TATTOOED_IN2WK6MOOTHERLOCATION VARCHAR2(2000) NULL,
       HEP_C_OTHER_CONTACT_TYPE VARCHAR2(2000) NULL,
       HEPC_FEMALE_SEX_PARTNER_NBR VARCHAR2(50) NULL,
       HEPC_MALE_SEX_PARTNER_NBR VARCHAR2(50) NULL,
       HEPC_MED_DEN_BLOOD_CONTACT_FRQ VARCHAR2(50) NULL,
       C_LAST6PLUSMON_INCARCERATE_YR NUMBER(11,5) NULL,
       CLAST6PLUSMO_INCARCERATEPERIOD NUMBER(11,5) NULL,
       C_LAST_INCARCERATE_PERIOD_UNIT VARCHAR2(50) NULL,
       C_INCARCERATED_6PLUS_MON_IND VARCHAR2(50) NULL,
       HEPC_INCARCERATE_FACILITY_TYPE VARCHAR2(50) NULL,
       HEPC_BLOOD_RECEIVED_DT DATE NULL,
       HEPC_PUBSAFETY_BLOODCONTACTFRQ VARCHAR2(50) NULL,
       HEPB_FEMALE_SEX_PARTNER_NBR VARCHAR2(50) NULL,
       HEPB_MALE_SEX_PARTNER_NBR VARCHAR2(50) NULL,
       HEPC_STD_TREATED_IND VARCHAR2(50) NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       HEPC_STD_LAST_TREATMENT_YR NUMBER(11,5) NULL,
       HEPC_MED_DEN_EMPLOYEE_IND VARCHAR2(50) NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,   
       INV_PATIENT_CHART_NBR VARCHAR2(2000) NULL,
       HEP_B_E_ANTIGEN  VARCHAR2(50) NULL,
       HEP_B_DNA  VARCHAR2(50) NULL,
       GEOCODING_LOCATION_KEY NUMBER(8)
);

CREATE UNIQUE INDEX XPKHEPATITIS_CASE ON HEPATITIS_CASE
(
       REPORTER_KEY                   ASC,
       INVESTIGATOR_KEY               ASC,
       PHYSICIAN_KEY                  ASC,
       PATIENT_KEY                    ASC,
       INV_ASSIGNED_DT_KEY            ASC,
       RPT_SRC_ORG_KEY                ASC,
       CASE_LOCATION_KEY              ASC,
       HEP_MULTI_VAL_GRP_KEY          ASC,
       ADT_HSPTL_KEY                  ASC,
       INVESTIGATION_KEY              ASC,
       CONDITION_KEY                  ASC,
       LDF_GROUP_KEY                  ASC
);


ALTER TABLE HEPATITIS_CASE
       ADD  ( PRIMARY KEY (REPORTER_KEY, INVESTIGATOR_KEY, 
              PHYSICIAN_KEY, PATIENT_KEY, INV_ASSIGNED_DT_KEY, RPT_SRC_ORG_KEY, 
              CASE_LOCATION_KEY, HEP_MULTI_VAL_GRP_KEY, ADT_HSPTL_KEY, 
              INVESTIGATION_KEY, CONDITION_KEY, LDF_GROUP_KEY) ) ;


CREATE TABLE INVESTIGATION (
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       CASE_OID             NUMBER(20) NULL,
       CASE_UID             NUMBER(20) NULL,
       INV_LOCAL_ID         VARCHAR2(50) NULL,
       INV_SHARE_IND        VARCHAR2(50) NULL,
       OUTBREAK_NAME        VARCHAR2(100) NULL,
       INVESTIGATION_STATUS VARCHAR2(50) NULL,
       INV_CASE_STATUS      VARCHAR2(50) NULL,
       CASE_TYPE            VARCHAR2(50) NULL,
       INV_COMMENTS         VARCHAR2(2000) NULL,
       JURISDICTION_CD      VARCHAR2(20) NULL,
       JURISDICTION_NM      VARCHAR2(100) NULL,
       EARLIEST_RPT_TO_PHD_DT DATE NULL,
       ILLNESS_ONSET_DT     DATE NULL,
       ILLNESS_END_DT       DATE NULL,
       INV_RPT_DT           DATE NULL,
       INV_START_DT         DATE NULL,
       RPT_SRC_CD_DESC      VARCHAR2(100) NULL,
       EARLIEST_RPT_TO_CNTY_DT DATE NULL,
       EARLIEST_RPT_TO_STATE_DT DATE NULL,
       DIE_FRM_THIS_ILLNESS_IND VARCHAR2(50) NULL,
       CASE_RPT_MMWR_WK     NUMBER(8) NULL,
       CASE_RPT_MMWR_YR     NUMBER(8) NULL,
       DISEASE_IMPORTED_IND VARCHAR2(50) NULL,
       IMPORT_FRM_CNTRY     VARCHAR2(50) NULL,
       IMPORT_FRM_STATE     VARCHAR2(50) NULL,
       IMPORT_FRM_CNTY      VARCHAR2(50) NULL,
       IMPORT_FRM_CITY      VARCHAR2(2000) NULL,
       EARLIEST_RPT_TO_CDC_DT DATE NULL,
       RPT_SRC_CD           VARCHAR2(50) NULL,
       IMPORT_FRM_CNTRY_CD  VARCHAR2(50) NULL,
       IMPORT_FRM_STATE_CD  VARCHAR2(50) NULL,
       IMPORT_FRM_CNTY_CD   VARCHAR2(50) NULL,
       IMPORT_FRM_CITY_CD   VARCHAR2(50) NULL,
       DIAGNOSIS_DT         DATE NULL,
       HSPTL_ADMISSION_DT   DATE NULL,
       HSPTL_DISCHARGE_DT   DATE NULL,
       HSPTL_DURATION_DAYS  NUMBER(20) NULL,
       OUTBREAK_IND         VARCHAR2(50) NULL,
       HSPTLIZD_IND         VARCHAR2(50) NULL,
       INV_STATE_CASE_ID    VARCHAR2(100) NULL,
       CITY_COUNTY_CASE_NBR varchar2(100) NULL,
       TRANSMISSION_MODE    VARCHAR2(50) NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       LAST_CHG_TIME             DATE NULL,
       PATIENT_PREGNANT_IND varchar2(50) NULL,
       DAYCARE_ASSOCIATION_IND varchar2(50) NULL,
       FOOD_HANDLR_IND      varchar2(50) NULL,
       INVESTIGATION_DEATH_DATE DATE NULL
       );

CREATE UNIQUE INDEX XPKINVESTIGATION ON INVESTIGATION
(
       INVESTIGATION_KEY              ASC
);


ALTER TABLE INVESTIGATION
       ADD  ( PRIMARY KEY (INVESTIGATION_KEY) ) ;


CREATE TABLE LAB_RESULT_COMMENT (
       LAB_RESULT_COMMENT_KEY NUMBER(8) NOT NULL,
       LAB_RESULT_COMMENTS  VARCHAR2(2000) NULL,
       RESULT_COMMENT_GRP_KEY NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_LABRSLTCMT_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKLAB_RESULT_COMMENT ON LAB_RESULT_COMMENT
(
       LAB_RESULT_COMMENT_KEY         ASC,
       RESULT_COMMENT_GRP_KEY         ASC
);


ALTER TABLE LAB_RESULT_COMMENT
       ADD  ( PRIMARY KEY (LAB_RESULT_COMMENT_KEY, 
              RESULT_COMMENT_GRP_KEY) ) ;


CREATE TABLE LAB_RESULT_CONDITION (
       LAB_RESULT_GRP_KEY   NUMBER(8) NOT NULL,
       CONDITION_KEY        NUMBER(8) NULL
);

CREATE UNIQUE INDEX XPKLAB_RESULT_CONDITION ON LAB_RESULT_CONDITION
(
       LAB_RESULT_GRP_KEY             ASC
);


ALTER TABLE LAB_RESULT_CONDITION
       ADD  ( PRIMARY KEY (LAB_RESULT_GRP_KEY) ) ;


CREATE TABLE LAB_RESULT_GROUP (
       LAB_RESULT_GRP_KEY   NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKLAB_RESULT_GROUP ON LAB_RESULT_GROUP
(
       LAB_RESULT_GRP_KEY             ASC
);


ALTER TABLE LAB_RESULT_GROUP
       ADD  ( PRIMARY KEY (LAB_RESULT_GRP_KEY) ) ;


CREATE TABLE LAB_RESULT_VAL (
       TEST_RESULT_GRP_KEY  NUMBER(8) NOT NULL,
       NUMERIC_RESULT       VARCHAR2(50) NULL,
       RESULT_UNITS         VARCHAR2(50) NULL,
       LAB_RESULT_TXT_VAL   VARCHAR2(2000) NULL,
       REF_RANGE_FRM        VARCHAR2(20) NULL,
       REF_RANGE_TO         VARCHAR2(20) NULL,
       TEST_RESULT_VAL_CD   VARCHAR2(20) NULL,
       TEST_RESULT_VAL_CD_DESC VARCHAR2(300) NULL,
       TEST_RESULT_VAL_CD_SYS_CD VARCHAR2(100) NULL,
       TEST_RESULT_VAL_CD_SYS_NM VARCHAR2(100) NULL,
       ALT_RESULT_VAL_CD    VARCHAR2(50) NULL,
       ALT_RESULT_VAL_CD_DESC VARCHAR2(100) NULL,
       ALT_RESULT_VAL_CD_SYS_CD VARCHAR2(50) NULL,
       ALT_RESULT_VAL_CD_SYS_NM VARCHAR2(100) NULL,
       TEST_RESULT_VAL_KEY  NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       FROM_TIME	DATE NULL,
       TO_TIME    DATE NULL,
       CONSTRAINT CHK_LABRESLTVAL_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKLAB_RESULT_VAL ON LAB_RESULT_VAL
(
       TEST_RESULT_GRP_KEY            ASC,
       TEST_RESULT_VAL_KEY            ASC
);


ALTER TABLE LAB_RESULT_VAL
       ADD  ( PRIMARY KEY (TEST_RESULT_GRP_KEY, TEST_RESULT_VAL_KEY) ) ;


CREATE TABLE LAB_RPT_USER_COMMENT (
       USER_COMMENT_KEY     NUMBER(8) NOT NULL,
       USER_RPT_COMMENTS    VARCHAR2(2000) NULL,
       COMMENTS_FOR_ELR_DT  DATE NULL,
       USER_COMMENT_CREATED_BY NUMBER(20) NULL,
       LAB_TEST_KEY         NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_LABRPTUSRCMT_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKLAB_RPT_USER_COMMENT ON LAB_RPT_USER_COMMENT
(
       USER_COMMENT_KEY               ASC,
       LAB_TEST_KEY                   ASC
);


ALTER TABLE LAB_RPT_USER_COMMENT
       ADD  ( PRIMARY KEY (USER_COMMENT_KEY, LAB_TEST_KEY) ) ;


CREATE TABLE LAB_TEST (
       LAB_TEST_STATUS      VARCHAR2(50) NULL,
       LAB_TEST_KEY         NUMBER(8) NOT NULL,
       LAB_RPT_LOCAL_ID     VARCHAR2(50) NULL,
       TEST_METHOD_CD       VARCHAR2(20) NULL,
       TEST_METHOD_CD_DESC  VARCHAR2(100) NULL,
       LAB_RPT_SHARE_IND    VARCHAR2(50) NULL,
       LAB_TEST_CD          VARCHAR2(1000) NULL,
       ELR_IND              VARCHAR2(50) NULL,
       LAB_RPT_UID          NUMBER NULL,
       LAB_TEST_CD_DESC     VARCHAR2(2000) NULL,
       INTERPRETATION_FLG   VARCHAR2(20) NULL,
       LAB_RPT_RECEIVED_BY_PH_DT DATE NULL,
       LAB_RPT_CREATED_BY   NUMBER(20) NULL,
       REASON_FOR_TEST_DESC VARCHAR2(100) NULL,
       REASON_FOR_TEST_CD   VARCHAR2(20) NULL,
       LAB_RPT_LAST_UPDATE_BY NUMBER(20) NULL,
       LAB_TEST_DT          DATE NULL,
       LAB_RPT_CREATED_DT   DATE NULL,
       LAB_TEST_TYPE        VARCHAR2(50) NULL,
       LAB_RPT_LAST_UPDATE_DT DATE NULL,
       JURISDICTION_CD      VARCHAR2(20) NULL,
       LAB_TEST_CD_SYS_CD   VARCHAR2(50) NULL,
       LAB_TEST_CD_SYS_NM   VARCHAR2(100) NULL,
       JURISDICTION_NM      VARCHAR2(50) NULL,
       OID                  NUMBER(20) NULL,
       ALT_LAB_TEST_CD      VARCHAR2(50) NULL,
       LAB_RPT_STATUS       CHAR(1) NULL,
       DANGER_CD_DESC       VARCHAR2(100) NULL,
       ALT_LAB_TEST_CD_DESC VARCHAR2(1000) NULL,
       ACCESSION_NBR        VARCHAR2(100) NULL,
       SPECIMEN_SRC         VARCHAR2(50) NULL,
       PRIORITY_CD          VARCHAR2(20) NULL,
       ALT_LAB_TEST_CD_SYS_CD VARCHAR2(50) NULL,
       ALT_LAB_TEST_CD_SYS_NM VARCHAR2(100) NULL,
       SPECIMEN_SITE        VARCHAR2(20) NULL,
       SPECIMEN_DETAILS     VARCHAR2(1000) NULL,
       DANGER_CD            VARCHAR2(20) NULL,
       SPECIMEN_COLLECTION_VOL VARCHAR2(20) NULL,
       SPECIMEN_COLLECTION_VOL_UNIT VARCHAR2(50) NULL,
       SPECIMEN_DESC        VARCHAR2(1000) NULL,
       SPECIMEN_SITE_DESC   VARCHAR2(100) NULL,
       CLINICAL_INFORMATION VARCHAR2(1000) NULL,
       LAB_TEST_UID         NUMBER(20) NULL,
       ROOT_ORDERED_TEST_PNTR NUMBER(20) NULL,
       PARENT_TEST_PNTR     NUMBER(20) NULL,
       LAB_TEST_PNTR        NUMBER(20) NULL,
       SPECIMEN_ADD_TIME    DATE NULL,
       SPECIMEN_LAST_CHANGE_TIME DATE NULL,
       SPECIMEN_COLLECTION_DT DATE NULL,
       SPECIMEN_NM          VARCHAR2(100) NULL,
       ROOT_ORDERED_TEST_NM VARCHAR2(1000) NULL,
       PARENT_TEST_NM       VARCHAR2(1000) NULL,
       TRANSCRIPTIONIST_NAME VARCHAR2(300) NULL,
       TRANSCRIPTIONIST_ID  VARCHAR2(100) NULL,
       TRANSCRIPTIONIST_ASS_AUTH_CD VARCHAR2(100) NULL,
       TRANSCRIPTIONIST_ASS_AUTH_TYPE VARCHAR2(100) NULL,
       ASSISTANT_INTERPRETER_NAME VARCHAR2(300) NULL,
       ASSISTANT_INTERPRETER_ID VARCHAR2(100) NULL,
       ASSISTANT_INTER_ASS_AUTH_CD VARCHAR2(100) NULL,
       ASSISTANT_INTER_ASS_AUTH_TYPE VARCHAR2(100) NULL,
       RESULT_INTERPRETER_NAME VARCHAR2(300) NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_LABTEST_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKLAB_TEST ON LAB_TEST
(
       LAB_TEST_KEY                   ASC
);


ALTER TABLE LAB_TEST
       ADD  ( PRIMARY KEY (LAB_TEST_KEY) ) ;


CREATE TABLE LAB_TEST_RESULT (
       LAB_TEST_KEY         NUMBER(8) NOT NULL,
       RESULT_COMMENT_GRP_KEY NUMBER(8) NOT NULL,
       TEST_RESULT_GRP_KEY  NUMBER(8) NOT NULL,
       PERFORMING_LAB_KEY   NUMBER(8) NOT NULL,
       PATIENT_KEY          NUMBER(8) NOT NULL,
       COPY_TO_PROVIDER_KEY NUMBER(8) NOT NULL,
       LAB_TEST_TECHNICIAN_KEY NUMBER(8) NOT NULL,
       SPECIMEN_COLLECTOR_KEY NUMBER(8) NOT NULL,
       ORDERING_ORG_KEY     NUMBER(8) NOT NULL,
       REPORTING_LAB_KEY    NUMBER(8) NOT NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       LAB_RPT_DT_KEY       NUMBER(8) NOT NULL,
       MORB_RPT_KEY         NUMBER(8) NOT NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,
       ORDERING_PROVIDER_KEY NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_LABTSTRESULT_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKLAB_TEST_RESULT ON LAB_TEST_RESULT
(
       RESULT_COMMENT_GRP_KEY         ASC,
       TEST_RESULT_GRP_KEY            ASC,
       PERFORMING_LAB_KEY             ASC,
       PATIENT_KEY                    ASC,
       COPY_TO_PROVIDER_KEY           ASC,
       LAB_TEST_TECHNICIAN_KEY        ASC,
       SPECIMEN_COLLECTOR_KEY         ASC,
       LAB_TEST_KEY                   ASC,
       REPORTING_LAB_KEY              ASC,
       ORDERING_ORG_KEY               ASC,
       CONDITION_KEY                  ASC,
       LAB_RPT_DT_KEY                 ASC,
       MORB_RPT_KEY                   ASC,
       INVESTIGATION_KEY              ASC,
       LDF_GROUP_KEY                  ASC,
       ORDERING_PROVIDER_KEY          ASC
);


ALTER TABLE LAB_TEST_RESULT
       ADD  ( PRIMARY KEY (RESULT_COMMENT_GRP_KEY, 
              TEST_RESULT_GRP_KEY, PERFORMING_LAB_KEY, PATIENT_KEY, 
              COPY_TO_PROVIDER_KEY, LAB_TEST_TECHNICIAN_KEY, 
              SPECIMEN_COLLECTOR_KEY, LAB_TEST_KEY, REPORTING_LAB_KEY, 
              ORDERING_ORG_KEY, CONDITION_KEY, LAB_RPT_DT_KEY, 
              MORB_RPT_KEY, INVESTIGATION_KEY, LDF_GROUP_KEY, 
              ORDERING_PROVIDER_KEY) ) ;


CREATE TABLE LDF_DATA (
       LDF_DATA_KEY         NUMBER(8) NOT NULL,
       LDF_GROUP_KEY        NUMBER(8) NULL,
       LDF_COLUMN_TYPE      VARCHAR2(300) NULL,
       CONDITION_CD         VARCHAR2(10) NULL,
       CONDITION_DESC_TXT   VARCHAR2(100) NULL,
       CDC_NATIONAL_ID      VARCHAR2(50) NULL,
       CLASS_CD             VARCHAR2(10) NULL,
       CODE_SET_NM          VARCHAR2(20) NULL,
       BUSINESS_OBJ_NM      VARCHAR2(50) NULL,
       DISPLAY_ORDER_NUMBER NUMBER(10) NULL,
       FIELD_SIZE           VARCHAR2(10) NULL,
       LDF_VALUE            VARCHAR2(100) NULL,
       IMPORT_VERSION_NBR   NUMBER(20) NULL,
       LABEL_TXT            VARCHAR2(300) NULL,
       LDF_OID              VARCHAR2(50) NULL,
       NND_IND              VARCHAR(1) NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_LDFDATA_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKLDF_DATA ON LDF_DATA
(
       LDF_DATA_KEY                   ASC
);


ALTER TABLE LDF_DATA
       ADD  ( PRIMARY KEY (LDF_DATA_KEY) ) ;


CREATE TABLE LDF_GROUP (
       LDF_GROUP_KEY        NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKLDF_GROUP ON LDF_GROUP
(
       LDF_GROUP_KEY                  ASC
);


ALTER TABLE LDF_GROUP
       ADD  ( PRIMARY KEY (LDF_GROUP_KEY) ) ;


CREATE TABLE LOCATION (
       LOCATION_KEY         NUMBER(8) NOT NULL,
       NATION_CD            VARCHAR2(50) NULL,
       NATION_NM            VARCHAR2(300) NULL,
       STATE_FIPS           VARCHAR2(50) NULL,
       STATE_SHORT_DESC     VARCHAR2(100) NULL,
       CNTY_FIPS            VARCHAR2(50) NULL,
       CNTY_SHORT_DESC      VARCHAR2(300) NULL,
       CITY_FIPS            VARCHAR2(100) NULL,
       CITY_SHORT_DESC      VARCHAR2(100) NULL,
       ZIP_CD_5             VARCHAR2(20) NULL,
       STREET_ADDR_1        VARCHAR2(100) NULL,
       STREET_ADDR_2        VARCHAR2(100) NULL,
       ZIP_SHORT_DESC       VARCHAR2(300) NULL,
       WITHIN_CITY_LIMITS    varchar2(10) NULL
);

CREATE UNIQUE INDEX XPKLOCATION ON LOCATION
(
       LOCATION_KEY                   ASC
);


ALTER TABLE LOCATION
       ADD  ( PRIMARY KEY (LOCATION_KEY) ) ;


CREATE TABLE MEASLES_CASE (
       INV_RPT_DT_KEY       NUMBER(8) NOT NULL,
       INV_ASSIGNED_DT_KEY  NUMBER(8) NOT NULL,
       INVESTIGATOR_KEY     NUMBER(8) NOT NULL,
       PATIENT_KEY          NUMBER(8) NOT NULL,
       PHYSICIAN_KEY        NUMBER(8) NOT NULL,
       RPT_SRC_ORG_KEY      NUMBER(8) NOT NULL,
       REPORTER_KEY         NUMBER(8) NOT NULL,
       PATIENT_HAVE_RASH_IND VARCHAR2(50) NULL,
       RASH_ONSET_DT        DATE NULL,
       RASH_LAST_DAY_NBR    NUMBER(11,5) NULL,
       PATIENT_HAVE_FEVER_IND VARCHAR2(50) NULL,
       RASH_GENERALIZED_IND VARCHAR2(50) NULL,
       HIGHEST_TEMPERATURE_MEASURED NUMBER(11,5) NULL,
       HIGHEST_TEMPERATURE_UNIT VARCHAR2(50) NULL,
       COUGH_IND            VARCHAR2(50) NULL,
       CROUP_IND            VARCHAR2(50) NULL,
       CORYZA_IND           VARCHAR2(50) NULL,
       CONJUNCTIVITIS_IND   VARCHAR2(50) NULL,
       OTTIS_MEDIA_IND      VARCHAR2(50) NULL,
       DIARRHEA_IND         VARCHAR2(50) NULL,
       PNEUMONIA_IND        VARCHAR2(50) NULL,
       ENCEPHALITIS_IND     VARCHAR2(50) NULL,
       THROMBOCYTOPENIA_IND VARCHAR2(50) NULL,
       OTHER_COMPLICATION_IND VARCHAR2(50) NULL,
       OTHER_COMPLICATIONS  VARCHAR2(2000) NULL,
       IGM_SPECIMEN_TAKEN_DT DATE NULL,
       IGM_TEST_RESULT      VARCHAR2(50) NULL,
       IGG_ACUTE_SPECIMEN_TAKEN_DT DATE NULL,
       IGG_CONVALESCENT_SPECIMEN_DT DATE NULL,
       IGG_TEST_RESULT      VARCHAR2(50) NULL,
       OTHER_LAB_TEST_DONE_IND VARCHAR2(50) NULL,
       OTHER_LAB_TEST_DESC  VARCHAR2(2000) NULL,
       OTHER_LAB_TEST_DT    DATE NULL,
       OTHER_LAB_TEST_RESULT VARCHAR2(2000) NULL,
       SPECIMEN_TO_CDC_GENOTYPING_IND VARCHAR2(50) NULL,
       CONTAIN_MEASLES_VACC_RECEIVD VARCHAR2(50) NULL,
       NO_MEASLES_VACC_REASON VARCHAR2(50) NULL,
       NBR_DOSE_RECEIVED_PRIOR_1BDAY NUMBER(11,5) NULL,
       NBR_DOSE_RECEIVED_SINCE_1BDAY NUMBER(11,5) NULL,
       TRANSMISSION_SETTING VARCHAR2(50) NULL,
       AGE_AND_SETTING_VERIFIED_IND VARCHAR2(50) NULL,
       PATIENT_RESIDE_IN_USA_IND VARCHAR2(50) NULL,
       EPI_LINKED_TOANOTHER_CASE_IND VARCHAR2(50) NULL,
       FEVER_ONSET_DT       DATE NULL,
       GENOTYPING_DT        DATE NULL,
       IGM_TESTING_PERFORMED_IND VARCHAR2(50) NULL,
       IGG_TESTING_PERFORMED_IND VARCHAR2(50) NULL,
       RASH_OCCUR_IN_18DAYS_ENTER_USA VARCHAR2(50) NULL,
       SRC_OF_INFECTION     VARCHAR2(2000) NULL,
       MEASLES_SPECIMEN_TYPE VARCHAR2(2000) NULL,
       BEFORE_B_DAY_VACCINE_REASON VARCHAR2(50) NULL,
       AFTER_B_DAY_VACCINE_REASON VARCHAR2(50) NULL,
       ADT_HSPTL_KEY        NUMBER(8) NOT NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       LAB_MEASLES_TEST_DONE_IND VARCHAR2(50) NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       CASE_LOCATION_KEY    NUMBER(8) NOT NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,
       HEPATITIS_IND        VARCHAR2(50) NULL,
       CASE_TRACEABLE_IND   VARCHAR2(50) NULL,
       RUBELLA_CASE_TRACEABLE_IND VARCHAR2(50) NULL,	
       GENOTYPE_SEQUENCED_MEASLES VARCHAR2(50) NULL,
       GENOTYPE_ID_MEASLES VARCHAR2(50) NULL,
       GENOTYPE_OTHER_ID_MEASLES VARCHAR2(50) NULL,
       GEOCODING_LOCATION_KEY NUMBER(8));

CREATE UNIQUE INDEX XPKMEASLES_CASE ON MEASLES_CASE
(
       INV_RPT_DT_KEY                 ASC,
       INV_ASSIGNED_DT_KEY            ASC,
       INVESTIGATOR_KEY               ASC,
       PATIENT_KEY                    ASC,
       PHYSICIAN_KEY                  ASC,
       RPT_SRC_ORG_KEY                ASC,
       REPORTER_KEY                   ASC,
       ADT_HSPTL_KEY                  ASC,
       INVESTIGATION_KEY              ASC,
       CONDITION_KEY                  ASC,
       CASE_LOCATION_KEY              ASC,
       LDF_GROUP_KEY                  ASC
);


ALTER TABLE MEASLES_CASE
       ADD  ( PRIMARY KEY (INV_RPT_DT_KEY, INV_ASSIGNED_DT_KEY, 
              INVESTIGATOR_KEY, PATIENT_KEY, PHYSICIAN_KEY, 
              RPT_SRC_ORG_KEY, REPORTER_KEY, ADT_HSPTL_KEY, 
              INVESTIGATION_KEY, CONDITION_KEY, CASE_LOCATION_KEY, 
              LDF_GROUP_KEY) ) ;


CREATE TABLE MORB_RPT_USER_COMMENT (
       USER_COMMENT_KEY     NUMBER(8) NOT NULL,
       MORB_RPT_KEY         NUMBER(8) NOT NULL,
       EXTERNAL_MORB_RPT_COMMENTS VARCHAR2(2000) NULL,
       USER_COMMENTS_BY     NUMBER(20) NULL,
       USER_COMMENTS_DT     DATE NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_MORBRPTUSRCM_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKMORB_RPT_USER_COMMENT ON MORB_RPT_USER_COMMENT
(
       USER_COMMENT_KEY               ASC,
       MORB_RPT_KEY                   ASC
);


ALTER TABLE MORB_RPT_USER_COMMENT
       ADD  ( PRIMARY KEY (USER_COMMENT_KEY, MORB_RPT_KEY) ) ;


CREATE TABLE MORBIDITY_REPORT (
       MORB_RPT_KEY         NUMBER(8) NOT NULL,
       MORB_RPT_UID         NUMBER(20) NULL,
       MORB_RPT_LOCAL_ID    VARCHAR2(50) NULL,
       MORB_RPT_SHARE_IND   CHAR(1) NULL,
       MORB_RPT_OID         NUMBER(20) NULL,
       MORB_RPT_TYPE        VARCHAR2(50) NULL,
       MORB_RPT_COMMENTS    VARCHAR2(2000) NULL,
       MORB_RPT_DELIVERY_METHOD VARCHAR2(50) NULL,
       SUSPECT_FOOD_WTRBORNE_ILLNESS VARCHAR2(50) NULL,
       MORB_RPT_OTHER_SPECIFY VARCHAR2(2000) NULL,
       NURSING_HOME_ASSOCIATE_IND VARCHAR2(50) NULL,
       JURISDICTION_CD      VARCHAR2(20) NULL,
       JURISDICTION_NM      VARCHAR2(100) NULL,
       HEALTHCARE_ORG_ASSOCIATE_IND VARCHAR2(50) NULL,
       MORB_RPT_CREATE_BY   NUMBER(20) NULL,
       MORB_RPT_LAST_UPDATE_DT DATE NULL,
       MORB_RPT_LAST_UPDATE_BY NUMBER(20) NULL,
       DIAGNOSIS_DT         DATE NULL,
       HSPTL_ADMISSION_DT   DATE NULL,
       PH_RECEIVE_DT        DATE NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_MORBREPORT_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKMORBIDITY_REPORT ON MORBIDITY_REPORT
(
       MORB_RPT_KEY                   ASC
);


ALTER TABLE MORBIDITY_REPORT
       ADD  ( PRIMARY KEY (MORB_RPT_KEY) ) ;


CREATE TABLE MORBIDITY_REPORT_EVENT (
       NURSING_HOME_KEY     NUMBER(8) NOT NULL,
       HEALTH_CARE_KEY      NUMBER(8) NOT NULL,
       MORB_RPT_CREATE_DT_KEY NUMBER(8) NOT NULL,
       HSPTL_DISCHARGE_DT_KEY NUMBER(8) NOT NULL,
       ILLNESS_ONSET_DT_KEY NUMBER(8) NOT NULL,
       MORB_RPT_SRC_ORG_KEY NUMBER(8) NOT NULL,
       PATIENT_KEY          NUMBER(8) NOT NULL,
       MORB_RPT_KEY         NUMBER(8) NOT NULL,
       MORB_RPT_DT_KEY      NUMBER(8) NOT NULL,
       PHYSICIAN_KEY        NUMBER(8) NOT NULL,
       REPORTER_KEY         NUMBER(8) NOT NULL,
       HSPTL_KEY            NUMBER(8) NOT NULL,
       MORB_RPT_COUNT       NUMBER NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_MORBRPTEVENT_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKMORBIDITY_REPORT_EVENT ON MORBIDITY_REPORT_EVENT
(
       NURSING_HOME_KEY               ASC,
       HEALTH_CARE_KEY                ASC,
       MORB_RPT_CREATE_DT_KEY         ASC,
       HSPTL_DISCHARGE_DT_KEY         ASC,
       ILLNESS_ONSET_DT_KEY           ASC,
       MORB_RPT_SRC_ORG_KEY           ASC,
       PATIENT_KEY                    ASC,
       MORB_RPT_KEY                   ASC,
       MORB_RPT_DT_KEY                ASC,
       REPORTER_KEY                   ASC,
       PHYSICIAN_KEY                  ASC,
       HSPTL_KEY                      ASC,
       INVESTIGATION_KEY              ASC,
       CONDITION_KEY                  ASC,
       LDF_GROUP_KEY                  ASC
);


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( PRIMARY KEY (NURSING_HOME_KEY, HEALTH_CARE_KEY, 
              MORB_RPT_CREATE_DT_KEY, HSPTL_DISCHARGE_DT_KEY, 
              ILLNESS_ONSET_DT_KEY, MORB_RPT_SRC_ORG_KEY, PATIENT_KEY, 
              MORB_RPT_KEY, MORB_RPT_DT_KEY, REPORTER_KEY, 
              PHYSICIAN_KEY, HSPTL_KEY, INVESTIGATION_KEY, 
              CONDITION_KEY, LDF_GROUP_KEY) ) ;


CREATE TABLE NAME (
       NAME_KEY             NUMBER(8) NOT NULL,
       PERSON_LAST_NM       VARCHAR2(50) NULL,
       PERSON_FIRST_NM      VARCHAR2(50) NULL,
       PATIENT_NM_TYPE      VARCHAR2(50) NULL,
       PATIENT_NM_PREFIX    VARCHAR2(20) NULL,
       PATIENT_MIDDLE_NM    VARCHAR2(50) NULL,
       PATIENT_NM_SUFFIX    VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX XPKNAME ON NAME
(
       NAME_KEY                       ASC
);


ALTER TABLE NAME
       ADD  ( PRIMARY KEY (NAME_KEY) ) ;


CREATE TABLE NOTIFICATION (
       NOTIFICATION_STATUS  VARCHAR2(20) NULL,
       NOTIFICATION_COMMENTS VARCHAR2(1000) NULL,
       NOTIFICATION_KEY     NUMBER(8) NOT NULL,
       NOTIFICATION_LOCAL_ID VARCHAR2(50) NULL,
       NOTIFICATION_SUBMITTED_BY NUMBER(20) NULL
);

CREATE UNIQUE INDEX XPKNOTIFICATION ON NOTIFICATION
(
       NOTIFICATION_KEY               ASC
);


ALTER TABLE NOTIFICATION
       ADD  ( PRIMARY KEY (NOTIFICATION_KEY) ) ;


CREATE TABLE NOTIFICATION_EVENT (
       PATIENT_KEY          NUMBER(8) NOT NULL,
       NOTIFICATION_SENT_DT_KEY NUMBER(8) NOT NULL,
       NOTIFICATION_SUBMIT_DT_KEY NUMBER(8) NOT NULL,
       NOTIFICATION_KEY     NUMBER(8) NOT NULL,
       COUNT                NUMBER(8) NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKNOTIFICATION_EVENT ON NOTIFICATION_EVENT
(
       PATIENT_KEY                    ASC,
       NOTIFICATION_SENT_DT_KEY       ASC,
       NOTIFICATION_SUBMIT_DT_KEY     ASC,
       INVESTIGATION_KEY              ASC,
       CONDITION_KEY                  ASC,
       NOTIFICATION_KEY               ASC
);



ALTER TABLE NOTIFICATION_EVENT
       ADD  ( PRIMARY KEY (PATIENT_KEY, NOTIFICATION_SENT_DT_KEY, 
              NOTIFICATION_SUBMIT_DT_KEY, INVESTIGATION_KEY, 
              CONDITION_KEY, NOTIFICATION_KEY) ) ;


CREATE TABLE ORG_CONTACT (
       CONTACT_KEY          NUMBER(8) NOT NULL,
       ORG_KEY              NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_ORGCONTACT_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKORG_CONTACT ON ORG_CONTACT
(
       CONTACT_KEY                    ASC,
       ORG_KEY                        ASC
);


ALTER TABLE ORG_CONTACT
       ADD  ( PRIMARY KEY (CONTACT_KEY, ORG_KEY) ) ;


CREATE TABLE ORG_ID (
       ORG_ID_TYPE_CD       VARCHAR2(50) NULL,
       ORG_ID_TYPE_DESC     VARCHAR2(100) NULL,
       ORG_ID_ASSIGN_AUTH_CD VARCHAR2(50) NULL,
       ORG_ID_ASSIGN_AUTH_DESC VARCHAR2(100) NULL,
       ORG_KEY              NUMBER(8) NOT NULL,
       ORG_ID_VAL           VARCHAR2(100) NULL,
       ORG_ID_KEY           NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_ORGID_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKORG_ID ON ORG_ID
(
       ORG_KEY                        ASC,
       ORG_ID_KEY                     ASC
);


ALTER TABLE ORG_ID
       ADD  ( PRIMARY KEY (ORG_KEY, ORG_ID_KEY) ) ;


CREATE TABLE ORG_LOCATION (
       ORG_KEY              NUMBER(8) NOT NULL,
       LOCATION_KEY         NUMBER(8) NOT NULL,
       ORG_LOCATION_EFF_DT  DATE NULL,
       ADDR_TYPE            VARCHAR2(50) NULL,
       ADDRESS_USE          VARCHAR2(50) NULL,
       ADDRESS_TYPE_DESC    VARCHAR2(100) NULL,
       ADDRESS_COMMENTS     VARCHAR2(2000) NULL,
       ORG_LOCATION_KEY     NUMBER(8) NOT NULL,
       GEOCODING_LOCATION_KEY NUMBER(8),
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_ORGLOC_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE TABLE GEOCODING_LOCATION(
GEOCODING_LOCATION_KEY NUMBER(8),
	 ADD_TIME DATE ,
	 ADD_USER_ID NUMBER(20) NULL, 
	 CENSUS_BLOCK_ID VARCHAR2(20) NULL ,
	 CITY VARCHAR2(50) NULL ,
	 CNTY_CD VARCHAR2(10) NULL ,
	 COUNTRY VARCHAR2(50) NULL ,
	 DATA_TYPE VARCHAR2(1) NULL ,
	 ENTITY_CLASS_CD VARCHAR2(10) NULL, 
	 ENTITY_UID  NUMBER(20) NULL ,
	 FIRM_NAME VARCHAR2(50)  NULL ,
	 GEOCODING_RESULT_UID NUMBER(20) NULL,
	 HOUSE_NUMBER VARCHAR2(20)  NULL ,
	 LAST_CHG_TIME DATE ,
	 LAST_CHG_USER_ID NUMBER(20) NULL ,
	 LATITUDE NUMBER(20) NULL ,
	 LOCATION_QUALITY_CD VARCHAR2(10) NULL ,
	 LONGITUDE NUMBER(20) NULL ,
	 MATCH_CD VARCHAR2(10) NULL ,
	 NEXT_SCORE_COUNT NUMBER(5,2) NULL ,
	 NEXT_SCORE_DIFF NUMBER(5, 2) NULL ,
	 NUM_MATCHES NUMBER(2) NULL ,
	 POSTAL_LOCATOR_UID NUMBER(20) NULL,
	 POSTFIX_DIRECTION VARCHAR2(10) NULL ,
	 PREFIX_DIRECTION VARCHAR2(10) NULL ,
	 RESULT_TYPE VARCHAR2(1) NULL ,
	 SCORE NUMBER (11, 2) NULL ,
	 SEGMENT_ID VARCHAR2(20)  NULL ,
	 STATE VARCHAR2(2) NULL ,
	 STREET_ADDR1 VARCHAR2(100) NULL ,
	 STREET_ADDR2 VARCHAR2(100)  NULL ,
	 STREET_NAME VARCHAR2(50) NULL ,
	 STREET_TYPE VARCHAR2(10) NULL ,
	 UNIT_NUMBER VARCHAR2(20) NULL ,
	 UNIT_TYPE VARCHAR2(10) NULL ,
	 ZIP4_CD VARCHAR2(10) NULL ,
	 ZIP5_CD VARCHAR2(10) NULL ,
	 ZIP_CD VARCHAR2(10) NULL 
);
CREATE UNIQUE INDEX XPKORG_LOCATION ON ORG_LOCATION
(
       ORG_KEY                        ASC,
       LOCATION_KEY                   ASC,
       ORG_LOCATION_KEY               ASC
);


ALTER TABLE ORG_LOCATION
       ADD  ( PRIMARY KEY (ORG_KEY, LOCATION_KEY, ORG_LOCATION_KEY) ) ;


CREATE TABLE ORG_ROLE (
       ORG_KEY              NUMBER(8) NOT NULL,
       ORG_ROLE_KEY         NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_ORGROLE_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKORG_ROLE ON ORG_ROLE
(
       ORG_ROLE_KEY                   ASC,
       ORG_KEY                        ASC
);


ALTER TABLE ORG_ROLE
       ADD  ( PRIMARY KEY (ORG_ROLE_KEY, ORG_KEY) ) ;


CREATE TABLE ORG_ROLE_CODE (
       ORG_ROLE_KEY         NUMBER(8) NOT NULL,
       ORG_ROLE_CODE        VARCHAR2(40) NULL,
       ORG_ROLE_DESC        VARCHAR2(1000) NULL,
       ORG_ROLE_EFF_DT      DATE NULL,
       ORG_ROLE_END_DT      DATE NULL
);

CREATE UNIQUE INDEX XPKORG_ROLE_CODE ON ORG_ROLE_CODE
(
       ORG_ROLE_KEY                   ASC
);


ALTER TABLE ORG_ROLE_CODE
       ADD  ( PRIMARY KEY (ORG_ROLE_KEY) ) ;


CREATE TABLE ORGANISM_RESULT_VALUE (
       ORGANISM_RESULT_VAL_KEY NUMBER(8) NOT NULL,
       ORGANISM_RESULT_VAL_CD VARCHAR2(20) NULL,
       ORGANISM_NM          VARCHAR2(20) NULL,
       ORGANISM_RESULT_VAL_CD_SYS_CD VARCHAR2(20) NULL,
       ORGANISM_RESULT_VAL_CD_SYS_NM VARCHAR2(20) NULL
);

CREATE UNIQUE INDEX XPKORGANISM_RESULT_VALUE ON ORGANISM_RESULT_VALUE
(
       ORGANISM_RESULT_VAL_KEY        ASC
);


ALTER TABLE ORGANISM_RESULT_VALUE
       ADD  ( PRIMARY KEY (ORGANISM_RESULT_VAL_KEY) ) ;


CREATE TABLE ORGANIZATION (
       ORG_LOCAL_ID         VARCHAR2(50) NULL,
       ORG_STATUS           CHAR(1) NULL,
       ORG_STATUS_EFF_DT    DATE NULL,
       ORG_STD_INDUSTRY_CLS VARCHAR2(20) NULL,
       ORG_NM               VARCHAR2(100) NULL,
       ORG_INDUSTRY_STD_DESC VARCHAR2(100) NULL,
       ORG_URL              VARCHAR2(100) NULL,
       FACILITY_CLIA_NBR    VARCHAR2(100) NULL,
       ORG_ADD_TIME         DATE NULL,
       ORG_KEY              NUMBER(8) NOT NULL,
       ORG_UID              NUMBER(20) NULL,
       ORG_NM_TYPE          VARCHAR2(50) NULL,
       ORG_ADD_USER_ID      NUMBER(20) NULL,
       ORG_COMMENTS         VARCHAR2(1000) NULL,
       ORG_ELECTRONIC_IND   VARCHAR2(50) NULL,
       ORG_QUICK_CD         VARCHAR2(100) NULL,
       ORG_QUICK_CD_DESC    VARCHAR2(100) NULL,
       ORG_Q_CD_ASSIGN_AUTH_DESC VARCHAR2(100) NULL,
       ORG_Q_CD_ASSIGN_AUTH_CD VARCHAR2(50) NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_ORG_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKORGANIZATION ON ORGANIZATION
(
       ORG_KEY                        ASC
);


ALTER TABLE ORGANIZATION
       ADD  ( PRIMARY KEY (ORG_KEY) ) ;


CREATE TABLE ORGANIZATION_LDF_GROUP (
       ORG_KEY              NUMBER(8) NOT NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_ORGLDFGRP_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKORGANIZATION_LDF_GROUP ON ORGANIZATION_LDF_GROUP
(
       ORG_KEY                        ASC,
       LDF_GROUP_KEY                  ASC
);

CREATE TABLE PERSON
(
  PERSON_KEY                     NUMBER(8),
  PERSON_LOCAL_ID                VARCHAR2(50 BYTE),
  PERSON_DOB                     DATE,
  PERSON_CURR_GENDER             CHAR(1 BYTE),
  PATIENT_BIRTH_GENDER           CHAR(1 BYTE),
  MULTIPLE_BIRTH_IND             VARCHAR2(50 BYTE),
  PATIENT_MARITAL_STATUS         VARCHAR2(20 BYTE),
  NBR_ADULTS_IN_RESIDENCE        NUMBER(4),
  PATIENT_PRIMARY_OCCUPATION     VARCHAR2(25 BYTE),
  NBR_CHILDREN_IN_RESIDENCE      NUMBER(4),
  PATIENT_PRIMARY_LANG           VARCHAR2(25 BYTE),
  PATIENT_SSN                    VARCHAR2(100 BYTE),
  PATIENT_DECEASED_IND           VARCHAR2(50 BYTE),
  PATIENT_DECEASE_DT             DATE,
  PATIENT_MOTHER_MAIDEN_NM       VARCHAR2(100 BYTE),
  PERSON_DEGREE                  VARCHAR2(20 BYTE),
  PATIENT_BIRTH_ORDER            NUMBER(5),
  HIGHEST_EDU_LVL_RECEIVED       VARCHAR2(20 BYTE),
  PERSON_UID                     NUMBER(20),
  PATIENT_HISPANIC_IND           VARCHAR2(50 BYTE),
  PATIENT_DESCRIPTION            VARCHAR2(2000 BYTE),
  PERSON_ADD_TIME                DATE,
  PERSON_ELECTRONIC_IND          VARCHAR2(50 BYTE),
  AGE_CALC_UNIT_CD               VARCHAR2(50 BYTE),
  PERSON_FIRST_NM                VARCHAR2(50 BYTE),
  PERSON_MIDDLE_NM               VARCHAR2(50 BYTE),
  PERSON_NM_PREFIX               VARCHAR2(50 BYTE),
  PERSON_NM_SUFFIX               VARCHAR2(50 BYTE),
  PERSON_LAST_NM                 VARCHAR2(50 BYTE),
  AGE_REPORT_UNIT_CD             VARCHAR2(50 BYTE),
  AGE_REPORTED_TIME              DATE,
  AGE_REPORTED                   VARCHAR2(10 BYTE),
  AGE_CATEGORY_CD                VARCHAR2(50 BYTE),
  AGE_CALC_TIME                  DATE,
  AGE_CALC                       NUMBER,
  INFO_AS_OF_DT                  DATE,
  PERSON_SEX_AS_OF_DT            DATE,
  PERSON_MORTALITY_AS_OF_DT      DATE,
  PERSON_ADMIN_INFO_AS_OF_DT     DATE,
  PATIENT_PRIMARY_LANG_DESC      VARCHAR2(100 BYTE),
  PATIENT_MARITAL_STATUS_DESC    VARCHAR2(100 BYTE),
  HIGHEST_EDU_LVL_RECEIVED_DESC  VARCHAR2(100 BYTE),
  MPR_IND                        VARCHAR2(50 BYTE),
  PERSON_TYPE_CD                 VARCHAR2(20 BYTE),
  RECORD_STATUS_CD               VARCHAR2(8 BYTE),
  PRIMARY KEY
 (PERSON_KEY)
);

CREATE TABLE PERSON_CONTACT (
       CONTACT_KEY          NUMBER(8) NOT NULL,
       PERSON_KEY           NUMBER(8) NOT NULL,
       PERSON_CONTACT_INFO_AS_OF_DT DATE NULL,
       PERSON_CON_KEY       NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_PERSCONTACT_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKPERSON_CONTACT ON PERSON_CONTACT
(
       CONTACT_KEY                    ASC,
       PERSON_KEY                     ASC,
       PERSON_CON_KEY                 ASC
);


ALTER TABLE PERSON_CONTACT
       ADD  ( PRIMARY KEY (CONTACT_KEY, PERSON_KEY, PERSON_CON_KEY) ) ;


CREATE TABLE PERSON_ETHNICITY (
       PERSON_ETHNICITY_KEY NUMBER(8) NOT NULL,
       PERSON_KEY           NUMBER(8) NOT NULL,
       PERSON_ETHNICITY_AS_OF_DT DATE NULL,
       DETAIL_ETHNICITY_KEY NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_PERSETHN_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKPERSON_ETHNICITY ON PERSON_ETHNICITY
(
       PERSON_ETHNICITY_KEY           ASC,
       PERSON_KEY                     ASC,
       DETAIL_ETHNICITY_KEY           ASC
);


ALTER TABLE PERSON_ETHNICITY
       ADD  ( PRIMARY KEY (PERSON_ETHNICITY_KEY, PERSON_KEY, 
              DETAIL_ETHNICITY_KEY) ) ;


CREATE TABLE PERSON_FACT (
       PERSON_KEY           NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKPERSON_FACT ON PERSON_FACT
(
       PERSON_KEY                     ASC
);


ALTER TABLE PERSON_FACT
       ADD  ( PRIMARY KEY (PERSON_KEY) ) ;


CREATE TABLE PERSON_ID (
       PERSON_ID_TYPE_DESC  VARCHAR2(100) NULL,
       PERSON_ID_ASSIGN_AUTH_CD VARCHAR2(50) NULL,
       PERSON_ID_EXPIRE_DT  DATE NULL,
       PERSON_ID_ASSIGN_AUTH_DESC VARCHAR2(100) NULL,
       PATIENT_ID_TYPE      VARCHAR2(50) NOT NULL,
       PERSON_KEY           NUMBER(8) NOT NULL,
       PERSON_ID_VAL        VARCHAR2(100) NULL,
       PERSON_ID_KEY        NUMBER(8) NOT NULL,
       PERSON_ID_AS_OF_DT   DATE NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_PERSID_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKPERSON_ID ON PERSON_ID
(
       PERSON_KEY                     ASC,
       PERSON_ID_KEY                  ASC
);


ALTER TABLE PERSON_ID
       ADD  ( PRIMARY KEY (PERSON_KEY, PERSON_ID_KEY) ) ;


CREATE TABLE PERSON_LDF (
       PERSON_KEY           NUMBER(8) NOT NULL,
       BUSINESS_DATA_1      VARCHAR2(50) NULL,
       BUSINESS_DATA_2      VARCHAR2(50) NULL,
       BUSINESS_DATA_N      VARCHAR2(50) NULL,
       TRAVEL_TO_COUNTRY_IND VARCHAR2(50) NULL,
       VISITED_CLINIC_IND   VARCHAR2(50) NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_PERSLDF_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKPERSON_LDF ON PERSON_LDF
(
       PERSON_KEY                     ASC
);


ALTER TABLE PERSON_LDF
       ADD  ( PRIMARY KEY (PERSON_KEY) ) ;


CREATE TABLE PERSON_LDF_CLINIC (
       VISITED_START_DT     DATE NULL,
       VISITED_END_DT       DATE NULL,
       PERSON_KEY           NUMBER(8) NOT NULL,
       CLINIC_KEY           NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKPERSON_LDF_CLINIC ON PERSON_LDF_CLINIC
(
       PERSON_KEY                     ASC,
       CLINIC_KEY                     ASC
);


ALTER TABLE PERSON_LDF_CLINIC
       ADD  ( PRIMARY KEY (PERSON_KEY, CLINIC_KEY) ) ;


CREATE TABLE PERSON_LDF_GROUP (
       PERSON_KEY           NUMBER(8) NOT NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_PERSLDFGRP_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKPERSON_LDF_GROUP ON PERSON_LDF_GROUP
(
       PERSON_KEY                     ASC,
       LDF_GROUP_KEY                  ASC
);


ALTER TABLE PERSON_LDF_GROUP
       ADD  ( PRIMARY KEY (PERSON_KEY, LDF_GROUP_KEY) ) ;


CREATE TABLE PERSON_LOCATION (
       LOCATION_KEY         NUMBER(8) NOT NULL,
       PERSON_KEY           NUMBER(8) NOT NULL,
       PERSON_LOCATION_EFF_DT DATE NULL,
       BIRTH_LOCATION_IND   VARCHAR2(50) NULL,
       DECEASE_LOCATION_IND VARCHAR2(50) NULL,
       ADDR_TYPE            VARCHAR2(50) NULL,
       ADDRESS_USE          VARCHAR2(50) NULL,
       ADDRESS_TYPE_DESC    VARCHAR2(100) NULL,
       ADDRESS_COMMENTS     VARCHAR2(2000) NULL,
       PERSON_LOC_KEY       NUMBER(8) NOT NULL,
       GEOCODING_LOCATION_KEY NUMBER(8),
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_PERSLOCATION_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKPERSON_LOCATION ON PERSON_LOCATION
(
       PERSON_KEY                    ASC,
       LOCATION_KEY                   ASC,
       PERSON_LOC_KEY                 ASC
);


ALTER TABLE PERSON_LOCATION
       ADD  ( PRIMARY KEY (PERSON_KEY, LOCATION_KEY, PERSON_LOC_KEY) ) ;


CREATE TABLE PERSON_NAME (
       NAME_KEY             NUMBER(8) NOT NULL,
       PERSON_KEY           NUMBER(8) NOT NULL,
       PERSON_NM_AS_OF_DT   DATE NULL,
       PERSON_NAME_KEY      NUMBER(8) NOT NULL,       
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_PERSNAME_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKPERSON_NAME ON PERSON_NAME
(
       NAME_KEY                       ASC,
       PERSON_KEY                     ASC,
       PERSON_NAME_KEY                ASC
);


ALTER TABLE PERSON_NAME
       ADD  ( PRIMARY KEY (NAME_KEY, PERSON_KEY, PERSON_NAME_KEY) ) ;


CREATE TABLE PERSON_RACE (
       RACE_KEY             NUMBER(8) NOT NULL,
       PERSON_KEY           NUMBER(8) NOT NULL,
       PERSON_RACE_AS_OF_DT DATE NULL,
       PERSON_RACE_KEY      NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_PERSRACE_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKPERSON_RACE ON PERSON_RACE
(
       RACE_KEY                       ASC,
       PERSON_KEY                     ASC,
       PERSON_RACE_KEY                ASC
);


ALTER TABLE PERSON_RACE
       ADD  ( PRIMARY KEY (RACE_KEY, PERSON_KEY, PERSON_RACE_KEY) ) ;


CREATE TABLE PERSON_RELATIONSHIP (
       PERSON_KEY           NUMBER(8) NOT NULL,
       SUBJECT_ROLE_DESC    VARCHAR2(100) NULL,
       SCOPING_PERSON_KEY   NUMBER(8) NULL,
       SUBJECT_CLASS_CD     VARCHAR2(50) NULL,
       SUBJECT_CLASS_DESC   VARCHAR2(300) NULL,
       SCOPING_ROLE_CD      VARCHAR2(50) NULL,
       SCOPING_CLASS_CD     VARCHAR2(50) NULL,
       SUBJECT_ROLE_CD      VARCHAR2(50) NULL,
       SCOPING_ROLE_DESC    VARCHAR2(100) NULL,
       RELATIONSHIP_INFO_EFF_DT DATE NULL,
       SCOPING_CLASS_DESC   VARCHAR2(300) NULL,
       RELATIONSHIP_INFO_END_DT DATE NULL,
       PERSON_RELATIONSHIP_SEQ_KEY NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_PERSRELATION_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKPERSON_RELATIONSHIP ON PERSON_RELATIONSHIP
(
       PERSON_RELATIONSHIP_SEQ_KEY    ASC,
       PERSON_KEY                     ASC
);


ALTER TABLE PERSON_RELATIONSHIP
       ADD  ( PRIMARY KEY (PERSON_RELATIONSHIP_SEQ_KEY, PERSON_KEY) ) ;


CREATE TABLE PERTUSSIS_CASE (
       CASE_LOCATION_KEY    NUMBER(8) NOT NULL,
       RPT_SRC_ORG_KEY      NUMBER(8) NOT NULL,
       REPORTER_KEY         NUMBER(8) NOT NULL,
       PHYSICIAN_KEY        NUMBER(8) NOT NULL,
       INVESTIGATOR_KEY     NUMBER(8) NOT NULL,
       INV_ASSIGNED_DT_KEY  NUMBER(8) NOT NULL,
       PATIENT_KEY          NUMBER(8) NOT NULL,
       COUGH_ONSET_DT       DATE NULL,
       PAROXYSMAL_COUGH_IND VARCHAR2(50) NULL,
       WHOOP_IND            VARCHAR2(50) NULL,
       POST_TUSSIVE_VOMITING_IND VARCHAR2(50) NULL,
       COUGH_IND            VARCHAR2(50) NULL,
       APNEA_IND            VARCHAR2(50) NULL,
       FINAL_INTERVIEW_DT   DATE NULL,
       COUGH_AT_FINAL_INTERVIEW_IND VARCHAR2(50) NULL,
       COUGH_DURATION_DAYS  NUMBER(11,5) NULL,
       PNEUMONIA_XRAY_RESULT VARCHAR2(50) NULL,
       GENERIZED_FOCAL_SEIZURE_IND VARCHAR2(50) NULL,
       ACUTE_ENCEPHALOPATHY_IND VARCHAR2(50) NULL,
       ANTIBIOTICS_GIVEN_IND VARCHAR2(50) NULL,
       LAB_TESTING_DONE_IND VARCHAR2(50) NULL,
       CULTURE_DT           DATE NULL,
       BORDETELLA_PRT_CULTURE_RESULT VARCHAR2(50) NULL,
       SEROLOGY_1_DT        DATE NULL,
       SEROLOGY_1_RESULT    VARCHAR2(50) NULL,
       SEROLOGY_2_DT        DATE NULL,
       SEROLOGY_2_RESULT    VARCHAR2(50) NULL,
       PCR_SPECIMEN_DT      DATE NULL,
       PCR_RESULT           VARCHAR2(50) NULL,
       EVER_RECEIVED_VACCINE_IND VARCHAR2(50) NULL,
       BEFORE_ILLNESS_LAST_VACCINE_DT DATE NULL,
       VACCINE_GIVEN_DOSE_NBR VARCHAR2(50) NULL,
       LESS_THAN_3_DOSES_REASON VARCHAR2(50) NULL,
       EPI_LINK_TO_OTHER_CASE_IND VARCHAR2(50) NULL,
       EPI_LINKED_TO_CASE_ID VARCHAR2(2000) NULL,
       TRANSMISSION_SETTING VARCHAR2(20) NULL,
       SPREAD_BEYOND_XMISSION_SETTING VARCHAR2(50) NULL,
       SPREAD_SETTING_OUTSIDE_HOUSE VARCHAR2(50) NULL,
       SPREAD_SETTING_OUT_HOUSE_OTHER VARCHAR2(2000) NULL,
       ONE_OR_MORE_SUSPECT_SRC_IND VARCHAR2(50) NULL,
       SUSPECT_INFECTION_SRC_NBR NUMBER(11,5) NULL,
       CONTACT_TO_RECEIVE_PROPHYLAXIS NUMBER(11,5) NULL,
       OTHER_LAB_TEST_DONE_IND VARCHAR2(50) NULL,
       OTHER_LAB_TEST_DESC  VARCHAR2(2000) NULL,
       OTHER_LAB_TEST_DT    DATE NULL,
       OTHER_LAB_TEST_RESULT VARCHAR2(2000) NULL,
       BORDETELLA_CULTURE_TAKEN_IND VARCHAR2(50) NULL,
       BORDETELLA_SEROLOGY_1_DONE_IND VARCHAR2(50) NULL,
       BORDETELLA_SEROLOGY_2_DONE_IND VARCHAR2(50) NULL,
       BORDETELLA_PCR_TAKEN_IND VARCHAR2(50) NULL,
       SPECIMEN_TO_CDC_GENOTYPING_IND VARCHAR2(50) NULL,
       SPECIMEN_TO_CDC_GENOTYPING_DT DATE NULL,
       SPECIMENTO_CDC_GENOTYPING_TYPE VARCHAR2(2000) NULL,
       NOT_PERTUSSIS_VACCINED_REASON VARCHAR2(50) NULL,
       DOSES_NBR_2WEEKS_BEFORE_SICK VARCHAR2(50) NULL,
       ADT_HSPTL_KEY        NUMBER(8) NOT NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       SEROLOGY_LAB1_NM     VARCHAR2(2000) NULL,
       SEROLOGY_LAB2_NM     VARCHAR2(2000) NULL,
       PCR_LAB              VARCHAR2(50) NULL,
       PCR_LAB_NM           VARCHAR2(2000) NULL,
       PERTUSSIS_SUSPECT_SRC_GRP_KEY NUMBER(8) NOT NULL,
       PERTUSSIS_TREATMENT_GRP_KEY NUMBER(8) NOT NULL,
       SEROLOGY_LAB1        VARCHAR2(50) NULL,
       SEROLOGY_LAB2        VARCHAR2(50) NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,
       BIRTH_WEIGHT_IN_GRAMS number(8) NULL,
       BIRTH_WEIGHT_POUNDS  number(8) NULL,
       BIRTH_WEIGHT_OUNCES  number(8) NULL,
       BIRTH_WEIGHT_UNKNOWN  VARCHAR2(50) NULL,       
       MOTHERS_AGE   number(8) NULL,
PATIENT_LESS_THAN_12MONTHS VARCHAR2(50) NULL,
GEOCODING_LOCATION_KEY NUMBER(8)
);

CREATE UNIQUE INDEX XPKPERTUSSIS_CASE ON PERTUSSIS_CASE
(
       CASE_LOCATION_KEY              ASC,
       RPT_SRC_ORG_KEY                ASC,
       REPORTER_KEY                   ASC,
       PHYSICIAN_KEY                  ASC,
       INVESTIGATOR_KEY               ASC,
       INV_ASSIGNED_DT_KEY            ASC,
       PATIENT_KEY                    ASC,
       ADT_HSPTL_KEY                  ASC,
       INVESTIGATION_KEY              ASC,
       CONDITION_KEY                  ASC,
       PERTUSSIS_SUSPECT_SRC_GRP_KEY  ASC,
       PERTUSSIS_TREATMENT_GRP_KEY    ASC,
       LDF_GROUP_KEY                  ASC
);


ALTER TABLE PERTUSSIS_CASE
       ADD  ( PRIMARY KEY (CASE_LOCATION_KEY, RPT_SRC_ORG_KEY, 
              REPORTER_KEY, PHYSICIAN_KEY, INVESTIGATOR_KEY, 
              INV_ASSIGNED_DT_KEY, PATIENT_KEY, ADT_HSPTL_KEY, 
              INVESTIGATION_KEY, CONDITION_KEY, 
              PERTUSSIS_SUSPECT_SRC_GRP_KEY, 
              PERTUSSIS_TREATMENT_GRP_KEY, LDF_GROUP_KEY) ) ;


CREATE TABLE PERTUSSIS_SUSPECTED_SOURCE_FLD (
       SOURCE_AGE           NUMBER(11,5) NULL,
       SOURCE_AGE_UNIT      VARCHAR2(50) NULL,
       SOURCE_GENDER        VARCHAR2(50) NULL,
       SOURCE_RELATION      VARCHAR2(50) NULL,
       SOURCE_RELATION_OTHER VARCHAR2(2000) NULL,
       SOURCE_VACC_DOSE_NUMBER VARCHAR2(50) NULL,
       SOURCE_COUGH_ONSET_DT DATE NULL,
       PERTUSSIS_SUSPECT_SRC_FLD_KEY NUMBER(8) NOT NULL,
       PERTUSSIS_SUSPECT_SRC_GRP_KEY NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKPERTUSSIS_SUS_SRC_FLD_ ON PERTUSSIS_SUSPECTED_SOURCE_FLD
(
       PERTUSSIS_SUSPECT_SRC_FLD_KEY  ASC,
       PERTUSSIS_SUSPECT_SRC_GRP_KEY  ASC
);


ALTER TABLE PERTUSSIS_SUSPECTED_SOURCE_FLD
       ADD  ( PRIMARY KEY (PERTUSSIS_SUSPECT_SRC_FLD_KEY, 
              PERTUSSIS_SUSPECT_SRC_GRP_KEY) ) ;


CREATE TABLE PERTUSSIS_SUSPECTED_SOURCE_GRP (
       PERTUSSIS_SUSPECT_SRC_GRP_KEY NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKPERTUSSIS_SUS_SRC_GRP_ ON PERTUSSIS_SUSPECTED_SOURCE_GRP
(
       PERTUSSIS_SUSPECT_SRC_GRP_KEY  ASC
);


ALTER TABLE PERTUSSIS_SUSPECTED_SOURCE_GRP
       ADD  ( PRIMARY KEY (PERTUSSIS_SUSPECT_SRC_GRP_KEY) ) ;


CREATE TABLE PERTUSSIS_TREATMENT_FIELD (
       ANTIBIOTICS_RECEIVED_DESC VARCHAR2(50) NULL,
       PERTUSSIS_TREATMENT_FLD_KEY NUMBER(8) NOT NULL,
       ANTIBIOTICS_START_DT DATE NULL,
       ANTIBIOTICS_TAKEN_DAY_NBR NUMBER(4) NULL,
       PERTUSSIS_TREATMENT_GRP_KEY NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKPERTUSSIS_TREATMENT_FIELD ON PERTUSSIS_TREATMENT_FIELD
(
       PERTUSSIS_TREATMENT_FLD_KEY    ASC,
       PERTUSSIS_TREATMENT_GRP_KEY    ASC
);


ALTER TABLE PERTUSSIS_TREATMENT_FIELD
       ADD  ( PRIMARY KEY (PERTUSSIS_TREATMENT_FLD_KEY,
              PERTUSSIS_TREATMENT_GRP_KEY) ) ;


CREATE TABLE PERTUSSIS_TREATMENT_GROUP (
       PERTUSSIS_TREATMENT_GRP_KEY NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKPERTUSSIS_TREATMENT_GROUP ON PERTUSSIS_TREATMENT_GROUP
(
       PERTUSSIS_TREATMENT_GRP_KEY    ASC
);


ALTER TABLE PERTUSSIS_TREATMENT_GROUP
       ADD  ( PRIMARY KEY (PERTUSSIS_TREATMENT_GRP_KEY) ) ;


CREATE TABLE RACE (
       RACE_KEY             NUMBER(8) NOT NULL,
       RACE_DESC            VARCHAR2(100) NOT NULL,
       RACE_CAT_CD          VARCHAR2(50) NOT NULL,
       RACE_CD              VARCHAR2(20) NOT NULL,
       RACE_CD_EFF_DT       DATE NULL,
       RACE_CD_END_DT       DATE NULL,
       PARENT_IS_CD         VARCHAR2(20) NULL);

CREATE UNIQUE INDEX XPKRACE ON RACE(
       RACE_KEY                       ASC
);


ALTER TABLE RACE
       ADD  ( PRIMARY KEY (RACE_KEY) ) ;


CREATE TABLE RDB_DATE (
       DATE_MM_DD_YYYY      DATE NULL,
       DAY_OF_WEEK          VARCHAR2(10) NULL,
       DAY_NBR_IN_CLNDR_MON NUMBER(4) NULL,
       DAY_NBR_IN_CLNDR_YR  NUMBER(4) NULL,
       WK_NBR_IN_CLNDR_MON  NUMBER(4) NULL,
       WK_NBR_IN_CLNDR_YR   NUMBER(4) NULL,
       CLNDR_MON_NAME       VARCHAR2(20) NULL,
       CLNDR_MON_IN_YR      NUMBER(4) NULL,
       CLNDR_QRTR           NUMBER(4) NULL,
       CLNDR_YR             NUMBER(8) NULL,
       DATE_KEY             NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKRDB_DATE ON RDB_DATE
(
       DATE_KEY                       ASC
);


ALTER TABLE RDB_DATE
       ADD  ( PRIMARY KEY (DATE_KEY) ) ;


CREATE TABLE RESULT_COMMENT_GROUP (
       RESULT_COMMENT_GRP_KEY NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKRESULT_COMMENT_GROUP ON RESULT_COMMENT_GROUP
(
       RESULT_COMMENT_GRP_KEY         ASC
);


ALTER TABLE RESULT_COMMENT_GROUP
       ADD  ( PRIMARY KEY (RESULT_COMMENT_GRP_KEY) ) ;


CREATE TABLE RUBELLA_CASE (
       INVESTIGATOR_KEY     NUMBER(8) NOT NULL,
       PATIENT_KEY          NUMBER(8) NOT NULL,
       PHYSICIAN_KEY        NUMBER(8) NOT NULL,
       REPORTER_KEY         NUMBER(8) NOT NULL,
       INV_ASSIGNED_DT_KEY  NUMBER(8) NOT NULL,
       CASE_LOCATION_KEY    NUMBER(8) NOT NULL,
       LENGTH_OF_TIME_IN_US NUMBER(11,5) NULL,
       MACULOPAPULAR_RASH_IND VARCHAR2(50) NULL,
       PATIENT_RASH_ONSET_DT DATE NULL,
       RASH_DURATION_DAYS   NUMBER(11,5) NULL,
       PATIENT_FEVER_IND    VARCHAR2(50) NULL,
       HIGHEST_MEASURED_TEMPERATURE NUMBER(11,5) NULL,
       HIGHEST_TEMPERATUR_UNIT VARCHAR2(50) NULL,
       ARTHRALGIA_ARTHRITIS_SYMPTOM VARCHAR2(50) NULL,
       LYMPHADENOPATHY_IND  VARCHAR2(50) NULL,
       CONJUNCTIVITIS_IND   VARCHAR2(50) NULL,
       ENCEPHALITIS_IND     VARCHAR2(50) NULL,
       THROMBOCYTOPENIA_IND VARCHAR2(50) NULL,
       OTHER_COMPLICATIONS_IND VARCHAR2(50) NULL,
       OTHER_COMPLICATIONS_DESC VARCHAR2(2000) NULL,
       CAUSE_OF_DEATH       VARCHAR2(2000) NULL,
       HSPTL_ADMISSION_DT   DATE NULL,
       HSPTL_DISCHARGE_DT   DATE NULL,
       RUBELLA_LAB_TEST_DONE_IND VARCHAR2(50) NULL,
       RUBELLA_IGM_EIA_TEST_IND VARCHAR2(50) NULL,
       RUBELLA_IGM_EIA_TEST_DT DATE NULL,
       RUBELLA_IGM_EIA_TEST_RESULT VARCHAR2(50) NULL,
       RUBELLA_IGM_EIA_CAPTURE_IND VARCHAR2(50) NULL,
       RUBELLA_IGM_EIA_CAPTURE_DT DATE NULL,
       RUBELLA_IGM_EIA_CAPTURE_RESULT VARCHAR2(50) NULL,
       OTHER_RUBELLA_IGM_IND VARCHAR2(50) NULL,
       OTHER_RUBELLA_IGM_DESC VARCHAR2(2000) NULL,
       OTHER_RUBELLA_IGM_DT DATE NULL,
       OTHER_RUBELLA_IGM_RESULT VARCHAR2(50) NULL,
       RUBELLA_IGG_EIA_ACUTE_IND VARCHAR2(50) NULL,
       RUBELLA_IGG_EIA_ACUTE_DT DATE NULL,
       RUBELLA_IGG_EIA_CNVLSNT_IND VARCHAR2(50) NULL,
       RUBELLA_IGG_EIA_CNVLSNT_DT DATE NULL,
       IGG_EIA_ACUTE_CNVLSNT_DIFF VARCHAR2(50) NULL,
       HEMAG_INHIBIT_ACUTE_IND VARCHAR2(50) NULL,
       HEMAG_INHIBIT_ACUTE_DT DATE NULL,
       HEMAG_INHIBIT_CNVLSNT_IND VARCHAR2(50) NULL,
       HEMAG_INHIBIT_CNVLSNT_DT DATE NULL,
       HEMAGINHIBIT_ACUTECNVLSNT_DIFF VARCHAR2(50) NULL,
       CMPLMNT_FIXATION_ACUTE_IND VARCHAR2(50) NULL,
       CMPLMNT_FIXATION_ACUTE_DT DATE NULL,
       CMPLMNT_FIXATION_CNVLSNT_IND VARCHAR2(50) NULL,
       CMPLMNT_FIXATION_CNVLSNT_DT DATE NULL,
       CMPLMNT_FIX_ACUTE_CNVLSNT_DIFF VARCHAR2(50) NULL,
       RUBELLA_IGG_OTHER_TEST1_IND VARCHAR2(50) NULL,
       RUBELLA_IGG_OTHER_TEST1_DESC VARCHAR2(2000) NULL,
       RUBELLA_IGG_OTHER_TEST1_DT DATE NULL,
       RUBELLA_IGG_OTHER_TEST1_RESULT VARCHAR2(50) NULL,
       RUBELLA_IGG_OTHER_TEST2_IND VARCHAR2(50) NULL,
       RUBELLA_IGG_OTHER_TEST2_DESC VARCHAR2(2000) NULL,
       RUBELLA_IGG_OTHER_TEST2_DT DATE NULL,
       RUBELLA_IGG_OTHER_TEST2_RESULT VARCHAR2(50) NULL,
       RUBELLA_IGG_OTHER_TEST3_IND VARCHAR2(50) NULL,
       RUBELLA_IGG_OTHER_TEST3_DESC VARCHAR2(2000) NULL,
       RUBELLA_IGG_OTHER_TEST_3_DT DATE NULL,
       RUBELLA_IGG_OTHER_TEST3_RESULT VARCHAR2(50) NULL,
       VIRUS_ISOLATION_PERFORMED_IND VARCHAR2(50) NULL,
       VIRUS_ISOLATION_PERFORMED_DT DATE NULL,
       VIRUS_ISOLATION_PERFORMED_SRC VARCHAR2(50) NULL,
       VIRUS_ISOLATION_OTHER_SRC VARCHAR2(2000) NULL,
       RT_PCR_PERFORMED_IND VARCHAR2(50) NULL,
       RT_PCR_DT            DATE NULL,
       RT_PCR_SRC           VARCHAR2(50) NULL,
       RT_PCR_RESULT        VARCHAR2(50) NULL,
       RT_PCR_OTHER_SRC     VARCHAR2(2000) NULL,
       LATEX_AGGLUTINATION_TESTED_IND VARCHAR2(50) NULL,
       LATEX_AGGLUTINATION_TESTED_DT DATE NULL,
       LATEX_AGGLUTINATION_TESTRESULT VARCHAR2(50) NULL,
       IMMUNOFLUORESCENT_ASSAY_IND VARCHAR2(50) NULL,
       IMMUNOFLUORESCENT_ASSAY_DT DATE NULL,
       IMMUNOFLUORESCENT_ASSAY_SRC VARCHAR2(50) NULL,
       IMMUNOFLUORESCENT_ASSAY_RESULT VARCHAR2(50) NULL,
       IMUNOFLRESNT_ASSAY_OTHER_SRC VARCHAR2(2000) NULL,
       OTHER_RUBELLA_TEST_DONE_IND VARCHAR2(50) NULL,
       OTHER_RUBELLA_TEST_DESC VARCHAR2(2000) NULL,
       OTHER_RUBELLA_TEST_DT DATE NULL,
       OTHER_RUBELLA_TEST_RESULT VARCHAR2(2000) NULL,
       SPECIMEN_TO_CDC_GENOTYPING_IND VARCHAR2(50) NULL,
       SPECIMENTO_CDC_GENOTYPING_TYPE VARCHAR2(20) NULL,
       GENOTYPING_SPECIMEN_OTHER_TYPE VARCHAR2(2000) NULL,
       RUBELLA_VACCINE_RECEIVED_IND VARCHAR2(50) NULL,
       RUBELLA_VACCINED_NEVER_REASON VARCHAR2(50) NULL,
       ON_AFTER_1ST_DOB_DOSES_NBR NUMBER(11,5) NULL,
       TRANSMISSION_SETTING VARCHAR2(20) NULL,
       TRANSMISSION_SETTING_OTHER VARCHAR2(100) NULL,
       EPI_LINKED_TO_ANOTHER_CASE_IND VARCHAR2(50) NULL,
       PREGNANCY_IND        VARCHAR2(50) NULL,
       PREGNANCY_DELIVERY_EXPECTED_DT DATE NULL,
       EXPECTED_DELIVERY_PLACE VARCHAR2(2000) NULL,
       GESTATION_WK_NBR_AT_RUBELLA NUMBER(11,5) NULL,
       GESTATION_TRIMESTER_ST_RUBELLA VARCHAR2(50) NULL,
       PREVIOUS_RUBELLA_IMMUNITY_DOC VARCHAR2(50) NULL,
       PREVIOUSIMMUNITY_TESTINGRESULT VARCHAR2(50) NULL,
       PREVIOUS_IMMUNITY_TESTING_YR NUMBER(11,5) NULL,
       WOMAN_AGE_AT_IMMUNITY_TESTING NUMBER(11,5) NULL,
       RUBELLA_PRIOR_TO_PREGNANCY_IND VARCHAR2(50) NULL,
       SEROLOGICALLYCONFIRMED_RUBELLA VARCHAR2(50) NULL,
       PREVIOUS_DISS_YR     NUMBER(11,5) NULL,
       PREVIOUS_DISS_AGE    NUMBER(11,5) NULL,
       PREGNANCY_CURRENT_OUTCOME VARCHAR2(50) NULL,
       LIVE_BIRTH_OUTCOME   VARCHAR2(50) NULL,
       NON_LIVING_BIRTH_OUTCOME VARCHAR2(50) NULL,
       PREGNANCY_CESSATION_FETUS_WK NUMBER(11,5) NULL,
       NON_LIVING_BIRTH_AUTOPSY_STUDY VARCHAR2(50) NULL,
       AUTOPSY_PATHOLOGY_STUDY_RESULT VARCHAR2(2000) NULL,
       RUBELLA_GENOTYPING_DT DATE NULL,
       EIA_ACUTE_TEST_RESULT_VALUE VARCHAR2(2000) NULL,
       EIA_CNVLSNT_TEST_RESULT_VALUE VARCHAR2(2000) NULL,
       HEMAG_INHIBIT_ACUTE_VALUE VARCHAR2(2000) NULL,
       HEMAG_INHIBIT_CNVLSNT_VALUE VARCHAR2(2000) NULL,
       CMPLMNT_FIXATION_ACUTE_VALUE VARCHAR2(2000) NULL,
       CMPLMNT_FIXATION_CNVLSNT_VALUE VARCHAR2(2000) NULL,
       ARTHRALGIA_ARTHRITIS_COMPLICAT VARCHAR2(50) NULL,
       IGM_EIA_1ST_TEST_RESULT_VALUE VARCHAR2(2000) NULL,
       IGM_EIA_2ND_TEST_RESULT_VALUE VARCHAR2(2000) NULL,
       OTHER_IGM_TEST_RESULT_VALUE VARCHAR2(2000) NULL,
       IGG_OTHER_TEST_1_RESULT_VALUE VARCHAR2(2000) NULL,
       IGG_OTHER_TEST_2_RESULT_VALUE VARCHAR2(2000) NULL,
       RT_PCR_TEST_RESULT_VALUE VARCHAR2(2000) NULL,
       LATEX_AGG_TEST_RESULT_VALUE VARCHAR2(2000) NULL,
       ASSAY_TEST_RESULT_VALUE VARCHAR2(2000) NULL,
       OTHER_RUBELLA_TESTRESULT_VALUE VARCHAR2(2000) NULL,
       INFECTION_SRC        VARCHAR2(2000) NULL,
       RASH_ONSET_ENTERING_USA VARCHAR2(50) NULL,
       IGM_EIA_1ST_METHOD_USED VARCHAR2(50) NULL,
       IGM_EIA_2ND_METHOD_USED VARCHAR2(50) NULL,
       IGG_OTHER_TEST_3_RESULT_VALUE VARCHAR2(2000) NULL,
       ADT_HSPTL_KEY        NUMBER(8) NOT NULL,
       RPT_SRC_ORG_KEY      NUMBER(8) NOT NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       VIRUS_ISOLATION_RESULT VARCHAR2(50) NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,
       BIRTH_COUNTRY        VARCHAR2(50) NULL,
       RUBELLA_CASE_TRACEABLE_IND VARCHAR2(50) NULL,	
       GENOTYPE_SEQUENCED_RUBELLA VARCHAR2(50) NULL,
       GENOTYPE_ID_RUBELLA VARCHAR2(50) NULL,
       GENOTYPE_OTHER_ID_RUBELLA VARCHAR2(50) NULL,
       GEOCODING_LOCATION_KEY NUMBER(8));

CREATE UNIQUE INDEX XPKRUBELLA_CASE ON RUBELLA_CASE
(
       INVESTIGATOR_KEY               ASC,
       PATIENT_KEY                    ASC,
       PHYSICIAN_KEY                  ASC,
       REPORTER_KEY                   ASC,
       INV_ASSIGNED_DT_KEY            ASC,
       CASE_LOCATION_KEY              ASC,
       ADT_HSPTL_KEY                  ASC,
       RPT_SRC_ORG_KEY                ASC,
       INVESTIGATION_KEY              ASC,
       CONDITION_KEY                  ASC,
       LDF_GROUP_KEY                  ASC
);


ALTER TABLE RUBELLA_CASE
       ADD  ( PRIMARY KEY (INVESTIGATOR_KEY, PATIENT_KEY, 
              PHYSICIAN_KEY, REPORTER_KEY, INV_ASSIGNED_DT_KEY, 
              CASE_LOCATION_KEY, ADT_HSPTL_KEY, RPT_SRC_ORG_KEY, 
              INVESTIGATION_KEY, CONDITION_KEY, LDF_GROUP_KEY) ) ;


CREATE TABLE SUMMARY_CASE_GROUP (
       SUMMARY_CASE_SRC_KEY NUMBER(8) NOT NULL,
       SUMMARY_CASE_SRC_TXT VARCHAR2(100) NULL
);

CREATE UNIQUE INDEX XPKSUMMARY_CASE_GROUP ON SUMMARY_CASE_GROUP
(
       SUMMARY_CASE_SRC_KEY           ASC
);


ALTER TABLE SUMMARY_CASE_GROUP
       ADD  ( PRIMARY KEY (SUMMARY_CASE_SRC_KEY) ) ;


CREATE TABLE SUMMARY_REPORT_CASE (
       SUM_RPT_CASE_COUNT   NUMBER(11,5) NULL,
       SUM_RPT_CASE_COMMENTS VARCHAR2(2000) NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       SUM_RPT_CASE_STATUS  VARCHAR2(20) NULL,
       SUMMARY_CASE_SRC_KEY NUMBER(8) NOT NULL,
       NOTIFICATION_SEND_DT_KEY NUMBER(8) NOT NULL,
       LOCATION_KEY         NUMBER(8) NOT NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,
       LAST_UPDATE_DT_KEY  NUMBER(8) NULL
);

CREATE UNIQUE INDEX XPKSUMMARY_REPORT_CASE ON SUMMARY_REPORT_CASE
(
       INVESTIGATION_KEY              ASC,
       SUMMARY_CASE_SRC_KEY           ASC,
       NOTIFICATION_SEND_DT_KEY       ASC,
       LOCATION_KEY                   ASC,
       CONDITION_KEY                  ASC,
       LDF_GROUP_KEY                  ASC
);


ALTER TABLE SUMMARY_REPORT_CASE
       ADD  ( PRIMARY KEY (INVESTIGATION_KEY, SUMMARY_CASE_SRC_KEY, 
              NOTIFICATION_SEND_DT_KEY, LOCATION_KEY, CONDITION_KEY, 
              LDF_GROUP_KEY) ) ;


CREATE TABLE TEST_RESULT_GROUPING (
       TEST_RESULT_GRP_KEY  NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKTEST_RESULT_GROUPING ON TEST_RESULT_GROUPING
(
       TEST_RESULT_GRP_KEY            ASC
);


ALTER TABLE TEST_RESULT_GROUPING
       ADD  ( PRIMARY KEY (TEST_RESULT_GRP_KEY) ) ;


CREATE TABLE TREATMENT (
       TREATMENT_KEY        NUMBER(8) NOT NULL,
       TREATMENT_UID        NUMBER(20) NULL,
       TREATMENT_LOCAL_ID   VARCHAR2(50) NULL,
       TREATMENT_NM         VARCHAR2(150) NULL,
       TREATMENT_DRUG       VARCHAR2(50) NULL,
       TREATMENT_DOSAGE_STRENGTH VARCHAR2(20) NULL,
       TREATMENT_DOSAGE_STRENGTH_UNIT VARCHAR2(20) NULL,
       TREATMENT_FREQUENCY  VARCHAR2(20) NULL,
       TREATMENT_DURATION   VARCHAR2(10) NULL,
       TREATMENT_DURATION_UNIT VARCHAR2(20) NULL,
       TREATMENT_COMMENTS   VARCHAR2(1000) NULL,
       TREATMENT_ROUTE      VARCHAR2(25) NULL,
       CUSTOM_TREATMENT     VARCHAR2(100) NULL,
       TREATMENT_SHARED_IND VARCHAR2(50) NULL,
       TREATMENT_OID        NUMBER(20) NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_TREATMENT_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKTREATMENT ON TREATMENT
(
       TREATMENT_KEY                  ASC
);


ALTER TABLE TREATMENT
       ADD  ( PRIMARY KEY (TREATMENT_KEY) ) ;


CREATE TABLE TREATMENT_EVENT (
       TREATMENT_DT_KEY     NUMBER(8) NOT NULL,
       TREATMENT_PROVIDING_ORG_KEY NUMBER(8) NOT NULL,
       PATIENT_KEY          NUMBER(8) NOT NULL,
       TREATMENT_COUNT      NUMBER NULL,
       TREATMENT_KEY        NUMBER(8) NOT NULL,
       MORB_RPT_KEY         NUMBER(8) NOT NULL,
       TREATMENT_PHYSICIAN_KEY NUMBER(8) NOT NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       CONDITION_KEY        NUMBER(8) NOT NULL,
       LDF_GROUP_KEY        NUMBER(8) NOT NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_TRE_EVENT_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKTREATMENT_EVENT ON TREATMENT_EVENT
(
       TREATMENT_DT_KEY               ASC,
       TREATMENT_PROVIDING_ORG_KEY    ASC,
       PATIENT_KEY                    ASC,
       TREATMENT_KEY                  ASC,
       MORB_RPT_KEY                   ASC,
       TREATMENT_PHYSICIAN_KEY        ASC,
       INVESTIGATION_KEY              ASC,
       CONDITION_KEY                  ASC,
       LDF_GROUP_KEY                  ASC
);


ALTER TABLE TREATMENT_EVENT
       ADD  ( PRIMARY KEY (TREATMENT_DT_KEY, 
              TREATMENT_PROVIDING_ORG_KEY, PATIENT_KEY, TREATMENT_KEY, 
              MORB_RPT_KEY, TREATMENT_PHYSICIAN_KEY, 
              INVESTIGATION_KEY, CONDITION_KEY,LDF_GROUP_KEY  ) ) ;


CREATE TABLE VACCINATION (
       VACCINE_MANUFACTURER_ORG_KEY NUMBER(8) NOT NULL,
       VACCINATION_DT_KEY   NUMBER(8) NOT NULL,
       VACCINE_GIVEN_BY_ORG_KEY NUMBER(8) NOT NULL,
       PATIENT_KEY          NUMBER(8) NOT NULL,
       VACCINATION_ADMIND_NM VARCHAR2(100) NULL,
       VACCINATION_RECORD_ID VARCHAR2(50) NULL,
       VACCINATION_ANATOMICAL_SITE VARCHAR2(25) NULL,
       AGE_AT_VACCINATION   NUMBER(11,5) NULL,
       AGE_AT_VACCINATION_UNIT VARCHAR2(50) NULL,
       VACCINE_LOT_NBR      VARCHAR2(50) NULL,
       VACCINE_EXPIRATION_DT DATE NULL,
       VACCINE_GIVEN_BY_KEY NUMBER(8) NOT NULL,
       INVESTIGATION_KEY    NUMBER(8) NOT NULL,
       LDF_GROUP_KEY NUMBER(8) NULL,
       RECORD_STATUS_CD VARCHAR2(8) NOT NULL,
       CONSTRAINT CHK_VACCINE_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
);

CREATE UNIQUE INDEX XPKVACCINATION ON VACCINATION
(
       VACCINE_MANUFACTURER_ORG_KEY   ASC,
       VACCINATION_DT_KEY             ASC,
       VACCINE_GIVEN_BY_ORG_KEY       ASC,
       PATIENT_KEY                    ASC,
       VACCINE_GIVEN_BY_KEY           ASC,
       INVESTIGATION_KEY              ASC
);


ALTER TABLE VACCINATION
       ADD  ( PRIMARY KEY (VACCINE_MANUFACTURER_ORG_KEY, 
              VACCINATION_DT_KEY, VACCINE_GIVEN_BY_ORG_KEY, 
              PATIENT_KEY, VACCINE_GIVEN_BY_KEY, INVESTIGATION_KEY) ) ;

CREATE OR REPLACE VIEW LAB_TEST_REPORT (
    ROOT_ORDERED_TEST_PNTR,PARENT_TEST_PNTR,LAB_TEST_PNTR,
    REPORTING_FACILITY,ORDERING_FACILITY,PROGRAM_AREA_CD,
    PROGRAM_AREA_DESC,JURISDICTION_CD,JURISDICTION_NM,
    LAB_RPT_DT,LAB_RPT_RECEIVED_BY_PH_DT,ACCESSION_NBR,
    SPECIMEN_SRC,SPECIMEN_SITE,SPECIMEN_SITE_DESC,
    SPECIMEN_COLLECTION_DT,ORDERED_TEST_NM,LAB_TEST_NM,
    RESULTED_DT,LAB_TEST_STATUS,SPECIMEN_DESC,LAB_TEST_TYPE,
    PROGRAM_JURISDICTION_OID,SHARED_IND,RESULT_UNITS,
    NUMERIC_RESULT_VAL,TEXT_RESULT_VAL,REF_RANGE_FRM,
    REF_RANGE_TO,CODED_RESULT_VAL,CODED_RESULT_VAL_DESC,
    PATIENT_FIRST_NM,PATIENT_MIDDLE_NM,PATIENT_LAST_NM,
    PATIENT_NM_SUFFIX,PROVIDER_FIRST_NM,PROVIDER_MIDDLE_NM,
    PROVIDER_LAST_NM,PROVIDER_NM_PREFIX,PROVIDER_NM_SUFFIX,
    STREET_ADDR_1,STREET_ADDR_2,CITY_CD,CITY_DESC,STATE_CD,
    STATE_DESC,ZIP_CD,ZIP_CD_DESC) AS
    SELECT
 lt.ROOT_ORDERED_TEST_PNTR,
 lt.PARENT_TEST_PNTR,
 lt.LAB_TEST_PNTR,
 org1.ORG_NM AS reporting_facility,
 org2.ORG_NM AS ordering_facility,
 cond.PROGRAM_AREA_CD,
 cond.PROGRAM_AREA_DESC,
 lt.JURISDICTION_CD,
 lt.JURISDICTION_NM,
 lt.LAB_RPT_CREATED_DT AS lab_rpt_dt,
 lt.LAB_RPT_RECEIVED_BY_PH_DT,
 lt.ACCESSION_NBR,
 lt.SPECIMEN_SRC,
 lt.SPECIMEN_SITE,
 lt.SPECIMEN_SITE_DESC,
 lt.SPECIMEN_COLLECTION_DT,
 lt.ROOT_ORDERED_TEST_NM AS ordered_test_nm,
 lt.LAB_TEST_CD_DESC AS lab_test_nm,
 lt.LAB_TEST_DT AS resulted_dt,
 lt.LAB_TEST_STATUS,
 lt.SPECIMEN_DESC,
 lt.LAB_TEST_TYPE,
 lt.OID AS program_jurisdiction_oid,
 lt.LAB_RPT_SHARE_IND AS shared_ind,
 lrv.Result_Units AS Result_Units,
 lrv.NUMERIC_RESULT AS numeric_result_val,
 lrv.LAB_RESULT_TXT_VAL AS text_result_val,
 lrv.REF_RANGE_FRM,
 lrv.REF_RANGE_TO,
 lrv.TEST_RESULT_VAL_CD AS coded_result_val,
 lrv.TEST_RESULT_VAL_CD_DESC AS coded_result_val_desc,
 per1.PERSON_FIRST_NM AS patient_first_nm,
 per1.PERSON_MIDDLE_NM AS patient_middle_nm,
 per1.PERSON_LAST_NM AS patient_last_nm,
 per1.PERSON_NM_SUFFIX AS patient_nm_suffix,
 per2.PERSON_FIRST_NM AS provider_first_nm,
 per2.PERSON_MIDDLE_NM AS provider_middle_nm,
 per2.PERSON_LAST_NM AS provider_last_nm,
 per2.PERSON_NM_PREFIX AS provider_nm_prefix,
 per2.PERSON_NM_SUFFIX AS provider_nm_suffix,
 loc.STREET_ADDR_1,
 loc.STREET_ADDR_2,
 loc.CITY_FIPS AS city_cd,
 loc.CITY_SHORT_DESC AS city_desc,
 loc.STATE_FIPS AS state_cd,
 loc.STATE_SHORT_DESC AS state_desc,
 loc.ZIP_CD_5 AS zip_cd,
 loc.ZIP_SHORT_DESC AS zip_cd_desc
FROM
 LAB_TEST lt , LAB_TEST_RESULT ltr ,TEST_RESULT_GROUPING trg ,LAB_RESULT_VAL lrv ,CONDITION cond ,PERSON per1,
 PERSON_LOCATION perloc ,PERSON per2 ,LOCATION loc ,ORGANIZATION org1 , ORGANIZATION org2
where   lt.LAB_TEST_KEY = ltr.LAB_TEST_KEY
 AND ltr.PATIENT_KEY <> 1
 AND trg.TEST_RESULT_GRP_KEY = ltr.TEST_RESULT_GRP_KEY
 AND trg.TEST_RESULT_GRP_KEY = lrv.TEST_RESULT_GRP_KEY
 AND cond.CONDITION_KEY = ltr.CONDITION_KEY
 AND per1.PERSON_KEY = ltr.PATIENT_KEY
 AND per1.PERSON_KEY = perloc.PERSON_KEY
 AND per2.PERSON_KEY = ltr.ORDERING_PROVIDER_KEY
 AND loc.LOCATION_KEY = perloc.LOCATION_KEY
 AND org1.ORG_KEY = ltr.REPORTING_LAB_KEY
 AND org2.ORG_KEY = ltr.ORDERING_ORG_KEY
 ORDER BY lt.ROOT_ORDERED_TEST_PNTR, lt.PARENT_TEST_PNTR, lt.LAB_TEST_PNTR;


ALTER TABLE ANTIBIOTICS
       ADD  ( FOREIGN KEY (ANTIBIOTICS_GRP_KEY)
                             REFERENCES ANTIBIOTICS_GROUP ) ;


ALTER TABLE ANTIMICROBIAL
       ADD  ( FOREIGN KEY (ANTIMICROBIAL_GRP_KEY)
                             REFERENCES ANTIMICROBIAL_GROUP ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (REPORTER_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (PATIENT_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (DAYCARE_FACILITY_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (NURSING_HOME_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (CASE_LOCATION_KEY)
                             REFERENCES LOCATION ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (BMIRD_MULTI_VAL_GRP_KEY)
                             REFERENCES BMIRD_MULTI_VALUE_FIELD_GROUP ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (ANTIBIOTICS_GRP_KEY)
                             REFERENCES ANTIBIOTICS_GROUP ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (ANTIMICROBIAL_GRP_KEY)
                             REFERENCES ANTIMICROBIAL_GROUP ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE BMIRD_CASE
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE BMIRD_MULTI_VALUE_FIELD
       ADD  ( FOREIGN KEY (BMIRD_MULTI_VAL_GRP_KEY)
                             REFERENCES BMIRD_MULTI_VALUE_FIELD_GROUP ) ;


ALTER TABLE CASE_COUNT
       ADD  ( FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE CASE_COUNT
       ADD  ( FOREIGN KEY (REPORTER_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE CASE_COUNT
       ADD  ( FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE CASE_COUNT
       ADD  ( FOREIGN KEY (PATIENT_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE CASE_COUNT
       ADD  ( FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE CASE_COUNT
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE CASE_COUNT
       ADD  ( FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE CASE_COUNT
       ADD  ( FOREIGN KEY (CASE_LOCATION_KEY)
                             REFERENCES LOCATION ) ;


ALTER TABLE CASE_COUNT
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE CODE_VAL_GENERAL
       ADD  ( FOREIGN KEY (CD)
                             REFERENCES CODESET ) ;


ALTER TABLE CONFIRMATION_METHOD_GROUP
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE CONFIRMATION_METHOD_GROUP
       ADD  ( FOREIGN KEY (CONFIRMATION_METHOD_KEY)
                             REFERENCES CONFIRMATION_METHOD ) ;


ALTER TABLE COUNTRY_TRAVELED_TO_LDF
       ADD  ( FOREIGN KEY (PERSON_KEY)
                             REFERENCES PERSON_LDF ) ;


ALTER TABLE CRS_CASE
       ADD  ( FOREIGN KEY (CASE_LOCATION_KEY)
                             REFERENCES LOCATION ) ;


ALTER TABLE CRS_CASE
       ADD  ( FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE CRS_CASE
       ADD  ( FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE CRS_CASE
       ADD  ( FOREIGN KEY (PATIENT_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE CRS_CASE
       ADD  ( FOREIGN KEY (REPORTER_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE CRS_CASE
       ADD  ( FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE CRS_CASE
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE CRS_CASE
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE CRS_CASE
       ADD  ( FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE CRS_CASE
       ADD  ( FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE CRS_CASE
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE GENERIC_CASE
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE GENERIC_CASE
       ADD  ( FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE GENERIC_CASE
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE GENERIC_CASE
       ADD  ( FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE GENERIC_CASE
       ADD  ( FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE GENERIC_CASE
       ADD  ( FOREIGN KEY (CASE_LOCATION_KEY)
                             REFERENCES LOCATION ) ;


ALTER TABLE GENERIC_CASE
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE GENERIC_CASE
       ADD  ( FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE GENERIC_CASE
       ADD  ( FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE GENERIC_CASE
       ADD  ( FOREIGN KEY (REPORTER_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE GENERIC_CASE
       ADD  ( FOREIGN KEY (PATIENT_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE HEP_MULTI_VALUE_FIELD
       ADD  ( FOREIGN KEY (HEP_MULTI_VAL_GRP_KEY)
                             REFERENCES HEP_MULTI_VALUE_FIELD_GROUP ) ;


ALTER TABLE HEPATITIS_CASE
       ADD  ( FOREIGN KEY (CASE_LOCATION_KEY)
                             REFERENCES LOCATION ) ;


ALTER TABLE HEPATITIS_CASE
       ADD  ( FOREIGN KEY (PATIENT_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE HEPATITIS_CASE
       ADD  ( FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE HEPATITIS_CASE
       ADD  ( FOREIGN KEY (REPORTER_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE HEPATITIS_CASE
       ADD  ( FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE HEPATITIS_CASE
       ADD  ( FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE HEPATITIS_CASE
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE HEPATITIS_CASE
       ADD  ( FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE HEPATITIS_CASE
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE HEPATITIS_CASE
       ADD  ( FOREIGN KEY (HEP_MULTI_VAL_GRP_KEY)
                             REFERENCES HEP_MULTI_VALUE_FIELD_GROUP ) ;


ALTER TABLE HEPATITIS_CASE
       ADD  ( FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE HEPATITIS_CASE
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE LAB_RESULT_COMMENT
       ADD  ( FOREIGN KEY (RESULT_COMMENT_GRP_KEY)
                             REFERENCES RESULT_COMMENT_GROUP ) ;


ALTER TABLE LAB_RESULT_CONDITION
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE LAB_RESULT_CONDITION
       ADD  ( FOREIGN KEY (LAB_RESULT_GRP_KEY)
                             REFERENCES LAB_RESULT_GROUP ) ;


ALTER TABLE LAB_RESULT_VAL
       ADD  ( FOREIGN KEY (TEST_RESULT_GRP_KEY)
                             REFERENCES TEST_RESULT_GROUPING ) ;


ALTER TABLE LAB_RPT_USER_COMMENT
       ADD  ( FOREIGN KEY (LAB_TEST_KEY)
                             REFERENCES LAB_TEST ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (RESULT_COMMENT_GRP_KEY)
                             REFERENCES RESULT_COMMENT_GROUP ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (TEST_RESULT_GRP_KEY)
                             REFERENCES TEST_RESULT_GROUPING ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (PERFORMING_LAB_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (PATIENT_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (LAB_TEST_TECHNICIAN_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (COPY_TO_PROVIDER_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (SPECIMEN_COLLECTOR_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (LAB_TEST_KEY)
                             REFERENCES LAB_TEST ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (REPORTING_LAB_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (ORDERING_ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (LAB_RPT_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (MORB_RPT_KEY)
                             REFERENCES MORBIDITY_REPORT ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE LAB_TEST_RESULT
       ADD  ( FOREIGN KEY (ORDERING_PROVIDER_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE LDF_DATA
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE MEASLES_CASE
       ADD  ( FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE MEASLES_CASE
       ADD  ( FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE MEASLES_CASE
       ADD  ( FOREIGN KEY (PATIENT_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE MEASLES_CASE
       ADD  ( FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE MEASLES_CASE
       ADD  ( FOREIGN KEY (REPORTER_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE MEASLES_CASE
       ADD  ( FOREIGN KEY (INV_RPT_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE MEASLES_CASE
       ADD  ( FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE MEASLES_CASE
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE MEASLES_CASE
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE MEASLES_CASE
       ADD  ( FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE MEASLES_CASE
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE MORB_RPT_USER_COMMENT
       ADD  ( FOREIGN KEY (MORB_RPT_KEY)
                             REFERENCES MORBIDITY_REPORT ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (PATIENT_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (REPORTER_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (HEALTH_CARE_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (HSPTL_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (NURSING_HOME_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (MORB_RPT_SRC_ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (MORB_RPT_KEY)
                             REFERENCES MORBIDITY_REPORT ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (HSPTL_DISCHARGE_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (ILLNESS_ONSET_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (MORB_RPT_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (MORB_RPT_CREATE_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE MORBIDITY_REPORT_EVENT
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE NOTIFICATION_EVENT
       ADD  ( FOREIGN KEY (NOTIFICATION_SENT_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE NOTIFICATION_EVENT
       ADD  ( FOREIGN KEY (PATIENT_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE NOTIFICATION_EVENT
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE NOTIFICATION_EVENT
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE NOTIFICATION_EVENT
       ADD  ( FOREIGN KEY (NOTIFICATION_SUBMIT_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE NOTIFICATION_EVENT
       ADD  ( FOREIGN KEY (NOTIFICATION_KEY)
                             REFERENCES NOTIFICATION ) ;


ALTER TABLE ORG_CONTACT
       ADD  ( FOREIGN KEY (CONTACT_KEY)
                             REFERENCES CONTACT_INFO ) ;


ALTER TABLE ORG_CONTACT
       ADD  ( FOREIGN KEY (ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE ORG_ID
       ADD  ( FOREIGN KEY (ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE ORG_LOCATION
       ADD  ( FOREIGN KEY (LOCATION_KEY)
                             REFERENCES LOCATION ) ;


ALTER TABLE ORG_LOCATION
       ADD  ( FOREIGN KEY (ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE ORG_ROLE
       ADD  ( FOREIGN KEY (ORG_ROLE_KEY)
                             REFERENCES ORG_ROLE_CODE ) ;


ALTER TABLE ORG_ROLE
       ADD  ( FOREIGN KEY (ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE ORGANIZATION_LDF_GROUP
       ADD  ( FOREIGN KEY (ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE ORGANIZATION_LDF_GROUP
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE PERSON_CONTACT
       ADD  ( FOREIGN KEY (CONTACT_KEY)
                             REFERENCES CONTACT_INFO ) ;


ALTER TABLE PERSON_CONTACT
       ADD  ( FOREIGN KEY (PERSON_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERSON_ETHNICITY
       ADD  ( FOREIGN KEY (DETAIL_ETHNICITY_KEY)
                             REFERENCES DETAIL_ETHNICITY ) ;


ALTER TABLE PERSON_ETHNICITY
       ADD  ( FOREIGN KEY (PERSON_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERSON_FACT
       ADD  ( FOREIGN KEY (PERSON_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERSON_ID
       ADD  ( FOREIGN KEY (PERSON_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERSON_LDF
       ADD  ( FOREIGN KEY (PERSON_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERSON_LDF_CLINIC
       ADD  ( FOREIGN KEY (PERSON_KEY)
                             REFERENCES PERSON_LDF ) ;


ALTER TABLE PERSON_LDF_CLINIC
       ADD  ( FOREIGN KEY (CLINIC_KEY)
                             REFERENCES CLINIC_VISITED ) ;


ALTER TABLE PERSON_LDF_GROUP
       ADD  ( FOREIGN KEY (PERSON_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERSON_LDF_GROUP
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE PERSON_LOCATION
       ADD  ( FOREIGN KEY (LOCATION_KEY)
                             REFERENCES LOCATION ) ;


ALTER TABLE PERSON_LOCATION
       ADD  ( FOREIGN KEY (PERSON_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERSON_NAME
       ADD  ( FOREIGN KEY (NAME_KEY)
                             REFERENCES NAME ) ;


ALTER TABLE PERSON_NAME
       ADD  ( FOREIGN KEY (PERSON_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERSON_RACE
       ADD  ( FOREIGN KEY (RACE_KEY)
                             REFERENCES RACE ) ;


ALTER TABLE PERSON_RACE
       ADD  ( FOREIGN KEY (PERSON_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERSON_RELATIONSHIP
       ADD  ( FOREIGN KEY (PERSON_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (CASE_LOCATION_KEY)
                             REFERENCES LOCATION ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (REPORTER_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (PATIENT_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (PERTUSSIS_SUSPECT_SRC_GRP_KEY)
                             REFERENCES PERTUSSIS_SUSPECTED_SOURCE_GRP ) ;


ALTER TABLE PERTUSSIS_CASE
       ADD  ( FOREIGN KEY (PERTUSSIS_TREATMENT_GRP_KEY)
                             REFERENCES PERTUSSIS_TREATMENT_GROUP ) ;


ALTER TABLE PERTUSSIS_SUSPECTED_SOURCE_FLD
       ADD  ( FOREIGN KEY (PERTUSSIS_SUSPECT_SRC_GRP_KEY)
                             REFERENCES PERTUSSIS_SUSPECTED_SOURCE_GRP ) ;


ALTER TABLE PERTUSSIS_TREATMENT_FIELD
       ADD  ( FOREIGN KEY (PERTUSSIS_TREATMENT_GRP_KEY)
                             REFERENCES PERTUSSIS_TREATMENT_GROUP ) ;


ALTER TABLE RUBELLA_CASE
       ADD  ( FOREIGN KEY (CASE_LOCATION_KEY)
                             REFERENCES LOCATION ) ;


ALTER TABLE RUBELLA_CASE
       ADD  ( FOREIGN KEY (REPORTER_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE RUBELLA_CASE
       ADD  ( FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE RUBELLA_CASE
       ADD  ( FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE RUBELLA_CASE
       ADD  ( FOREIGN KEY (PATIENT_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE RUBELLA_CASE
       ADD  ( FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE RUBELLA_CASE
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE RUBELLA_CASE
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE RUBELLA_CASE
       ADD  ( FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE RUBELLA_CASE
       ADD  ( FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE RUBELLA_CASE
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE SUMMARY_REPORT_CASE
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;


ALTER TABLE SUMMARY_REPORT_CASE
       ADD  ( FOREIGN KEY (SUMMARY_CASE_SRC_KEY)
                             REFERENCES SUMMARY_CASE_GROUP ) ;


ALTER TABLE SUMMARY_REPORT_CASE
       ADD  ( FOREIGN KEY (NOTIFICATION_SEND_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE SUMMARY_REPORT_CASE
       ADD  ( FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION ) ;


ALTER TABLE SUMMARY_REPORT_CASE
       ADD  ( FOREIGN KEY (LOCATION_KEY)
                             REFERENCES LOCATION ) ;


ALTER TABLE SUMMARY_REPORT_CASE
       ADD  ( FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP ) ;


ALTER TABLE VACCINATION
       ADD  ( FOREIGN KEY (VACCINE_MANUFACTURER_ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE VACCINATION
       ADD  ( FOREIGN KEY (PATIENT_KEY)
                             REFERENCES PERSON ) ;


ALTER TABLE VACCINATION
       ADD  ( FOREIGN KEY (VACCINE_GIVEN_BY_ORG_KEY)
                             REFERENCES ORGANIZATION ) ;


ALTER TABLE VACCINATION
       ADD  ( FOREIGN KEY (VACCINATION_DT_KEY)
                             REFERENCES RDB_DATE ) ;


ALTER TABLE VACCINATION
       ADD  ( FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION ) ;

DROP TABLE BMIRD_CASE;

DROP TABLE BMIRD_MULTI_VALUE_FIELD;

CREATE TABLE BMIRD_CASE (
       INVESTIGATOR_KEY     number(8) NOT NULL,
       PHYSICIAN_KEY        number(8) NOT NULL,
       PATIENT_KEY          number(8) NOT NULL,
       REPORTER_KEY         number(8) NOT NULL,
       NURSING_HOME_KEY     number(8) NOT NULL,
       DAYCARE_FACILITY_KEY number(8) NOT NULL,
       TRANSFERED_IND       VARCHAR2 (50) NULL,
       INV_ASSIGNED_DT_KEY  number(8) NOT NULL,
       BIRTH_WEIGHT_IN_GRAMS number(8) NULL,
       BIRTH_WEIGHT_POUNDS  number(8) NULL,
       CASE_LOCATION_KEY    number(8) NOT NULL,
       BIRTH_WEIGHT_OUNCES  number(8) NULL,
       PREGNANT_IND         VARCHAR2 (50) NULL,
       OUTCOME_OF_FETUS     VARCHAR2 (50) NULL,
       UNDER_1_MONTH_IND    VARCHAR2 (50) NULL,
       GESTATIONAL_AGE      number(11,5) NULL,
       BACTERIAL_SPECIES_ISOLATED VARCHAR2 (50) NULL,
       FIRST_POSITIVE_CULTURE_DT DATE NULL,
       UNDERLYING_CONDITION_IND VARCHAR2 (50) NULL,
       PATIENT_YR_IN_COLLEGE VARCHAR2 (50) NULL,
       CULTURE_SEROTYPE     VARCHAR2 (50) NULL,
       PATIENT_STATUS_IN_COLLEGE VARCHAR2 (50) NULL,
       PATIENT_CURR_LIVING_SITUATION VARCHAR2 (50) NULL,
       HIB_VACC_RECEIVED_IND VARCHAR2 (50) NULL,
       CULTURE_SEROGROUP    VARCHAR2 (50) NULL,
       ATTENDING_COLLEGE_IND VARCHAR2 (50) NULL,
       OXACILLIN_ZONE_SIZE  number(11,5) NULL,
       OXACILLIN_INTERPRETATION VARCHAR2 (50) NULL,
       PNEUVACC_RECEIVED_IND VARCHAR2 (50) NULL,
       PNEUCONJ_RECEIVED_IND VARCHAR2 (50) NULL,
       FIRST_ADDITIONAL_SPECIMEN_DT DATE NULL,
       SECOND_ADDITIONAL_SPECIMEN_DT DATE NULL,
       PATIENT_HAD_SURGERY_IND VARCHAR2 (50) NULL,
       SURGERY_DT           DATE NULL,
       PATIENT_HAVE_BABY_IND VARCHAR2 (50) NULL,
       BABY_DELIVERY_DT     DATE NULL,
       IDENT_THRU_AUDIT_IND VARCHAR2 (50) NULL,
       SAME_PATHOGEN_RECURRENT_IND VARCHAR2 (50) NULL,
       OTHER_SPECIES_ISOLATE_SITE VARCHAR2 (2000) NULL,
       OTHER_CASE_IDENT_METHOD VARCHAR2 (2000) NULL,
       OTHER_HOUSING_OPTION VARCHAR2 (2000) NULL,
       PATIENT_CURR_ATTEND_SCHOOL_NM VARCHAR2 (100) NULL,
       POLYSAC_MENINGOC_VACC_IND VARCHAR(50) NULL,       FAMILY_MEDICAL_INSURANCE_TYPE VARCHAR2 (50) NULL,
       HIB_CONTACT_IN_LAST_2_MON_IND VARCHAR2 (50) NULL,
       TYPE_HIB_CONTACT_IN_LAST_2_MON VARCHAR2 (2000) NULL,
       PRETERM_BIRTH_WK_NBR number(11,5) NULL,
       IMMUNOSUPRESSION_HIV_STATUS VARCHAR2 (2000) NULL,
       ACUTE_SERUM_AVAILABLE_IND VARCHAR2 (50) NULL,
       ACUTE_SERUM_AVAILABLE_DT DATE NULL,
       CONVALESNT_SERUM_AVAILABLE_IND VARCHAR2 (50) NULL,
       CONVALESNT_SERUM_AVAILABLE_DT DATE NULL,
       BIRTH_OUTSIDE_HSPTL_IND VARCHAR2 (50) NULL,
       BIRTH_OUTSIDE_HSPTL_LOCATION VARCHAR2 (50) NULL,
       BABY_HSPTL_DISCHARGE_DTTIME DATE NULL,
       BABY_SAME_HSPTL_READMIT_IND VARCHAR2 (50) NULL,
       BABY_SAME_HSPTL_READMIT_DTTIME DATE NULL,
       FRM_HOME_TO_DIF_HSPTL_IND VARCHAR2 (50) NULL,
       FRM_HOME_TO_DIF_HSPTL_DTTIME DATE NULL,
       MOTHER_LAST_NM       VARCHAR2 (50) NULL,
       MOTHER_FIRST_NM      VARCHAR2 (50) NULL,
       MOTHER_HOSPTL_ADMISSION_DTTIME DATE NULL,
       MOTHER_PATIENT_CHART_NBR VARCHAR2 (2000) NULL,
       MOTHER_PENICILLIN_ALLERGY_IND VARCHAR2 (50) NULL,
       MEMBRANE_RUPTURE_DTTIME DATE NULL,
       MEMBRANE_RUPTURE_GE_18HRS_IND VARCHAR2 (50) NULL,
       RUPTURE_BEFORE_LABOR_ONSET VARCHAR2 (50) NULL,
       MEMBRANE_RUPTURE_TYPE VARCHAR2 (50) NULL,
       DELIVERY_TYPE        VARCHAR2 (50) NULL,
       MOTHER_INTRAPARTUM_FEVER_IND VARCHAR2 (50) NULL,
       FIRST_INTRAPARTUM_FEVER_DTTIME DATE NULL,
       RECEIVED_PRENATAL_CARE_IND VARCHAR2 (50) NULL,
       PRENATAL_CARE_IN_LABOR_CHART VARCHAR2 (50) NULL,
       PRENATAL_CARE_VISIT_NBR number(11,5) NULL,
       FIRST_PRENATAL_CARE_VISIT_DT DATE NULL,
       LAST_PRENATAL_CARE_VISIT_DT DATE NULL,
       LAST_PRENATAL_CARE_VISIT_EGA number(11,5) NULL,
       GBS_BACTERIURIA_IN_PREGNANCY VARCHAR2 (50) NULL,
       PREVIOUS_BIRTH_WITH_GBS_IND VARCHAR2 (50) NULL,
       GBS_CULTURED_BEFORE_ADMISSION VARCHAR2 (50) NULL,
       GBS_1ST_CULTURE_DT   DATE NULL,
       GBS_1ST_CULTURE_POSITIVE_IND VARCHAR2 (50) NULL,
       GBS_2ND_CULTURE_DT   DATE NULL,
       GBS_2ND_CULTURE_POSITIVE_IND VARCHAR2 (50) NULL,
       GBS_AFTER_ADM_BEFORE_DELIVERY VARCHAR2 (50) NULL,
       AFTER_ADM_GBS_CULTURE_DT DATE NULL,
       GBS_CULTURE_DELIVERY_AVAILABLE VARCHAR2 (50) NULL,
       INTRAPARTUM_ANTIBIOTICS_GIVEN VARCHAR2 (50) NULL,
       FIRST_ANTIBIOTICS_GIVEN_DTTIME DATE NULL,
       INTRAPARTUMANTIBIOTICSINTERVAL VARCHAR2 (20) NULL,
       INTRAPARTUM_ANTIBIOTICS_REASON VARCHAR2 (50) NULL,
       BABY_BIRTH_TIME      VARCHAR2 (20) NULL,
       NEISERRIA_2NDARY_CASE_IND VARCHAR2 (50) NULL,
       NEISERRIA_2ND_CASE_CONTRACT VARCHAR2 (50) NULL,
       OTHER_2NDARY_CASE_TYPE VARCHAR2 (2000) NULL,
       NEISERRIA_RESIST_TO_RIFAMPIN VARCHAR2 (50) NULL,
       NEISERRIA_RESIST_TO_SULFA VARCHAR2 (50) NULL,
       FIRST_HSPTL_DISCHARGE_TIME VARCHAR2 (2000) NULL,
       FIRST_HSPTL_READMISSION_TIME VARCHAR2 (2000) NULL,
       SECOND_HSPTL_ADMISSION_TIME VARCHAR2 (2000) NULL,
       ABCCASE              VARCHAR2 (50) NULL,
       HSPTL_MATERNAL_ADMISSION_TIME VARCHAR2 (2000) NULL,
       MEMBRANE_RUPTURE_TIME VARCHAR2 (2000) NULL,
       INTRAPARTUM_FEVER_RECORD_TIME VARCHAR2 (2000) NULL,
       ANTIBIOTICS_1ST_ADMIN_TIME VARCHAR2 (2000) NULL,
       BMIRD_MULTI_VAL_GRP_KEY number(8) NOT NULL,
       OTHER_PRIOR_ILLNESS  VARCHAR2 (2000) NULL,
       OTHER_MALIGNANCY     VARCHAR2 (2000) NULL,
       ORGAN_TRANSPLANT     VARCHAR2 (2000) NULL,
       DAYCARE_IND          VARCHAR2 (50) NULL,
       NURSING_HOME_IND     VARCHAR2 (50) NULL,
       TYPES_OF_OTHER_INFECTION VARCHAR2 (2000) NULL,
       BACTERIAL_OTHER_SPECIED VARCHAR2 (2000) NULL,
       STERILE_SITE_OTHER   VARCHAR2 (2000) NULL,
       UNDERLYING_CONDITIONS_OTHER VARCHAR2 (2000) NULL,
       CULTURE_SEROGROUP_OTHER VARCHAR2 (2000) NULL,
       PERSISTENT_DISEASE_IND VARCHAR2 (50) NULL,
       GBS_CULTURE_POSITIVE_IND VARCHAR2 (50) NULL,
       ANTIMICROBIAL_GRP_KEY number(8) NOT NULL,
       ANTIBIOTICS_GRP_KEY  number(8) NOT NULL,
       BACTERIAL_OTHER_ISOLATED VARCHAR2 (50) NULL,
       INVESTIGATION_KEY    number(8) NOT NULL,
       ADT_HSPTL_KEY        number(8) NOT NULL,
       RPT_SRC_ORG_KEY      number(8) NOT NULL,
       CONDITION_KEY        number(8) NOT NULL,
       FAMILY_MED_INSURANCE_TYPE_OTHE VARCHAR2 (2000) NULL,
       LDF_GROUP_KEY        number(8) NOT NULL,
       PRIOR_STATE_CASE_ID  VARCHAR2 (2000) NULL,
       BIRTH_CNTRY_CD       VARCHAR2 (50) NULL,
       INITIAL_HSPTL_NAME   VARCHAR2 (100) NULL,
       BIRTH_HSPTL_NAME     VARCHAR2 (100) NULL,
       FROM_HOME_HSPTL_NAME VARCHAR2 (100) NULL,
       CULTURE_IDENT_ORG_NAME VARCHAR2 (100) NULL,
       TRANSFER_FRM_HSPTL_NAME VARCHAR2 (100) NULL,
       CASE_REPORT_STATUS   VARCHAR2 (50) NULL,
       TRANSFER_FRM_HSPTL_ID VARCHAR2 (100) NULL,
       BIRTH_HSPTL_ID       VARCHAR2 (100) NULL,
       DIF_HSPTL_ID         VARCHAR2 (100) NULL,
       ABC_STATE_CASE_ID    VARCHAR2 (100) NULL,
       INV_PATIENT_CHART_NBR VARCHAR2 (2000) NULL,
       OTHSPEC1             VARCHAR2 (20) NULL,
       OTHSPEC2             VARCHAR2 (20) NULL,
       INTBODYSITE          VARCHAR2 (20) NULL,
       OTHILL2              VARCHAR2 (20) NULL,
       OTHILL3              VARCHAR2 (20) NULL,
       OTHNONSTER           VARCHAR2 (20) NULL,
       OTHSEROTYPE          VARCHAR2 (20) NULL,
       HINFAGE              VARCHAR2 (20) NULL,
       ABCSINVLN            VARCHAR2 (20) NULL,
       ABCSINVFN            VARCHAR2 (20) NULL,
       ABCSINVEMAIL         VARCHAR2 (20) NULL,
       ABCSINVTELE          VARCHAR2 (20) NULL,
       ABCSINVEXT           VARCHAR2 (20) NULL,
       GEOCODING_LOCATION_KEY NUMBER(8)
);

ALTER TABLE BMIRD_CASE
       ADD CONSTRAINT PK_BMIRD_CASE PRIMARY KEY  (
	 INVESTIGATOR_KEY,
       PHYSICIAN_KEY,
       PATIENT_KEY,
       REPORTER_KEY,
       NURSING_HOME_KEY,
       DAYCARE_FACILITY_KEY,
       INV_ASSIGNED_DT_KEY,
       CASE_LOCATION_KEY,
       BMIRD_MULTI_VAL_GRP_KEY,
       ANTIBIOTICS_GRP_KEY,
       ANTIMICROBIAL_GRP_KEY,
       INVESTIGATION_KEY ,
       ADT_HSPTL_KEY  ,
       RPT_SRC_ORG_KEY ,
       CONDITION_KEY ,
       LDF_GROUP_KEY );


CREATE TABLE BMIRD_MULTI_VALUE_FIELD (
       BMIRD_MULTI_VAL_FIELD_KEY number(8) NOT NULL,
       TYPES_OF_INFECTIONS  VARCHAR2 (50) NULL,
       UNDERLYING_CONDITION_NM VARCHAR2 (50) NULL,
       NON_STERILE_SITE     VARCHAR2 (50) NULL,
       STREP_PNEUMO_2_CULTURE_SITES VARCHAR2 (50) NULL,
       STREP_PNEUMO_1_CULTURE_SITES VARCHAR2 (50) NULL,
       GBS_2ND_CULTURE_SITES VARCHAR2 (50) NULL,
       GBS_1ST_CULTURE_SITES VARCHAR2 (50) NULL,
       PAST_SIGNIFICANT_MEDICAL_HIST VARCHAR2 (50) NULL,
       STERILE_SITE         VARCHAR2 (50) NULL,
       AFTER_ADM_GBS_CULTURE_SITES VARCHAR2 (50) NULL,
       BMIRD_MULTI_VAL_GRP_KEY number(8) NOT NULL,
       OTHER_PRIOR_CONDITION_IND VARCHAR2 (50) NULL,
       HOW_WAS_CASE_IDENTIFIED VARCHAR2 (50) NULL,
       OTHERBUG2            VARCHAR2 (20) NULL,
       TYPE_OF_INSURANCE    VARCHAR2(50) NULL,
       PCR_SOURCE VARCHAR2(50) NULL );

ALTER TABLE BMIRD_MULTI_VALUE_FIELD
       ADD PRIMARY KEY (BMIRD_MULTI_VAL_FIELD_KEY, 
              BMIRD_MULTI_VAL_GRP_KEY)
/


ALTER TABLE BMIRD_CASE ADD FOREIGN KEY (REPORTER_KEY) REFERENCES PERSON  
/
ALTER TABLE BMIRD_CASE ADD FOREIGN KEY (PATIENT_KEY)  REFERENCES PERSON  
/

ALTER TABLE BMIRD_CASE ADD FOREIGN KEY (INVESTIGATOR_KEY) REFERENCES PERSON  
/

ALTER TABLE BMIRD_CASE ADD FOREIGN KEY (PHYSICIAN_KEY) REFERENCES PERSON  
/

ALTER TABLE BMIRD_CASE ADD FOREIGN KEY (DAYCARE_FACILITY_KEY) REFERENCES ORGANIZATION  
/

ALTER TABLE BMIRD_CASE ADD FOREIGN KEY (NURSING_HOME_KEY) REFERENCES ORGANIZATION  
/

ALTER TABLE BMIRD_CASE ADD FOREIGN KEY (CASE_LOCATION_KEY) REFERENCES LOCATION    
/

ALTER TABLE BMIRD_CASE  ADD FOREIGN KEY (INV_ASSIGNED_DT_KEY)  REFERENCES RDB_DATE   
/

ALTER TABLE BMIRD_CASE ADD FOREIGN KEY (BMIRD_MULTI_VAL_GRP_KEY)  REFERENCES BMIRD_MULTI_VALUE_FIELD_GROUP   
/

ALTER TABLE BMIRD_CASE  ADD FOREIGN KEY (INVESTIGATION_KEY)  REFERENCES INVESTIGATION  
/

ALTER TABLE BMIRD_CASE ADD FOREIGN KEY (CONDITION_KEY)    REFERENCES CONDITION     
/

ALTER TABLE BMIRD_CASE  ADD FOREIGN KEY (ANTIBIOTICS_GRP_KEY)     REFERENCES ANTIBIOTICS_GROUP     
/

ALTER TABLE BMIRD_CASE ADD FOREIGN KEY (ANTIMICROBIAL_GRP_KEY)  REFERENCES ANTIMICROBIAL_GROUP  
/

ALTER TABLE BMIRD_CASE  ADD FOREIGN KEY (ADT_HSPTL_KEY) REFERENCES ORGANIZATION   
/

ALTER TABLE BMIRD_CASE   ADD FOREIGN KEY (RPT_SRC_ORG_KEY)  REFERENCES ORGANIZATION   
/

ALTER TABLE BMIRD_CASE ADD FOREIGN KEY (LDF_GROUP_KEY)  REFERENCES LDF_GROUP  
/

ALTER TABLE BMIRD_MULTI_VALUE_FIELD ADD FOREIGN KEY (BMIRD_MULTI_VAL_GRP_KEY)   REFERENCES BMIRD_MULTI_VALUE_FIELD_GROUP     
/
-- R113 to R113 Service pack 1
ALTER TABLE Lab_Test add  CONDITION_CD   VARCHAR2(20)
/
-- R113 to R113 SP1 alter LDF_value from VARCHAR2(100) to VARCHAR2(2000)
ALTER TABLE LDF_Data  modify LDF_value VARCHAR2( 2000 )
/
ALTER TABLE LDF_Data  modify CLASS_CD VARCHAR2( 20 )
/

-- Added by ERG for release 113 sp2
CREATE TABLE USER_PROFILE
(
  NEDSS_ENTRY_ID  NUMBER(20) NOT NULL,
  FIRST_NM        VARCHAR2(50),
  LAST_UPD_TIME   DATE,
  LAST_NM         VARCHAR2(50),
  CONSTRAINT PK_USER_PROFILE PRIMARY KEY (NEDSS_ENTRY_ID)
);



CREATE VIEW REJECTED_NND AS  
SELECT 
  c.condition_desc,
  c.condition_cd,
  rd.date_mm_dd_yyyy,
  n.notification_status,
  n.notification_comments,
  i.inv_case_status,
  i.inv_local_id,
  i.case_rpt_mmwr_wk,
  i.case_rpt_mmwr_yr,
  p.person_local_id,
  p.person_first_nm,
  p.person_last_nm,
  i.jurisdiction_nm,
  i.investigation_status,
  i.case_oid as program_jurisdiction_oid
FROM 
  notification_event ne,
  notification n,
  condition c,
  investigation i,
  person p,
  rdb_date rd
WHERE 
  ne.notification_key = n.notification_key  and
  ne.notification_submit_dt_key = rd.date_key  and
  ne.condition_key = c.condition_key  and
  ne.investigation_key = i.investigation_key  and
  ne.patient_key = p.person_key  and
  n.notification_status = 'REJECTED'  and
  i.case_type != 'S';



CREATE VIEW ORG_LINE_LIST AS  
SELECT 
  org.org_local_id,
  org.org_nm,
  org.org_quick_cd,
  org.org_electronic_ind,
  l.state_short_desc,
  l.cnty_short_desc,
  l.city_short_desc,
  l.zip_cd_5,
  l.street_addr_1,
  l.street_addr_2,
  c.phone_nbr,
  c.phone_ext,
  l.cnty_fips,
  l.state_fips
FROM 
  organization org,
  org_location orgl,
  location l,
  org_contact orgc,
  contact_info c
WHERE 
  org.org_key = orgl.org_key  and
  l.location_key = orgl.location_key  and
  orgl.addr_type = 'O'  and
  orgl.address_use = 'WP'  and
  c.contact_key = orgc.contact_key  and
  org.org_key = orgc.org_key  and
  org.org_key > '1';


CREATE TABLE EVENT_METRIC
(
  EVENT_TYPE               VARCHAR2(50), 
  EVENT_UID                NUMBER(20),
  LOCAL_ID                 VARCHAR2(50),
  LOCAL_PATIENT_ID         VARCHAR2(50),
  CONDITION_CD		   VARCHAR2(50),
  CONDITION_DESC_TXT       VARCHAR2(300),
  PROG_AREA_CD             VARCHAR2(20),
  PROG_AREA_DESC_TXT       VARCHAR2(50),  
  PROGRAM_JURISDICTION_OID NUMBER(20), 
  JURISDICTION_CD          VARCHAR2(20),
  JURISDICTION_DESC_TXT    VARCHAR2(255),
  RECORD_STATUS_CD         VARCHAR2(20),
  RECORD_STATUS_DESC_TXT   VARCHAR2(300),
  RECORD_STATUS_TIME       DATE,
  ELECTRONIC_IND	   CHAR(1),
  STATUS_CD                VARCHAR2(20),
  STATUS_DESC_TXT          VARCHAR2(300),
  STATUS_TIME              DATE,
  ADD_TIME                 DATE,
  ADD_USER_ID              NUMBER(20),
  LAST_CHG_TIME            DATE,
  LAST_CHG_USER_ID         NUMBER(20),
  CASE_CLASS_CD			VARCHAR2(20),
  CASE_CLASS_DESC_TXT		VARCHAR2(300),
  INVESTIGATION_STATUS_CD	VARCHAR2(20),
  INVESTIGATION_STATUS_DESC_TXT	VARCHAR2(300),
  ADD_USER_NAME			VARCHAR2(300),
  LAST_CHG_USER_NAME		VARCHAR2(300),
  CONSTRAINT PK_EVENT_METRIC PRIMARY KEY (EVENT_TYPE, EVENT_UID)
);

CREATE TABLE SR100 (
	LOCAL_ID 	 		varchar2(50) NOT NULL ,
	MMWRWK 	   			NUMBER(8) NOT NULL ,
	MMWRYR 				NUMBER(8) NOT NULL ,
	NBR_CASES 			number(8, 0) NULL ,
	CONDITION_CD			varchar2(50) NOT NULL ,
	CONDITION			varchar2(300) NOT NULL ,
	COUNTY_CD			varchar2(50) NOT NULL ,
	COUNTY_NAME			varchar2(300) NOT NULL ,
	STATE_CD			varchar2(50) NOT NULL,
	RPT_SOURCE 			varchar2(100) NULL ,
	RPT_SOURCE_DESC			varchar2(300) NULL ,
	DATE_REPORTED			date NOT NULL ,
        MONTH_REPORTED                  varchar2(20) NOT NULL ,
	NOTIF_CREATE_DATE               date NULL ,
        NOTIF_CREATE_MONTH 		varchar2(20) NULL ,
        NOTIF_CREATE_YEAR               number(4, 0) NULL ,
	REPORT_COMMENTS 		varchar2(2000) NULL,
        DATE_ADDED 			date NOT NULL ,
        ADD_USER_NAME 			varchar2(300) NOT NULL,
        INVESTIGATION_KEY 		number(8, 0) NOT NULL
);


CREATE TABLE HEP100
	( PATIENT_LOCAL_ID				VARCHAR2(50) NOT NULL,
	PATIENT_FIRST_NM				VARCHAR2(50),
	PATIENT_MIDDLE_NM				VARCHAR2(50),
	PATIENT_LAST_NM					VARCHAR2(50),					         
	PATIENT_DOB					DATE,
	PATIENT_REPORTEDAGE				NUMBER(8),  
	PATIENT_REPORTED_AGE_UNITS			VARCHAR2(50),
	ADDR_USE_CD_DESC				VARCHAR2(300),
	ADDR_CD_DESC					VARCHAR2(300),
	PATIENT_ADDRESS					VARCHAR2(725),  	
	PATIENT_CITY					VARCHAR2(100),
	PATIENT_COUNTY 					VARCHAR2(300),
	PATIENT_ZIP_CODE				VARCHAR2(20), 
	PATIENT_CURR_GENDER				CHAR(1),
	PATIENT_ELECTRONIC_IND				VARCHAR2(50),
	RACE 						VARCHAR2(500),
	CONDITION_CD					VARCHAR2(50),
	CONDITION 					VARCHAR2(50),
	PROGRAM_JURISDICTION_OID			NUMBER(20),
	INV_LOCAL_ID					VARCHAR2(50) NOT NULL,
	INVESTIGATION_STATUS				VARCHAR2(50),
	INV_CASE_STATUS					VARCHAR2(50),
	INV_JURISDICTION_NM				VARCHAR2(100),
	RPT_SRC_CD_DESC					VARCHAR2(100),
	REPORTING_SOURCE				VARCHAR2(100),
	REPORTING_SOURCE_COUNTY				VARCHAR2(255),
	REPORTING_SOURCE_CITY				VARCHAR2(100),
	REPORTING_SOURCE_STATE				VARCHAR2(100),
	REPORTING_SOURCE_ADDRESS_USE			VARCHAR2(300),
	REPORTING_SOURCE_ADDRESS_TYPE			VARCHAR2(300),
	PHYSICIAN_NAME					VARCHAR2(152),
	PHYSICIAN_COUNTY				VARCHAR2(255),
	PHYSICIAN_CITY					VARCHAR2(100),
	PHYSICIAN_STATE					VARCHAR2(100),
	PHYSICIAN_ADDRESS_USE_DESC			VARCHAR2(300),
	PHYSICIAN_ADDRESS_TYPE_DESC			VARCHAR2(300),
	INVESTIGATOR_NAME				VARCHAR2(152),
	HEP_A_TOTAL_ANTIBODY				VARCHAR2(50),
	HEP_A_IGM_ANTIBODY				VARCHAR2(50),
	HEP_B_SURFACE_ANTIGEN				VARCHAR2(50),
	HEP_B_TOTAL_ANTIBODY				VARCHAR2(50),
	HEP_B_IGM_ANTIBODY				VARCHAR2(50),
	HEP_C_TOTAL_ANTIBODY				VARCHAR2(50),
	HEP_D_TOTAL_ANTIBODY				VARCHAR2(50),
	HEP_E_TOTAL_ANTIBODY				VARCHAR2(50),
	ANTIHCV_SIGNAL_TO_CUTOFF_RATIO			VARCHAR2(2000),
	ANTIHCV_SUPPLEMENTAL_ASSAY			VARCHAR2(50),
	HCV_RNA						VARCHAR2(50),
	ALT_SGPT_RESULT					NUMBER(11),
	ALT_SGPT_RESULT_UPPER_LIMIT			NUMBER(11),
	AST_SGOT_RESULT					NUMBER(11),
	AST_SGOT_RESULT_UPPER_LIMIT			NUMBER(11),
	ALT_RESULT_DT					DATE,
	AST_RESULT_DT					DATE,
	INV_START_DT 					DATE,
	INV_RPT_DT					DATE,
	EARLIEST_RPT_TO_CNTY_DT 			DATE,
	EARLIEST_RPT_TO_STATE_DT 			DATE,
	DIE_FRM_THIS_ILLNESS_IND 			VARCHAR2(50),
	ILLNESS_ONSET_DT				DATE,
	DIAGNOSIS_DT					DATE,
	HSPTLIZD_IND					VARCHAR2(50),
	HSPTL_ADMISSION_DT				DATE,
	HSPTL_DISCHARGE_DT				DATE,
	HSPTL_DURATION_DAYS				NUMBER(20),
	OUTBREAK_IND					VARCHAR2(50),
	TRANSMISSION_MODE				VARCHAR2(50),
	DISEASE_IMPORTED_IND				VARCHAR2(50),
	IMPORT_FROM_COUNTRY				VARCHAR2(50),
	IMPORT_FROM_STATE				VARCHAR2(50),
	IMPORT_FROM_COUNTY				VARCHAR2(50),
	IMPORT_FROM_CITY				VARCHAR2(2000),
	INV_COMMENTS					VARCHAR2(2000),
	CASE_RPT_MMWR_WEEK				NUMBER(8),
	CASE_RPT_MMWR_YEAR				NUMBER(8),
	PATIENT_SYMPTOMATIC_IND				VARCHAR2(50),
	PATIENT_JUNDICED_IND				VARCHAR2(50),
	PATIENT_PREGNANT_IND				VARCHAR2(50),
	PATIENT_PREGNANCY_DUE_DT			DATE,
	HEP_A_EPLINK_IND				VARCHAR2(50),
	HEP_A_CONTACTED_IND				VARCHAR2(50),
	D_N_P_EMPLOYEE_IND				VARCHAR2(50),
	D_N_P_HOUSEHOLD_CONTACT_IND			VARCHAR2(50),
	HEP_A_KEYENT_IN_CHILDCARE_IND			VARCHAR2(50),
	HEPA_MALE_SEX_PARTNER_NBR			VARCHAR2(50),
	HEPA_FEMALE_SEX_PARTNER_NBR			VARCHAR2(50),
	STREET_DRUG_INJECTED_IN_2_6_WK			VARCHAR2(50),
	STREET_DRUG_USED_IN_2_6_WK			VARCHAR2(50),
	TRAVEL_OUT_USA_CAN_IND				VARCHAR2(50),
	HOUSEHOLD_NPP_OUT_USA_CAN			VARCHAR2(50),
	PART_OF_AN_OUTBRK_IND				VARCHAR2(50),
	ASSOCIATED_OUTBRK_TYPE				VARCHAR2(50),
	FOODBORNE_OUTBRK_FOOD_ITEM			VARCHAR2(2000),
	FOODHANDLER_2_WK_PRIOR_ONSET			VARCHAR2(50),
	HEP_A_VACC_RECEIVED_IND				VARCHAR2(50),
	HEP_A_VACC_RECEIVED_DOSE			VARCHAR2(50),
	HEP_A_VACC_LAST_RECEIVED_YR			NUMBER(11),
	IMMUNE_GLOBULIN_RECEIVED_IND			VARCHAR2(50),
	GLOBULIN_LAST_RECEIVED_YR			DATE,
	HEP_B_CONTACTED_IND				VARCHAR2(50),
	HEPB_STD_TREATED_IND				VARCHAR2(50),
	HEPB_STD_LAST_TREATMENT_YR			NUMBER(11),
	STREET_DRUG_INJECTED_IN6WKMON			VARCHAR2(50),
	STREET_DRUG_USED_IN6WKMON			VARCHAR2(50),
	HEPB_FEMALE_SEX_PARTNER_NBR			VARCHAR2(50),
	HEPB_MALE_SEX_PARTNER_NBR			VARCHAR2(50),
	HEMODIALYSIS_IN_LAST_6WKMON			VARCHAR2(50),
	BLOOD_CONTAMINATION_IN6WKMON			VARCHAR2(50),
	HEPB_BLOOD_RECEIVED_IN6WKMON			VARCHAR2(50),
	HEPB_BLOOD_RECEIVED_DT				DATE,
	OUTPATIENT_IV_INFUSION_IN6WKMO			VARCHAR2(50),
	BLOOD_EXPOSURE_IN_LAST6WKMON			VARCHAR2(50),
	BLOOD_EXPOSURE_IN6WKMON_OTHER			VARCHAR2(2000),
	HEPB_MED_DEN_EMPLOYEE_IN6WKMON			VARCHAR2(50),
	HEPB_MED_DEN_BLOOD_CONTACT_FRQ			VARCHAR2(50),
	HEPB_PUB_SAFETY_WORKER_IN6WKMO			VARCHAR2(50),
	HEPB_PUBSAFETY_BLOODCONTACTFRQ			VARCHAR2(50),
	TATTOOED_IN6WKMON_BEFORE_ONSET			VARCHAR2(50),
	PIERCING_IN6WKMON_BEFORE_ONSET			VARCHAR2(50),
	DEN_WORK_OR_SURGERY_IN6WKMON			VARCHAR2(50),
	NON_ORAL_SURGERY_IN6WKMON			VARCHAR2(50),
	HSPTLIZD_IN6WKMON_BEFORE_ONSET			VARCHAR2(50),
	LONGTERMCARE_RESIDENT_IN6WKMON			VARCHAR2(50),
	B_INCARCERATED24PLUSHRSIN6WKMO			VARCHAR2(50),
	B_INCARCERATED_6PLUS_MON_IND			VARCHAR2(50),
	B_LAST6PLUSMON_INCARCERATE_YR			NUMBER(8),
	BLAST6PLUSMO_INCARCERATEPERIOD			NUMBER(8),
	B_LAST_INCARCERATE_PERIOD_UNIT			VARCHAR2(50),
	HEP_B_VACC_RECEIVED_IND				VARCHAR2(50),
	HEP_B_VACC_SHOT_RECEIVED_NBR			VARCHAR2(50),
	HEP_B_VACC_LAST_RECEIVED_YR			NUMBER(8),
	ANTI_HBSAG_TESTED_IND				VARCHAR2(50),
	ANTI_HBS_POSITIVE_REACTIVE_IND			VARCHAR2(50),
	HEP_C_CONTACTED_IND				VARCHAR2(50),
	MED_DEN_EMPLOYEE_IN_2WK6MO			VARCHAR2(50),
	HEPC_MED_DEN_BLOOD_CONTACT_FRQ			VARCHAR2(50),
	PUBLIC_SAFETY_WORKER_IN_2WK6MO			VARCHAR2(50),
	HEPC_PUBSAFETY_BLOODCONTACTFRQ			VARCHAR2(50),
	TATTOOED_IN2WK6MO_BEFORE_ONSET			VARCHAR2(50),
	TATTOOED_IN2WK6MO_LOCATION			VARCHAR2(50),
	PIERCING_IN2WK6MO_BEFORE_ONSET			VARCHAR2(50),
	PIERCING_IN2WK6MO_LOCATION			VARCHAR2(50),
	STREET_DRUG_INJECTED_IN_2WK6MO			VARCHAR2(50),
	STREET_DRUG_USED_IN_2WK6MO			VARCHAR2(50),
	HEMODIALYSIS_IN_LAST_2WK6MO			VARCHAR2(50),
	BLOOD_CONTAMINATION_IN_2WK6MO			VARCHAR2(50),
	HEPC_BLOOD_RECEIVED_IN_2WK6MO			VARCHAR2(50),
	HEPC_BLOOD_RECEIVED_DT				DATE,
	BLOOD_EXPOSURE_IN_LAST2WK6MO			VARCHAR2(50),
	BLOOD_EXPOSURE_IN2WK6MO_OTHER			VARCHAR2(2000),
	DEN_WORK_OR_SURGERY_IN2WK6MO			VARCHAR2(50),
	NON_ORAL_SURGERY_IN2WK6MO			VARCHAR2(50),
	HSPTLIZD_IN2WK6MO_BEFORE_ONSET			VARCHAR2(50),
	LONGTERMCARE_RESIDENT_IN2WK6MO			VARCHAR2(50),
	INCARCERATED_24PLUSHRSIN2WK6MO			VARCHAR2(50),
	HEPC_FEMALE_SEX_PARTNER_NBR			VARCHAR2(50),
	HEPC_MALE_SEX_PARTNER_NBR			VARCHAR2(50),
	C_INCARCERATED_6PLUS_MON_IND			VARCHAR2(50),
	C_LAST6PLUSMON_INCARCERATE_YR			NUMBER(11),
	CLAST6PLUSMO_INCARCERATEPERIOD			NUMBER(11),
	C_LAST_INCARCERATE_PERIOD_UNIT			VARCHAR2(50),
	HEPC_STD_TREATED_IND				VARCHAR2(50),
	HEPC_STD_LAST_TREATMENT_YR			NUMBER(11),
	BLOOD_TRANSFUSION_BEFORE_1992			VARCHAR2(50),
	ORGAN_TRANSPLANT_BEFORE_1992			VARCHAR2(50),
	CLOT_FACTOR_CONCERN_BEFORE1987			VARCHAR2(50),
	LONGTERM_HEMODIALYSIS_IND			VARCHAR2(50),
	EVER_INJECT_NONPRESCRIBED_DRUG			VARCHAR2(50),
	LIFETIME_SEX_PARTNER_NBR 			NUMBER(15,5),
	EVER_INCARCERATED_IND				VARCHAR2(50),
	HEPATITIS_CONTACTED_IND				VARCHAR2(50),
	HEPATITIS_CONTACT_TYPE				VARCHAR2(50),
	HEPATITIS_OTHER_CONTACT_TYPE			VARCHAR2(2000),
	HEPC_MED_DEN_EMPLOYEE_IND			VARCHAR2(50),
	OUTPATIENT_IV_INFUSIONIN2WK6MO			VARCHAR2(50),
	EVENT_DATE					DATE,
	HEP_MULTI_VAL_GRP_KEY				NUMBER(8),
	INVESTIGATION_KEY			        NUMBER(8) NOT NULL,
	HEP_B_E_ANTIGEN  				VARCHAR2(50) NULL,
        HEP_B_DNA  					VARCHAR2(50) NULL
	);
	
ALTER TABLE HEP100
       ADD PRIMARY KEY (INVESTIGATION_KEY)
/
ALTER TABLE HEP100 ADD FOREIGN KEY (INVESTIGATION_KEY) REFERENCES INVESTIGATION
/

--View added on 3/8/2005 

CREATE OR REPLACE FORCE VIEW RDB.LAB_TEST_REPORT
(ROOT_ORDERED_TEST_PNTR, PARENT_TEST_PNTR, LAB_TEST_PNTR, REPORTING_FACILITY, ORDERING_FACILITY, 
 PROGRAM_AREA_CD, PROGRAM_AREA_DESC, JURISDICTION_CD, JURISDICTION_NM, LAB_RPT_DT, 
 LAB_RPT_RECEIVED_BY_PH_DT, ACCESSION_NBR, SPECIMEN_SRC, SPECIMEN_SITE, SPECIMEN_SITE_DESC, 
 SPECIMEN_COLLECTION_DT, ORDERED_TEST_NM, LAB_TEST_NM, RESULTED_DT, LAB_TEST_STATUS, 
 SPECIMEN_DESC, LAB_TEST_TYPE, PROGRAM_JURISDICTION_OID, SHARED_IND, RESULT_UNITS, 
 NUMERIC_RESULT_VAL, TEXT_RESULT_VAL, REF_RANGE_FRM, REF_RANGE_TO, CODED_RESULT_VAL, 
 CODED_RESULT_VAL_DESC, PATIENT_FIRST_NM, PATIENT_MIDDLE_NM, PATIENT_LAST_NM, PATIENT_NM_SUFFIX, 
 PROVIDER_FIRST_NM, PROVIDER_MIDDLE_NM, PROVIDER_LAST_NM, PROVIDER_NM_PREFIX, PROVIDER_NM_SUFFIX, 
 STREET_ADDR_1, STREET_ADDR_2, CITY_CD, CITY_DESC, STATE_CD, 
 STATE_DESC, ZIP_CD, ZIP_CD_DESC)
AS 
SELECT
 lt.ROOT_ORDERED_TEST_PNTR,
 lt.PARENT_TEST_PNTR,
 lt.LAB_TEST_PNTR,
 org1.ORG_NM AS reporting_facility,
 org2.ORG_NM AS ordering_facility,
 cond.PROGRAM_AREA_CD,
 cond.PROGRAM_AREA_DESC,
 lt.JURISDICTION_CD,
 lt.JURISDICTION_NM,
 lt.LAB_RPT_CREATED_DT AS lab_rpt_dt,
 lt.LAB_RPT_RECEIVED_BY_PH_DT,
 lt.ACCESSION_NBR,
 lt.SPECIMEN_SRC,
 lt.SPECIMEN_SITE,
 lt.SPECIMEN_SITE_DESC,
 lt.SPECIMEN_COLLECTION_DT,
 lt.ROOT_ORDERED_TEST_NM AS ordered_test_nm,
 lt.LAB_TEST_CD_DESC AS lab_test_nm,
 lt.LAB_TEST_DT AS resulted_dt,
 lt.LAB_TEST_STATUS,
 lt.SPECIMEN_DESC,
 lt.LAB_TEST_TYPE,
 lt.OID AS program_jurisdiction_oid,
 lt.LAB_RPT_SHARE_IND AS shared_ind,
 lrv.Result_Units AS Result_Units,
 lrv.NUMERIC_RESULT AS numeric_result_val,
 lrv.LAB_RESULT_TXT_VAL AS text_result_val,
 lrv.REF_RANGE_FRM,
 lrv.REF_RANGE_TO,
 lrv.TEST_RESULT_VAL_CD AS coded_result_val,
 lrv.TEST_RESULT_VAL_CD_DESC AS coded_result_val_desc,
 per1.PERSON_FIRST_NM AS patient_first_nm,
 per1.PERSON_MIDDLE_NM AS patient_middle_nm,
 per1.PERSON_LAST_NM AS patient_last_nm,
 per1.PERSON_NM_SUFFIX AS patient_nm_suffix,
 per2.PERSON_FIRST_NM AS provider_first_nm,
 per2.PERSON_MIDDLE_NM AS provider_middle_nm,
 per2.PERSON_LAST_NM AS provider_last_nm,
 per2.PERSON_NM_PREFIX AS provider_nm_prefix,
 per2.PERSON_NM_SUFFIX AS provider_nm_suffix,
 loc.STREET_ADDR_1,
 loc.STREET_ADDR_2,
 loc.CITY_FIPS AS city_cd,
 loc.CITY_SHORT_DESC AS city_desc,
 loc.STATE_FIPS AS state_cd,
 loc.STATE_SHORT_DESC AS state_desc,
 loc.ZIP_CD_5 AS zip_cd,
 loc.ZIP_SHORT_DESC AS zip_cd_desc
FROM
 LAB_TEST lt , LAB_TEST_RESULT ltr ,TEST_RESULT_GROUPING trg ,LAB_RESULT_VAL lrv ,CONDITION cond ,PERSON per1,
 PERSON_LOCATION perloc ,PERSON per2 ,LOCATION loc ,ORGANIZATION org1 , ORGANIZATION org2
where   lt.LAB_TEST_KEY = ltr.LAB_TEST_KEY
 AND ltr.PATIENT_KEY <> 1
 AND trg.TEST_RESULT_GRP_KEY = ltr.TEST_RESULT_GRP_KEY
 AND trg.TEST_RESULT_GRP_KEY = lrv.TEST_RESULT_GRP_KEY
 AND cond.CONDITION_KEY = ltr.CONDITION_KEY
 AND per1.PERSON_KEY = ltr.PATIENT_KEY
 AND per1.PERSON_KEY = perloc.PERSON_KEY
 AND per2.PERSON_KEY = ltr.ORDERING_PROVIDER_KEY
 AND loc.LOCATION_KEY = perloc.LOCATION_KEY
 AND org1.ORG_KEY = ltr.REPORTING_LAB_KEY
 AND org2.ORG_KEY = ltr.ORDERING_ORG_KEY
 ORDER BY lt.ROOT_ORDERED_TEST_PNTR, lt.PARENT_TEST_PNTR, lt.LAB_TEST_PNTR
 /
 
CREATE TABLE LAB100
        ( 
        LAB_RPT_LOCAL_ID                                VARCHAR2(50) NOT NULL,  
	 RESULTED_LAB_TEST_CD                            VARCHAR2(50), 
	 PROGRAM_JURISDICTION_OID                        NUMBER(20),
	 RECORD_STATUS_CD                                VARCHAR2(8), 
	 RESULTED_LAB_TEST_CD_DESC                       VARCHAR2(1000), 
	 RESULTEDTEST_CD_SYS_NM                          VARCHAR2(100),
	 RESULTEDTEST_VAL_CD                             VARCHAR2(20),  
	 RESULTEDTEST_VAL_CD_DESC                        VARCHAR2(1000),
	 NUMERIC_RESULT_WITHUNITS                        VARCHAR2(50),
	 LAB_RESULT_TXT_VAL                              VARCHAR2(2000),
	 LAB_RESULT_COMMENTS     			 VARCHAR2(2000),
	 RESULT_REF_RANGE_FRM                            VARCHAR2(20),
	 RESULT_REF_RANGE_TO                             VARCHAR2(20), 
	 ALT_LAB_TEST_CD                                 VARCHAR2(50), 
	 ALT_LAB_TEST_CD_DESC                            VARCHAR2(1000),  
	 ALT_LAB_TEST_CD_SYS_CD                          VARCHAR2(50),  
	 ALT_LAB_TEST_CD_SYS_NM                          VARCHAR2(100),
	 PATIENT_KEY                                     NUMBER(8), 
	 ACCESSION_NBR                                   VARCHAR2(100), 
	 JURISDICTION_CD                                 VARCHAR2(20),
	 JURISDICTION_NM                                 VARCHAR2(32), 
	 ORDERING_FACILITY                               VARCHAR2(100),
	 REPORTING_FACILITY                              VARCHAR2(100),
	 LAB_TEST_STATUS                                 VARCHAR2(50) ,
	 ELR_IND                                         VARCHAR2(1), 
	 ORDERED_LAB_TEST_CD                             VARCHAR2(50),
	 ORDERED_LAB_TEST_CD_DESC                        VARCHAR2(1000), 
	 ORDERED_LABTEST_CD_SYS_NM                       VARCHAR2(100), 
	 CONDITION_CD                                    VARCHAR2(72), 
	 CONDITION_SHORT_NM                              VARCHAR2(50),
	 PROGRAM_AREA_CD                                 VARCHAR2(20),
	 PROGRAM_AREA_DESC                               VARCHAR2(33),
	 SPECIMEN_COLLECTION_DT                          DATE,
	 SPECIMEN_SRC_DESC                               VARCHAR2(100),
	 SPECIMEN_SRC_CD                                 VARCHAR2(50),
	 LAB_TEST_DT                                     DATE,
	 LAB_RPT_CREATED_DT                              DATE,
	 LAB_RPT_LAST_UPDATE_DT                          DATE,
	 LAB_RPT_RECEIVED_BY_PH_DT                       DATE, 
	 LAB_RPT_STATUS                                  VARCHAR2(50), 
	 REASON_FOR_TEST_DESC                            VARCHAR2(1000),
	 PERSON_LOCAL_ID                                 VARCHAR2(50),
	 PERSON_FIRST_NM                                 VARCHAR2(50),
	 PERSON_MIDDLE_NM                                VARCHAR2(50),
	 PERSON_LAST_NM                                  VARCHAR2(50),
	 PERSON_DOB                                      DATE,
	 AGE_REPORTED                                    NUMBER(8),
	 PATIENT_REPORTED_AGE_UNITS                      VARCHAR2(20),
	 PERSON_CURR_GENDER                              VARCHAR2(1), 
	 PATIENT_ADDRESS                                 VARCHAR2(725),
	 ADDR_USE_CD_DESC                                VARCHAR2(1000),
	 ADDR_CD_DESC                                    VARCHAR2(1000),
	 PATIENT_CITY                                    VARCHAR2(50), 
	 PATIENT_COUNTY                                  VARCHAR2(50), 
	 PATIENT_STATE                                   VARCHAR2(50),
	 PATIENT_ZIP_CODE                                VARCHAR2(20), 
	 ADDRESS_DATE                                    DATE, 
	 ORDERING_PROVIDER_NM                            VARCHAR2(50),
	 PROVIDER_ADDRESS                                VARCHAR2(725), 
	 PRV_ADDR_USE_CD_DESC                            VARCHAR2(1000),
	 PRV_ADDR_CD_DESC                                VARCHAR2(1000),
	 PROVIDER_PHONE                                  VARCHAR2(50), 
	 LOCATION_KEY                   		 NUMBER(8),
	 MORB_RPT_KEY                   		 NUMBER(8),
	 LDF_GROUP_KEY               		         NUMBER(8),
	 RESULTED_LAB_TEST_KEY				NUMBER(8),
	 INVESTIGATION_KEYS           			 VARCHAR2(1000),
 	 EVENT_DATE                                      DATE
        );

CREATE TABLE LAB101( 
CASE_LAB_CONFIRMED_IND 				VARCHAR2(8),
EIP_ACTUAL_SHIP_DATE 				DATE,
EIP_EXPECTED_SHIP_DATE				DATE, 
EIP_ISO_IND 					VARCHAR2(8),
EIP_SHIP_LOCATION 				VARCHAR2(100),
EIP_SPEC_ACTUAL_RESHIP_DATE 			DATE,	
EIP_SPEC_AVAIL_IND 				VARCHAR2(50),
EIP_SPEC_EXPECTED_RESHIP_DATE 			DATE,
EIP_SPEC_NO_REASON 				VARCHAR2(100),
EIP_SPEC_NO_REASON_OTH				VARCHAR2(100), 
EIP_SPEC_RESHIP_IND 				VARCHAR2(8),
EIP_SPEC_RESHIP_REASON 				VARCHAR2(100),
EIP_SPEC_RESHIP_REASON_OTH 			VARCHAR2(100),
EVENT_DATE                    			DATE,                 
ISO_NO_RECEIVED_REASON 				VARCHAR2(100),		
ISO_NO_RECEIVED_REASON_OTH 			VARCHAR2(100),
ISO_RECEIVED_DATE 				DATE,
ISO_RECEIVED_IND 				VARCHAR2(8),
ISO_STATEID_NUM 				VARCHAR2(100),
LAB_RPT_LOCAL_ID 				VARCHAR2(50),  
NARMS_ACTUAL_SHIP_DATE 				DATE,
NARMS_EXPECTED_SHIP_DATE 			DATE,
NARMS_ISO_IND 					VARCHAR2(8),
NARMS_ISO_SENT_IND 				VARCHAR2(8),
NARMS_NO_SENT_REASON 				VARCHAR2(100),
NARMS_STATEID_NUM 				VARCHAR2(100),
PATIENT_STATUS					VARCHAR2(100),
PFGE_PULSENET_ENZYME1 				VARCHAR2(100),
PFGE_PULSENET_ENZYME2 				VARCHAR2(100),
PFGE_PULSENET_ENZYME3				VARCHAR2(100),
PFGE_PULSENET_SENT 				VARCHAR2(8),	
PFGE_STATELAB_ENZYME1 				VARCHAR2(100),
PFGE_STATELAB_ENZYME2 				VARCHAR2(100),
PFGE_STATELAB_ENZYME3				VARCHAR2(100),
PROGRAM_JURISDICTION_OID                     	NUMBER(20),
PULSENET_ISO_IND 				VARCHAR2(8),
RECORD_STATUS_CD 				VARCHAR2(8),
RESULTED_LAB_TEST_CD_DESC			VARCHAR2(100),
RESULTED_LAB_TEST_KEY				NUMBER(8),
SPECIMEN_COLLECTION_DT				DATE,
SPECIMEN_SRC_DESC				VARCHAR2(100),
SPECIMEN_SRC_CD					VARCHAR2(100),
TRACK_ISO_IND 					VARCHAR2(8),
ISO_SENT_CDC_IND				VARCHAR2(8)
);





  CREATE TABLE F_TB_PAM
  (
    PERSON_KEY                       NUMBER NOT NULL ,
    D_TB_PAM_KEY                     NUMBER NOT NULL ,
    PROVIDER_KEY                     NUMBER NOT NULL ,
    D_MOVE_STATE_GROUP_KEY           NUMBER NOT NULL ,
    D_HC_PROV_TY_3_GROUP_KEY           NUMBER NOT NULL ,
    D_DISEASE_SITE_GROUP_KEY           NUMBER NOT NULL ,
    D_ADDL_RISK_GROUP_KEY           NUMBER NOT NULL ,
    D_MOVE_CNTY_GROUP_KEY           NUMBER NOT NULL ,
    D_GT_12_REAS_GROUP_KEY           NUMBER NOT NULL ,
    D_MOVE_CNTRY_GROUP_KEY           NUMBER NOT NULL ,
    D_MOVED_WHERE_GROUP_KEY           NUMBER NOT NULL ,
    D_SMR_EXAM_TY_GROUP_KEY           NUMBER NOT NULL ,
    D_OUT_OF_CNTRY_GROUP_KEY 	      NUMBER NOT NULL ,
    CONSTRAINT F_TB_PAM_R01 
   FOREIGN KEY (PERSON_KEY) 
   REFERENCES PERSON (PERSON_KEY),
    CONSTRAINT F_TB_PAM_R02 
   FOREIGN KEY (D_TB_PAM_KEY) 
   REFERENCES D_TB_PAM (D_TB_PAM_KEY),
    CONSTRAINT F_TB_PAM_R04 
    FOREIGN KEY (D_MOVE_STATE_GROUP_KEY) 
    REFERENCES D_MOVE_STATE_GROUP (D_MOVE_STATE_GROUP_KEY),
    CONSTRAINT F_TB_PAM_R05 
     FOREIGN KEY (D_HC_PROV_TY_3_GROUP_KEY) 
   REFERENCES D_HC_PROV_TY_3_GROUP (D_HC_PROV_TY_3_GROUP_KEY),
   CONSTRAINT F_TB_PAM_R06
    FOREIGN KEY (D_DISEASE_SITE_GROUP_KEY) 
   REFERENCES D_DISEASE_SITE_GROUP (D_DISEASE_SITE_GROUP_KEY),
    CONSTRAINT F_TB_PAM_R07
    FOREIGN KEY (D_ADDL_RISK_GROUP_KEY) 
   REFERENCES D_ADDL_RISK_GROUP (D_ADDL_RISK_GROUP_KEY),
   CONSTRAINT F_TB_PAM_R08 
    FOREIGN KEY (D_MOVE_CNTY_GROUP_KEY) 
   REFERENCES D_MOVE_CNTY_GROUP (D_MOVE_CNTY_GROUP_KEY),
   CONSTRAINT F_TB_PAM_R09 
    FOREIGN KEY (D_GT_12_REAS_GROUP_KEY) 
   REFERENCES D_GT_12_REAS_GROUP (D_GT_12_REAS_GROUP_KEY),
   CONSTRAINT F_TB_PAM_R010 
    FOREIGN KEY (D_MOVE_CNTRY_GROUP_KEY) 
   REFERENCES D_MOVE_CNTRY_GROUP (D_MOVE_CNTRY_GROUP_KEY),
   CONSTRAINT F_TB_PAM_R011 
    FOREIGN KEY (D_MOVED_WHERE_GROUP_KEY) 
   REFERENCES D_MOVED_WHERE_GROUP (D_MOVED_WHERE_GROUP_KEY),
   CONSTRAINT F_TB_PAM_R012 
    FOREIGN KEY (D_SMR_EXAM_TY_GROUP_KEY) 
   REFERENCES D_SMR_EXAM_TY_GROUP (D_SMR_EXAM_TY_GROUP_KEY),
   CONSTRAINT F_TB_PAM_R013 
       FOREIGN KEY ( D_OUT_OF_CNTRY_GROUP_KEY) 
   REFERENCES  D_OUT_OF_CNTRY_GROUP (D_OUT_OF_CNTRY_GROUP_KEY)
);
CREATE TABLE F_VAR_PAM
(
  PERSON_KEY                       NUMBER NOT NULL ,
  D_VAR_PAM_KEY                    NUMBER NOT NULL ,
  PROVIDER_KEY                     NUMBER NOT NULL ,
  HOSPITAL_KEY                     NUMBER NOT NULL ,
  PERSON_AS_REPORTER_KEY  	   NUMBER NOT NULL,
  ORG_AS_REPORTER_KEY		   NUMBER NOT NULL,
  D_PCR_SOURCE_GROUP_KEY           NUMBER NOT NULL ,
  D_RASH_LOC_GEN_GROUP_KEY         NUMBER NOT NULL ,
  CONSTRAINT F_VAR_PAM_R01 
 FOREIGN KEY (PERSON_KEY) 
 REFERENCES PERSON (PERSON_KEY),
  CONSTRAINT F_VAR_PAM_R02 
 FOREIGN KEY (D_VAR_PAM_KEY) 
 REFERENCES D_VAR_PAM (D_VAR_PAM_KEY),
  CONSTRAINT F_VAR_PAM_R04 
   FOREIGN KEY (D_PCR_SOURCE_GROUP_KEY) 
 REFERENCES D_PCR_SOURCE_GROUP (D_PCR_SOURCE_GROUP_KEY),
 CONSTRAINT F_VAR_PAM_R05 
    FOREIGN KEY (HOSPITAL_KEY) 
 REFERENCES ORGANIZATION (ORG_KEY),
 CONSTRAINT F_VAR_PAM_R06 
    FOREIGN KEY (PERSON_AS_REPORTER_KEY) 
 REFERENCES PERSON (PERSON_KEY),
 CONSTRAINT F_VAR_PAM_R07 
    FOREIGN KEY (ORG_AS_REPORTER_KEY) 
 REFERENCES ORGANIZATION (ORG_KEY),
 CONSTRAINT F_VAR_PAM_R08 
  FOREIGN KEY (D_RASH_LOC_GEN_GROUP_KEY) 
 REFERENCES D_RASH_LOC_GEN_GROUP (D_RASH_LOC_GEN_GROUP_KEY)
);
commit; 

exit;



