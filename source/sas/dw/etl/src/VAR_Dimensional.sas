%macro VAR_DIM;
PROC SQL;
UPDATE ACTIVITY_LOG_DETAIL SET SOURCE_ROW_COUNT_NEW=(SELECT COUNT(*) FROM L_VAR_PAM_N),
SOURCE_ROW_COUNT_EXISTING=(SELECT COUNT(*) FROM L_VAR_PAM_E),
START_DATE=DATETIME();

CREATE TABLE D_VAR_PAM_N AS 
	SELECT * FROM S_VAR_PAM , L_VAR_PAM_N
where S_VAR_PAM.VAR_PAM_UID=L_VAR_PAM_N.VAR_PAM_UID;
CREATE TABLE D_VAR_PAM_E AS 
	SELECT * FROM S_VAR_PAM , L_VAR_PAM_E
where S_VAR_PAM.VAR_PAM_UID=L_VAR_PAM_E.VAR_PAM_UID;
QUIT;
proc sort data=D_VAR_PAM_N NODUPKEY; by D_VAR_PAM_KEY;run;
%DBLOAD (D_VAR_PAM, D_VAR_PAM_N);

data nbs_rdb.D_VAR_PAM;
 modify nbs_rdb.D_VAR_PAM D_VAR_PAM_E;
 by D_VAR_PAM_KEY;
run;
PROC SQL;
UPDATE ACTIVITY_LOG_DETAIL SET SOURCE_ROW_COUNT_NEW=(SELECT COUNT(*) FROM D_VAR_PAM_N),
DESTINATION_ROW_COUNT=(SELECT COUNT(*) from nbs_rdb.D_VAR_PAM where last_chg_time>(select start_date from ACTIVITY_LOG_MASTER_LAST)),
START_DATE=DATETIME(); 
quit;
data ACTIVITY_LOG_DETAIL;
set ACTIVITY_LOG_DETAIL;
SOURCE_ROW_COUNT= SUM(SOURCE_ROW_COUNT_NEW+ SOURCE_ROW_COUNT_EXISTING);
DESTINATION_ROW_COUNTs=put(DESTINATION_ROW_COUNT, 20.);
run;
PROC SQL;
UPDATE ACTIVITY_LOG_DETAIL SET
END_DATE=DATETIME(),
ACTIVITY_LOG_DETAIL_UID= ((select max(ACTIVITY_LOG_DETAIL_uid) from nbs_rdb.ACTIVITY_LOG_DETAIL)+1),
PROCESS_UID= (select process_uid from NBS_RDB.ETL_PROCESS where process_name='D_VAR_PAM');
quit;
data ACTIVITY_LOG_DETAIL;
set ACTIVITY_LOG_DETAIL;
DESTINATION_ROW_COUNTs=put(DESTINATION_ROW_COUNT, 20.);
ADMIN_COMMENT=COMPRESS(DESTINATION_ROW_COUNTs) || ' RECORD(S) INSERTED AND 0 RECORD(S) UPDATED IN D_VAR_PAM TABLE.'||
' THERE ARE NOW '|| COMPRESS(DESTINATION_ROW_COUNTs) || ' TOTAL NUMBER OF RECORD(S) IN THE D_VAR_PAM TABLE.';
run;

%DBLOAD (ACTIVITY_LOG_DETAIL, ACTIVITY_LOG_DETAIL);
PROC SQL;
CREATE TABLE D_RASH_LOC_GEN_GROUP AS
	SELECT distinct D_RASH_LOC_GEN_GROUP_KEY 
	FROM L_RASH_LOC_GEN; 

CREATE TABLE D_RASH_LOC_GEN AS 
   SELECT RASH_LOC_GEN_KEY,
    d_RASH_LOC_GEN_group_KEY,
	D_RASH_LOC_GEN_KEY,
	S_RASH_LOC_GEN.VALUE,
	SEQ_NBR,last_chg_time,
	L_RASH_LOC_GEN.VAR_PAM_UID
	   FROM   	L_RASH_LOC_GEN LEFT OUTER JOIN S_RASH_LOC_GEN
           ON 	S_RASH_LOC_GEN.VAR_PAM_UID=L_RASH_LOC_GEN.VAR_PAM_UID
			and S_RASH_LOC_GEN.NBS_Case_Answer_UID= L_RASH_LOC_GEN.NBS_Case_Answer_UID 
			;
QUIT;
proc sort data=D_RASH_LOC_GEN NODUPKEY; by RASH_LOC_GEN_KEY;run;
%DBLOAD (D_RASH_LOC_GEN_GROUP, D_RASH_LOC_GEN_GROUP);
%DBLOAD (D_RASH_LOC_GEN, D_RASH_LOC_GEN);
PROC SQL;
UPDATE ACTIVITY_LOG_DETAIL 
SET SOURCE_ROW_COUNT=(SELECT COUNT(*) FROM D_RASH_LOC_GEN where last_chg_time is not null),
ACTIVITY_LOG_DETAIL_UID= ((select max(ACTIVITY_LOG_DETAIL_uid) from nbs_rdb.ACTIVITY_LOG_DETAIL)+1),
PROCESS_UID= (select process_uid from NBS_RDB.ETL_PROCESS where process_name='D_RASH_LOC_GEN'),
DESTINATION_ROW_COUNT=(SELECT COUNT(*) from nbs_rdb.D_RASH_LOC_GEN where last_chg_time>(select start_date from ACTIVITY_LOG_MASTER_LAST));
 
quit;
data ACTIVITY_LOG_DETAIL;
set ACTIVITY_LOG_DETAIL;
DESTINATION_ROW_COUNTs=put(DESTINATION_ROW_COUNT, 20.);
ADMIN_COMMENT=COMPRESS(DESTINATION_ROW_COUNTs) || ' RECORD(S) INSERTED AND 0 RECORD(S) UPDATED IN D_RASH_LOC_GEN TABLE.'||
' THERE ARE NOW '|| COMPRESS(DESTINATION_ROW_COUNTs) || ' TOTAL NUMBER OF RECORD(S) IN THE D_RASH_LOC_GEN TABLE.';
run;
%DBLOAD (ACTIVITY_LOG_DETAIL, ACTIVITY_LOG_DETAIL);
PROC SQL;
CREATE TABLE D_PCR_SOURCE_GROUP AS
	SELECT distinct D_PCR_SOURCE_GROUP_KEY 
	FROM L_PCR_SOURCE; 

CREATE TABLE D_PCR_SOURCE AS 
   SELECT PCR_SOURCE_KEY,
    d_PCR_SOURCE_group_KEY,
	D_PCR_SOURCE_KEY,
	S_PCR_SOURCE.VALUE,
	SEQ_NBR,last_chg_time,
	L_PCR_SOURCE.VAR_PAM_UID
	   FROM   	L_PCR_SOURCE LEFT OUTER JOIN S_PCR_SOURCE
           ON 	S_PCR_SOURCE.VAR_PAM_UID=L_PCR_SOURCE.VAR_PAM_UID
			and S_PCR_SOURCE.NBS_Case_Answer_UID= L_PCR_SOURCE.NBS_Case_Answer_UID 
			;
QUIT;
proc sort data=D_PCR_SOURCE NODUPKEY; by PCR_SOURCE_KEY;run;
%DBLOAD (D_PCR_SOURCE_GROUP, D_PCR_SOURCE_GROUP);
%DBLOAD (D_PCR_SOURCE, D_PCR_SOURCE);
PROC SQL;
UPDATE ACTIVITY_LOG_DETAIL 
SET SOURCE_ROW_COUNT=(SELECT COUNT(*) FROM D_PCR_SOURCE where last_chg_time is not null),
ACTIVITY_LOG_DETAIL_UID= ((select max(ACTIVITY_LOG_DETAIL_uid) from nbs_rdb.ACTIVITY_LOG_DETAIL)+1),
PROCESS_UID= (select process_uid from NBS_RDB.ETL_PROCESS where process_name='D_PCR_SOURCE'),
DESTINATION_ROW_COUNT=(SELECT COUNT(*) from nbs_rdb.D_PCR_SOURCE where last_chg_time>(select start_date from ACTIVITY_LOG_MASTER_LAST));
quit;
data ACTIVITY_LOG_DETAIL;
set ACTIVITY_LOG_DETAIL;
DESTINATION_ROW_COUNTs=put(DESTINATION_ROW_COUNT, 20.);
ADMIN_COMMENT=COMPRESS(DESTINATION_ROW_COUNT) || ' RECORD(S) INSERTED AND 0 RECORD(S) UPDATED IN D_PCR_SOURCE TABLE.'||
' THERE ARE NOW '|| COMPRESS(DESTINATION_ROW_COUNT) || ' TOTAL NUMBER OF RECORD(S) IN THE D_PCR_SOURCE TABLE.';
run;
%DBLOAD (ACTIVITY_LOG_DETAIL, ACTIVITY_LOG_DETAIL);
%mend VAR_DIM;
PROC SQL;
CREATE TABLE VAR_PORT_IND 
AS
select PORT_REQ_IND_CD from nbs_srt.condition_code where condition_cd ='10030';
QUIT;
DATA _null_;
  set VAR_PORT_IND;
  if PORT_REQ_IND_CD='T' then call execute('%VAR_DIM');
RUN;
