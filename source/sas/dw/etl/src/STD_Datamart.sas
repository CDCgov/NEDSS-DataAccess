%macro STD_ALL_HIV;
PROC SQL;
	CREATE TABLE INV_HIV AS SELECT
		HIV_STATE_CASE_ID,
		HIV_LAST_900_TEST_DT,
		HIV_900_TEST_REFERRAL_DT,
		HIV_CA_900_OTH_RSN_NOT_LO,
		HIV_ENROLL_PRTNR_SRVCS_IND,
		HIV_PREVIOUS_900_TEST_IND,
		HIV_SELF_REPORTED_RSLT_900, 
		HIV_REFER_FOR_900_TEST,
		HIV_900_TEST_IND ,
		HIV_900_RESULT ,
		HIV_RST_PROVIDED_900_RSLT_IND ,
		HIV_POST_TEST_900_COUNSELING ,
		HIV_REFER_FOR_900_CARE_IND ,
		HIV_KEEP_900_CARE_APPT_IND ,
		HIV_AV_THERAPY_LAST_12MO_IND ,
		HIV_AV_THERAPY_EVER_IND,
		HIV_CA_900_REASON_NOT_LOC,
		F_STD_PAGE_CASE.INVESTIGATION_KEY
FROM 
	NBS_RDB.F_STD_PAGE_CASE
INNER JOIN NBS_RDB.INVESTIGATION
	ON F_STD_PAGE_CASE.INVESTIGATION_KEY =INVESTIGATION.INVESTIGATION_KEY
LEFT OUTER JOIN
	NBS_RDB.D_INV_HIV
ON 
	D_INV_HIV.D_INV_HIV_KEY= F_STD_PAGE_CASE.D_INV_HIV_KEY
	WHERE INVESTIGATION.RECORD_STATUS_CD='ACTIVE'
	ORDER BY F_STD_PAGE_CASE.INVESTIGATION_KEY;
QUIT;
PROC SQL;
   CREATE INDEX INVESTIGATION_KEY on INV_HIV(INVESTIGATION_KEY);
QUIT;

%mend;
 %macro STD_NO_HIV;
proc sql;
create table INV_HIV
	(
	HIV_STATE_CASE_ID char(2000),
	HIV_LAST_900_TEST_DT DATE,
	HIV_900_TEST_REFERRAL_DT DATE,
	HIV_CA_900_OTH_RSN_NOT_LO char(4000),
	HIV_ENROLL_PRTNR_SRVCS_IND char(4000),
	HIV_PREVIOUS_900_TEST_IND char(4000),
	HIV_SELF_REPORTED_RSLT_900 char(4000),
	HIV_REFER_FOR_900_TEST char(4000),
	HIV_900_TEST_IND char(4000),
	HIV_900_RESULT char(4000),
	HIV_RST_PROVIDED_900_RSLT_IND char(4000),
	HIV_POST_TEST_900_COUNSELING char(4000),
	HIV_REFER_FOR_900_CARE_IND char(4000),
	HIV_KEEP_900_CARE_APPT_IND char(4000),
	HIV_AV_THERAPY_LAST_12MO_IND char(4000),
	HIV_AV_THERAPY_EVER_IND char(4000),
	HIV_CA_900_REASON_NOT_LOC char(4000),
	INVESTIGATION_KEY NUM 8);

insert into D_INV_HIV (INVESTIGATION_KEY) values (1);
RUN;
PROC SQL;
   CREATE INDEX INVESTIGATION_KEY on INV_HIV(INVESTIGATION_KEY);
QUIT;

%mend;
 %macro STD_PARTIAL_HIV;
PROC SQL;
	CREATE TABLE INV_HIV AS SELECT
		HIV_STATE_CASE_ID,
		HIV_LAST_900_TEST_DT,
		HIV_900_TEST_REFERRAL_DT,
	 	HIV_ENROLL_PRTNR_SRVCS_IND,
		HIV_PREVIOUS_900_TEST_IND,
		HIV_SELF_REPORTED_RSLT_900, 
		HIV_REFER_FOR_900_TEST,
		HIV_900_TEST_IND ,
		HIV_900_RESULT ,
		HIV_RST_PROVIDED_900_RSLT_IND ,
		HIV_POST_TEST_900_COUNSELING ,
		HIV_REFER_FOR_900_CARE_IND ,
		HIV_KEEP_900_CARE_APPT_IND ,
		HIV_AV_THERAPY_LAST_12MO_IND ,
		HIV_AV_THERAPY_EVER_IND,
		F_STD_PAGE_CASE.INVESTIGATION_KEY
FROM 
	NBS_RDB.F_STD_PAGE_CASE
LEFT OUTER JOIN
	NBS_RDB.D_INV_HIV
ON 
	D_INV_HIV.D_INV_HIV_KEY= F_STD_PAGE_CASE.D_INV_HIV_KEY
	ORDER BY F_STD_PAGE_CASE.INVESTIGATION_KEY;
QUIT;
PROC SQL;
ALTER TABLE INV_HIV ADD HIV_CA_900_OTH_RSN_NOT_LO  char(4000);
ALTER TABLE INV_HIV ADD HIV_CA_900_REASON_NOT_LOC  char(4000);
QUIT;

PROC SQL;
   CREATE INDEX INVESTIGATION_KEY on INV_HIV(INVESTIGATION_KEY);
QUIT;

%mend;

%macro STD_DATAMART;
PROC SQL;
	DROP TABLE NBS_RDB.STD_HIV_DATAMART;
QUIT;
options fmtsearch=(nbsfmt);
PROC SQL;
	CREATE TABLE CONDITION AS SELECT A.INVESTIGATION_KEY, 
		A.CONDITION_KEY,
		B.PROGRAM_AREA_CD,  
		B.CONDITION_CD FROM NBS_RDB.F_STD_PAGE_CASE A
	INNER JOIN NBS_RDB.CONDITION B ON
		F_STD_PAGE_CASE.CONDITION_KEY= CONDITION.CONDITION_KEY
	 INNER JOIN NBS_RDB.INVESTIGATION
	ON F_STD_PAGE_CASE.INVESTIGATION_KEY =INVESTIGATION.INVESTIGATION_KEY
		where investigation.record_status_cd='ACTIVE'
	ORDER BY F_STD_PAGE_CASE.INVESTIGATION_KEY;
QUIT;
PROC SQL;
   CREATE INDEX INVESTIGATION_KEY on CONDITION(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE STD_HIV_CASE AS SELECT 
		D_INV_TREATMENT_KEY, D_INV_SOCIAL_HISTORY_KEY,
		D_INV_RISK_FACTOR_KEY,D_INV_PREGNANCY_BIRTH_KEY,
		D_INV_PATIENT_OBS_KEY,D_INV_MEDICAL_HISTORY_KEY,
		D_INV_LAB_FINDING_KEY,D_INV_HIV_KEY,
		D_INV_EPIDEMIOLOGY_KEY,D_INV_CONTACT_KEY,
		D_INV_COMPLICATION_KEY,D_INV_CLINICAL_KEY,
		D_INV_ADMINISTRATIVE_KEY,F_STD_PAGE_CASE.INVESTIGATION_KEY,
		D_INV_SYMPTOM_KEY,
		PATIENT_KEY, INTERVIEWER_ASSIGNED_KEY, F_STD_PAGE_CASE.INVESTIGATOR_KEY
	FROM NBS_RDB.F_STD_PAGE_CASE INNER JOIN NBS_RDB.INVESTIGATION
	ON F_STD_PAGE_CASE.INVESTIGATION_KEY =INVESTIGATION.INVESTIGATION_KEY
		where investigation.record_status_cd='ACTIVE'
		ORDER BY F_STD_PAGE_CASE.INVESTIGATION_KEY;
QUIT;
PROC SQL;
   CREATE INDEX INVESTIGATION_KEY on STD_HIV_CASE(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE D_INVESTIGATIONINIT AS SELECT 
		STD_HIV_CASE.INVESTIGATION_KEY,
		INV_LOCAL_ID,
		INVESTIGATION.CASE_OID AS PROGRAM_JURISDICTION_OID 'PROGRAM_JURISDICTION_OID',
		/*INV_CLOSE_DT, TODO*/
	DETECTION_METHOD_DESC_TXT,
	INV_ASSIGNED_DT,
	JURISDICTION_CD,
	JURISDICTION_NM,
	PATIENT_PREGNANT_IND,
	RPT_SRC_CD_DESC,
	
	CASE_RPT_MMWR_WK AS CASE_RPT_MMWR_WK 'CASE_RPT_MMWR_WK',
	CASE_RPT_MMWR_YR AS CASE_RPT_MMWR_YR 'CASE_RPT_MMWR_YR',
	COINFECTION_ID AS COINFECTION_ID 'COINFECTION_ID',
	CURR_PROCESS_STATE AS CURR_PROCESS_STATE 'CURR_PROCESS_STATE',
	DIE_FRM_THIS_ILLNESS_IND AS DIE_FRM_THIS_ILLNESS_IND 'DIE_FRM_THIS_ILLNESS_IND',
	DISEASE_IMPORTED_IND AS DISEASE_IMPORTED_IND 'DISEASE_IMPORTED_IND',
	HSPTLIZD_IND AS HSPTLIZD_IND 'HSPTLIZD_IND',
	INV_ASSIGNED_DT AS INV_ASSIGNED_DT 'INV_ASSIGNED_DT',
	INV_CASE_STATUS AS INV_CASE_STATUS 'INV_CASE_STATUS',
	INV_CLOSE_DT AS INV_CLOSE_DT 'INV_CLOSE_DT',
	INV_RPT_DT AS INV_RPT_DT 'INV_RPT_DT',
	INV_START_DT AS INV_START_DT 'INV_START_DT',
	INVESTIGATION_DEATH_DATE AS INVESTIGATION_DEATH_DATE 'INVESTIGATION_DEATH_DATE',
	INVESTIGATION_STATUS AS INVESTIGATION_STATUS 'INVESTIGATION_STATUS',
	OUTBREAK_IND AS OUTBREAK_IND 'OUTBREAK_IND',
	OUTBREAK_NAME AS OUTBREAK_NAME 'OUTBREAK_NAME',
	PATIENT_AGE_AT_ONSET AS PATIENT_AGE_AT_ONSET 'PATIENT_AGE_AT_ONSET',
	PATIENT_AGE_AT_ONSET_UNIT AS PATIENT_AGE_AT_ONSET_UNIT 'PATIENT_AGE_AT_ONSET_UNIT',
	REFERRAL_BASIS AS REFERRAL_BASIS 'REFERRAL_BASIS'
	
	FROM
		STD_HIV_CASE INNER JOIN NBS_RDB.INVESTIGATION
		ON STD_HIV_CASE.INVESTIGATION_KEY =INVESTIGATION.INVESTIGATION_KEY
		ORDER BY INVESTIGATION.INVESTIGATION_KEY;
QUIT;
PROC SQL;
	CREATE TABLE CONFIRMATION_DATE AS SELECT 
		DISTINCT STD_HIV_CASE.INVESTIGATION_KEY,
		CONFIRMATION_DT
	FROM
		STD_HIV_CASE INNER JOIN NBS_RDB.CONFIRMATION_METHOD_GROUP
		ON STD_HIV_CASE.INVESTIGATION_KEY =CONFIRMATION_METHOD_GROUP.INVESTIGATION_KEY
		ORDER BY CONFIRMATION_METHOD_GROUP.INVESTIGATION_KEY;
QUIT;
PROC SQL;
CREATE TABLE D_INVESTIGATION AS SELECT 
	DISTINCT D_INVESTIGATIONINIT.*,CONFIRMATION_DATE.CONFIRMATION_DT
	FROM 
	D_INVESTIGATIONINIT LEFT OUTER JOIN CONFIRMATION_DATE
	ON CONFIRMATION_DATE.INVESTIGATION_KEY =D_INVESTIGATIONINIT.INVESTIGATION_KEY;
 QUIT;

PROC SQL;
	CREATE INDEX INVESTIGATION_KEY on D_INVESTIGATION(INVESTIGATION_KEY);
QUIT;


 PROC DATASETS LIBRARY = WORK NOLIST;DELETE D_INVESTIGATIONINIT CONFIRMATION_DATE;RUN; QUIT;
PROC SQL;
	CREATE TABLE CASE_MANAGEMENT AS SELECT
		OOJ_INITG_AGNCY_RECD_DATE AS OOJ_INITG_AGNCY_RECD_DATE 'OOJ_INITG_AGNCY_RECD_DATE', 
		OOJ_INITG_AGNCY_OUTC_DUE_DATE AS OOJ_INITG_AGNCY_OUTC_DUE_DATE 'OOJ_INITG_AGNCY_OUTC_DUE_DATE', 
		OOJ_INITG_AGNCY_OUTC_SNT_DATE AS OOJ_INITG_AGNCY_OUTC_SNT_DATE 'OOJ_INITG_AGNCY_OUTC_SNT_DATE', 
		FL_FUP_FIELD_RECORD_NUM AS FIELD_RECORD_NUMBER 'FIELD_RECORD_NUMBER', 
		EPI_LINK_ID AS EPI_LINK_ID 'EPI_LINK_ID', 
		INIT_FUP_CLOSED_DT AS INIT_FUP_CLOSED_DT 'INIT_FUP_CLOSED_DT', 
		INIT_FUP_CLINIC_CODE AS INIT_FUP_CLINIC_CODE 'INIT_FUP_CLINIC_CODE', 
		SURV_INVESTIGATOR_ASSGN_DT AS SURV_INVESTIGATOR_ASSGN_DT 'SURV_INVESTIGATOR_ASSGN_DT', 
		SURV_CLOSED_DT AS SURV_CLOSED_DT 'SURV_CLOSED_DT', 
		FL_FUP_INVESTIGATOR_ASSGN_DT AS FL_FUP_INVESTIGATOR_ASSGN_DT 'FL_FUP_INVESTIGATOR_ASSGN_DT', 
		FL_FUP_INIT_ASSGN_DT AS FL_FUP_INIT_ASSGN_DT 'FL_FUP_INIT_ASSGN_DT', 
		FL_FUP_EXPECTED_DT AS FL_FUP_EXPECTED_DT 'FL_FUP_EXPECTED_DT', 
		FL_FUP_EXAM_DT AS FL_FUP_EXAM_DT 'FL_FUP_EXAM_DT', 
		FL_FUP_DISPO_DT AS FL_FUP_DISPO_DT 'FL_FUP_DISPO_DT', 
		OOJ_NUMBER AS OOJ_FR_NUMBER_SENT_TO 'OOJ_FR_NUMBER_SENT_TO', 
		OOJ_DUE_DATE AS OOJ_DUE_DATE_SENT_TO 'OOJ_DUE_DATE_SENT_TO', 
		CA_INTERVIEWER_ASSIGN_DT AS CA_INTERVIEWER_ASSIGN_DT 'CA_INTERVIEWER_ASSIGN_DT', 
		CA_INIT_INTVWR_ASSGN_DT AS CA_INIT_INTVWR_ASSGN_DT 'CA_INIT_INTVWR_ASSGN_DT', 
		CC_CLOSED_DT AS CC_CLOSED_DT 'CC_CLOSED_DT',   
		INITIATING_AGNCY AS INITIATING_AGNCY 'INITIATING_AGNCY', 
		INIT_FUP_INITIAL_FOLL_UP AS INIT_FUP_INITIAL_FOLL_UP 'INIT_FUP_INITIAL_FOLL_UP', 
		INIT_FUP_INITIAL_FOLL_UP_CD AS INIT_FUP_INITIAL_FOLL_UP_CD 'INIT_FUP_INITIAL_FOLL_UP_CD', 
		SURV_PROVIDER_CONTACT_CD AS SURV_PROVIDER_CONTACT 'SURV_PROVIDER_CONTACT', 
		SURV_PROVIDER_EXAM_REASON AS SURV_PROVIDER_EXAM_REASON 'SURV_PROVIDER_EXAM_REASON', 
		SURV_PATIENT_FOLL_UP_CD AS SURV_PATIENT_FOLL_UP 'SURV_PATIENT_FOLL_UP', 
		INIT_FUP_NOTIFIABLE_CD AS INIT_FUP_NOTIFIABLE 'INIT_FUP_NOTIFIABLE', 
		FL_FUP_NOTIFICATION_PLAN_CD AS FL_FUP_NOTIFICATION_PLAN 'FL_FUP_NOTIFICATION_PLAN', 
		FL_FUP_ACTUAL_REF_TYPE AS FL_FUP_ACTUAL_REF_TYPE 'FL_FUP_ACTUAL_REF_TYPE', 
		FL_FUP_PROV_EXM_REASON AS FL_FUP_PROV_EXM_REASON 'FL_FUP_PROV_EXM_REASON', 
		FL_FUP_PROV_DIAGNOSIS AS FL_FUP_PROV_DIAGNOSIS_CD 'FL_FUP_PROV_DIAGNOSIS_CD', 
		FL_FUP_PROV_DIAGNOSIS , 
		FL_FUP_EXPECTED_IN_IND AS FL_FUP_EXPECTED_IN_IND_CD 'FL_FUP_EXPECTED_IN_IND_CD', 
		FL_FUP_DISPOSITION_DESC AS FL_FUP_DISPOSITION 'FL_FUP_DISPOSITION', 
		FL_FUP_INTERNET_OUTCOME_CD AS FL_FUP_INTERNET_OUTCOME_CD 'FL_FUP_INTERNET_OUTCOME_CD', 
		INIT_FUP_INTERNET_FOLL_UP_CD AS INIT_FUP_INTERNET_FOLL_UP_CD 'INIT_FUP_INTERNET_FOLL_UP_CD',
		INIT_FUP_INTERNET_FOLL_UP_CD AS INIT_FUP_INTERNET_FOLL_UP 'INIT_FUP_INTERNET_FOLL_UP',
		OOJ_AGENCY AS OOJ_AGENCY_SENT_TO 'OOJ_AGENCY_SENT_TO', 
		FL_FUP_OOJ_OUTCOME AS FL_FUP_OOJ_OUTCOME 'FL_FUP_OOJ_OUTCOME', 
		CA_PATIENT_INTV_STATUS AS CA_PATIENT_INTV_STATUS 'CA_PATIENT_INTV_STATUS', 
		ADI_900_STATUS_CD AS ADI_900_STATUS_CD 'ADI_900_STATUS_CD', 
		STATUS_900 AS ADI_900_STATUS 'ADI_900_STATUS',
		SURV_PROVIDER_DIAGNOSIS AS CLN_SURV_PROVIDER_DIAG_CD 'CLN_SURV_PROVIDER_DIAG_CD',
		STD_HIV_CASE.INVESTIGATION_KEY

		FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_CASE_MANAGEMENT  
		ON STD_HIV_CASE.INVESTIGATION_KEY = D_CASE_MANAGEMENT.INVESTIGATION_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;
DATA CASE_MANAGEMENT;
set CASE_MANAGEMENT;
	FL_FUP_PROV_DIAGNOSIS_CD= PUT(FL_FUP_PROV_DIAGNOSIS, $R_NBS166F.);
DROP FL_FUP_PROV_DIAGNOSIS;
RUN;

PROC SQL;
	CREATE INDEX INVESTIGATION_KEY on CASE_MANAGEMENT(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE INIT_INTERVIEW_CASE AS SELECT
		IX_DATE AS IX_DATE_OI 'IX_DATE_OI',
		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.F_INTERVIEW_CASE
		ON STD_HIV_CASE.INVESTIGATION_KEY =F_INTERVIEW_CASE.INVESTIGATION_KEY
		LEFT OUTER JOIN NBS_RDB.D_INTERVIEW
		ON D_INTERVIEW.D_INTERVIEW_KEY = F_INTERVIEW_CASE.D_INTERVIEW_KEY
		WHERE IX_TYPE_CD = 'INITIAL'
		AND D_INTERVIEW.RECORD_STATUS_CD = 'ACTIVE'
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;
PROC SQL;
	CREATE INDEX INVESTIGATION_KEY on INIT_INTERVIEW_CASE(INVESTIGATION_KEY);
QUIT;
PROC SQL;
	CREATE TABLE INV_TREATMENT AS SELECT
		TRT_TREATMENT_DATE,
		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_INV_TREATMENT  
		ON STD_HIV_CASE.D_INV_TREATMENT_KEY = D_INV_TREATMENT.D_INV_TREATMENT_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;
PROC SQL;
	CREATE INDEX INVESTIGATION_KEY on INV_TREATMENT(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE INV_ADMINISTRATIVE AS SELECT
		ADM_REFERRAL_BASIS_OOJ, 
	ADM_RPTNG_CNTY AS ADM_RPTNG_CNTY, 'ADM_RPTNG_CNTY',
	ADM_DISSEMINATED_IND AS DISSEMINATED_IND, 'DISSEMINATED_IND' ,
	STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_INV_ADMINISTRATIVE  
		ON STD_HIV_CASE.D_INV_ADMINISTRATIVE_KEY = D_INV_ADMINISTRATIVE.D_INV_ADMINISTRATIVE_KEY
		ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;

DATA INV_ADMINISTRATIVE;
	SET INV_ADMINISTRATIVE;
	DROP _TEMA001 _TEMA002  
	;
RUN;
PROC SQL;
	CREATE INDEX INVESTIGATION_KEY on INV_ADMINISTRATIVE(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE CLINICAL AS SELECT
		CLN_DT_INIT_HLTH_EXM AS CLN_DT_INIT_HLTH_EXM, 'CLN_DT_INIT_HLTH_EXM',
		CLN_NEUROSYPHILLIS_IND AS CLN_NEUROSYPHILLIS_IND, 'CLN_NEUROSYPHILLIS_IND',
		CLN_CASE_DIAGNOSIS AS DIAGNOSIS, 'DIAGNOSIS',
		CLN_NEUROSYPHILLIS_IND AS CLN_NEUROSYPHILLIS_IND_CD, 'CLN_NEUROSYPHILLIS_IND_CD',
		CLN_CONDITION_RESISTANT_TO AS CLN_CONDITION_RESISTANT_TO, 'CLN_CONDITION_RESISTANT_TO',
		CLN_CARE_STATUS_CLOSE_DT AS CLN_CARE_STATUS_CLOSE_DT, 'CLN_CARE_STATUS_CLOSE_DT',
		CLN_PRE_EXP_PROPHY_IND AS CLN_PRE_EXP_PROPHY_IND, 'CLN_PRE_EXP_PROPHY_IND',
		CLN_PRE_EXP_PROPHY_REFER AS CLN_PRE_EXP_PROPHY_REFER, 'CLN_PRE_EXP_PROPHY_REFER',

		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_INV_CLINICAL  
		ON STD_HIV_CASE.D_INV_CLINICAL_KEY = D_INV_CLINICAL.D_INV_CLINICAL_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;

DATA CLINICAL;
	SET CLINICAL;
	DIAGNOSIS_CD= PUT(DIAGNOSIS, $R_NBS136F.);
	DROP _TEMA001 _TEMA002 _TEMA003 _TEMA004 _TEMA005 _TEMA006 _TEMA007 _TEMA008  
	;
RUN; 
PROC SQL;
	CREATE INDEX INVESTIGATION_KEY on CLINICAL(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE COMPLICATION AS SELECT
		CMP_PID_IND AS CMP_PID_IND, 'CMP_PID_IND',
		CMP_CONJUNCTIVITIS_IND AS CMP_CONJUNCTIVITIS_IND, 'CMP_CONJUNCTIVITIS_IND' ,
		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_INV_COMPLICATION  
		ON STD_HIV_CASE.D_INV_COMPLICATION_KEY = D_INV_COMPLICATION.D_INV_COMPLICATION_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;

DATA COMPLICATION;
	SET COMPLICATION;
	DROP _TEMA001  _TEMA002
	;
RUN;
PROC SQL;
	CREATE INDEX INVESTIGATION_KEY on COMPLICATION(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE INV_CONTACT AS SELECT
		CTT_RPT_FIRST_SEX_EXP_DT AS RPT_FIRST_SEX_EXP_DT, 'RPT_FIRST_SEX_EXP_DT',
		CTT_RPT_SEX_EXP_FREQ AS RPT_SEX_EXP_FREQ, 'RPT_SEX_EXP_FREQ',
		CTT_RPT_LAST_SEX_EXP_DT AS RPT_LAST_SEX_EXP_DT, 'RPT_LAST_SEX_EXP_DT',
		CTT_RPT_FIRST_NDLSHARE_EXP_DT AS RPT_FIRST_NDLSHARE_EXP_DT, 'RPT_FIRST_NDLSHARE_EXP_DT',
		CTT_RPT_NDLSHARE_EXP_FREQ AS RPT_NDLSHARE_EXP_FREQ, 'RPT_NDLSHARE_EXP_FREQ',
		CTT_RPT_LAST_NDLSHARE_EXP_DT AS RPT_LAST_NDLSHARE_EXP_DT, 'RPT_LAST_NDLSHARE_EXP_DT',
		CTT_RPT_RELATIONSHIP_TO_OP AS RPT_RELATIONSHIP_TO_OP, 'RPT_RELATIONSHIP_TO_OP',
		CTT_RPT_SPOUSE_OF_OP AS RPT_SPOUSE_OF_OP, 'RPT_SPOUSE_OF_OP',
		CTT_RPT_MET_OP_INTERNET AS RPT_MET_OP_INTERNET, 'RPT_MET_OP_INTERNET',
		CTT_RPT_ELICIT_INTERNET_INFO AS RPT_ELICIT_INTERNET_INFO, 'RPT_ELICIT_INTERNET_INFO',
		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_INV_CONTACT  
		ON STD_HIV_CASE.D_INV_CONTACT_KEY = D_INV_CONTACT.D_INV_CONTACT_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;

DATA INV_CONTACT;
	SET INV_CONTACT;
	DROP _TEMA001 _TEMA002 _TEMA003 _TEMA004 _TEMA005 _TEMA006 _TEMA007 _TEMA008 _TEMA009 _TEMA010  
	;
RUN;
PROC SQL;
	CREATE INDEX INVESTIGATION_KEY on INV_CONTACT(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE EPIDEMIOLOGY AS SELECT
		SOURCE_SPREAD AS SOURCE_SPREAD, 'SOURCE_SPREAD',
		EPI_CNTRY_USUAL_RESID AS EPI_CNTRY_USUAL_RESID, 'EPI_CNTRY_USUAL_RESID',
		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_INV_EPIDEMIOLOGY  
		ON STD_HIV_CASE.D_INV_EPIDEMIOLOGY_KEY = D_INV_EPIDEMIOLOGY.D_INV_EPIDEMIOLOGY_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;

DATA EPIDEMIOLOGY;
	SET EPIDEMIOLOGY;
	DROP _TEMA001 _TEMA002 
	;
RUN;

PROC SQL;
	CREATE INDEX INVESTIGATION_KEY on EPIDEMIOLOGY(INVESTIGATION_KEY);
QUIT;
PROC SQL;
	CREATE TABLE LAB_FINDING AS SELECT
		LAB_TESTS_PERFORMED AS LAB_TESTS_PERFORMED, 'LAB_TESTS_PERFORMED',
		LAB_NONTREP_SYPH_TEST_TYP AS LAB_NONTREP_SYPH_TEST_TYP, 'LAB_NONTREP_SYPH_TEST_TYP',
		LAB_NONTREP_SYPH_RSLT_QNT AS LAB_NONTREP_SYPH_RSLT_QNT, 'LAB_NONTREP_SYPH_RSLT_QNT',
		LAB_NONTREP_SYPH_RSLT_QUA AS LAB_NONTREP_SYPH_RSLT_QUA, 'LAB_NONTREP_SYPH_RSLT_QUA',
		LAB_TREP_SYPH_TEST_TYPE AS LAB_TREP_SYPH_TEST_TYPE, 'LAB_TREP_SYPH_TEST_TYPE',
		LAB_TREP_SYPH_RESULT_QUAL AS LAB_TREP_SYPH_RESULT_QUAL, 'LAB_TREP_SYPH_RESULT_QUAL',
		LAB_HIV_SPECIMEN_COLL_DT AS LAB_HIV_SPECIMEN_COLL_DT, 'LAB_HIV_SPECIMEN_COLL_DT',
		LAB_SYPHILIS_TST_PS_IND AS LAB_SYPHILIS_TST_PS_IND, 'LAB_SYPHILIS_TST_PS_IND',
		LAB_SYPHILIS_TST_RSLT_PS AS LAB_SYPHILIS_TST_RSLT_PS, 'LAB_SYPHILIS_TST_RSLT_PS',
		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_INV_LAB_FINDING  
		ON STD_HIV_CASE.D_INV_LAB_FINDING_KEY = D_INV_LAB_FINDING.D_INV_LAB_FINDING_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;

DATA LAB_FINDING;
	SET LAB_FINDING;
	DROP _TEMA001 _TEMA002 _TEMA003 _TEMA004 _TEMA005 _TEMA006 
	;
RUN;

PROC SQL;
	CREATE INDEX INVESTIGATION_KEY on LAB_FINDING(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE MEDICAL_HISTORY AS SELECT
		MDH_PREV_STD_HIST AS MDH_PREV_STD_HIST, 'MDH_PREV_STD_HIST',
		MDH_PROVIDER_REASON_VISIT_DT AS PROVIDER_REASON_VISIT_DT, 'PROVIDER_REASON_VISIT_DT',
		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_INV_MEDICAL_HISTORY  
		ON STD_HIV_CASE.D_INV_MEDICAL_HISTORY_KEY = D_INV_MEDICAL_HISTORY.D_INV_MEDICAL_HISTORY_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;

DATA MEDICAL_HISTORY;
	SET MEDICAL_HISTORY;
	DROP _TEMA001
	;
RUN;
PROC SQL;
	CREATE INDEX INVESTIGATION_KEY on MEDICAL_HISTORY(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE PATIENT_OBS AS SELECT 
		IPO_LIVING_WITH AS IPO_LIVING_WITH, 'IPO_LIVING_WITH',
		IPO_TIME_AT_ADDRESS_NUM AS IPO_TIME_AT_ADDRESS_NUM, 'IPO_TIME_AT_ADDRESS_NUM',
		IPO_TIME_IN_STATE_NUM AS IPO_TIME_IN_STATE_NUM, 'IPO_TIME_IN_STATE_NUM',
		IPO_TIME_IN_COUNTRY_NUM AS IPO_TIME_IN_COUNTRY_NUM, 'IPO_TIME_IN_COUNTRY_NUM',
		IPO_NAME_OF_INSTITUTITION AS IPO_NAME_OF_INSTITUTITION, 'IPO_NAME_OF_INSTITUTITION',
		IPO_TYPE_OF_RESIDENCE AS IPO_TYPE_OF_RESIDENCE, 'IPO_TYPE_OF_RESIDENCE',
		IPO_TIME_AT_ADDRESS_UNIT AS IPO_TIME_AT_ADDRESS_UNIT, 'IPO_TIME_AT_ADDRESS_UNIT',
		IPO_TIME_IN_STATE_UNIT AS IPO_TIME_IN_STATE_UNIT, 'IPO_TIME_IN_STATE_UNIT',
		IPO_TIME_IN_COUNTRY_UNIT AS IPO_TIME_IN_COUNTRY_UNIT, 'IPO_TIME_IN_COUNTRY_UNIT',
		IPO_CURRENTLY_IN_INSTITUTION AS IPO_CURRENTLY_IN_INSTITUTION, 'IPO_CURRENTLY_IN_INSTITUTION',
		IPO_TYPE_OF_INSTITUTITION AS IPO_TYPE_OF_INSTITUTITION, 'IPO_TYPE_OF_INSTITUTITION',
		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_INV_PATIENT_OBS  
		ON STD_HIV_CASE.D_INV_PATIENT_OBS_KEY = D_INV_PATIENT_OBS.D_INV_PATIENT_OBS_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;

DATA PATIENT_OBS;
	SET PATIENT_OBS;
	DROP _TEMA001 _TEMA002 _TEMA003 _TEMA004 _TEMA005 _TEMA006 _TEMA007 _TEMA008 _TEMA009 _TEMA010 _TEMA011 
	;
RUN;
PROC SQL;
	CREATE INDEX INVESTIGATION_KEY on PATIENT_OBS(INVESTIGATION_KEY);
QUIT;
PROC SQL;
	CREATE TABLE PREGNANCY_BIRTH AS SELECT
		PBI_PATIENT_PREGNANT_WKS AS PBI_PATIENT_PREGNANT_WKS, 'PBI_PATIENT_PREGNANT_WKS',
		PBI_PREG_AT_EXAM_WKS AS PBI_PREG_AT_EXAM_WKS, 'PBI_PREG_AT_EXAM_WKS',
		PBI_PREG_AT_IX_WKS AS PBI_PREG_AT_IX_WKS, 'PBI_PREG_AT_IX_WKS',
		PBI_PREG_AT_EXAM_IND AS PBI_PREG_AT_EXAM_IND, 'PBI_PREG_AT_EXAM_IND',
		PBI_PREG_AT_IX_IND AS PBI_PREG_AT_IX_IND, 'PBI_PREG_AT_IX_IND',
		PBI_IN_PRENATAL_CARE_IND AS PBI_IN_PRENATAL_CARE_IND, 'PBI_IN_PRENATAL_CARE_IND',
		PBI_PREG_IN_LAST_12MO_IND AS PBI_PREG_IN_LAST_12MO_IND, 'PBI_PREG_IN_LAST_12MO_IND',
		PBI_PREG_OUTCOME_CD AS PBI_PREG_OUTCOME, 'PBI_PREG_OUTCOME',
		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_INV_PREGNANCY_BIRTH  
		ON STD_HIV_CASE.D_INV_PREGNANCY_BIRTH_KEY = D_INV_PREGNANCY_BIRTH.D_INV_PREGNANCY_BIRTH_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;

DATA PREGNANCY_BIRTH;
	SET PREGNANCY_BIRTH;
	DROP _TEMA001 _TEMA002 _TEMA003 _TEMA004 _TEMA005 _TEMA006 _TEMA007 _TEMA008
	;
RUN;

PROC SQL;
   CREATE INDEX INVESTIGATION_KEY on PREGNANCY_BIRTH(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE RISK_FACTOR AS SELECT
		RSK_OTHER_DRUG_SPEC AS RSK_OTHER_DRUG_SPEC, 'RSK_OTHER_DRUG_SPEC',
		RSK_RISK_FACTORS_ASSESS_IND AS RSK_RISK_FACTORS_ASSESS_IND, 'RSK_RISK_FACTORS_ASSESS_IND',
		RSK_SEX_W_MALE_12MO_IND AS RSK_SEX_W_MALE_12MO_IND, 'RSK_SEX_W_MALE_12MO_IND',
		RSK_SEX_W_FEMALE_12MO_IND AS RSK_SEX_W_FEMALE_12MO_IND, 'RSK_SEX_W_FEMALE_12MO_IND',
		RSK_SEX_W_TRANSGNDR_12MO_IND AS RSK_SEX_W_TRANSGNDR_12MO_IND, 'RSK_SEX_W_TRANSGNDR_12MO_IND',
		RSK_SEX_W_ANON_PTRNR_12MO_IND AS RSK_SEX_W_ANON_PTRNR_12MO_IND, 'RSK_SEX_W_ANON_PTRNR_12MO_IND',
		RSK_SEX_WOUT_CONDOM_12MO_IND AS RSK_SEX_WOUT_CONDOM_12MO_IND, 'RSK_SEX_WOUT_CONDOM_12MO_IND',
		RSK_SEX_INTOXCTED_HGH_12MO_IND AS RSK_SEX_INTOXCTED_HGH_12MO_IND, 'RSK_SEX_INTOXCTED_HGH_12MO_IND',
		RSK_SEX_EXCH_DRGS_MNY_12MO_IND AS RSK_SEX_EXCH_DRGS_MNY_12MO_IND, 'RSK_SEX_EXCH_DRGS_MNY_12MO_IND',
		RSK_SEX_W_KNWN_MSM_12M_FML_IND AS RSK_SEX_W_KNWN_MSM_12M_FML_IND, 'RSK_SEX_W_KNWN_MSM_12M_FML_IND',
		RSK_SEX_W_KNOWN_IDU_12MO_IND AS RSK_SEX_W_KNOWN_IDU_12MO_IND, 'RSK_SEX_W_KNOWN_IDU_12MO_IND',
		RSK_BEEN_INCARCERATD_12MO_IND AS RSK_BEEN_INCARCERATD_12MO_IND, 'RSK_BEEN_INCARCERATD_12MO_IND',
		RSK_INJ_DRUG_USE_12MO_IND AS RSK_INJ_DRUG_USE_12MO_IND, 'RSK_INJ_DRUG_USE_12MO_IND',
		RSK_SHARED_INJ_EQUIP_12MO_IND AS RSK_SHARED_INJ_EQUIP_12MO_IND, 'RSK_SHARED_INJ_EQUIP_12MO_IND',
		RSK_NO_DRUG_USE_12MO_IND AS RSK_NO_DRUG_USE_12MO_IND, 'RSK_NO_DRUG_USE_12MO_IND',
		RSK_COCAINE_USE_12MO_IND AS RSK_COCAINE_USE_12MO_IND, 'RSK_COCAINE_USE_12MO_IND',
		RSK_CRACK_USE_12MO_IND AS RSK_CRACK_USE_12MO_IND, 'RSK_CRACK_USE_12MO_IND',
		RSK_HEROIN_USE_12MO_IND AS RSK_HEROIN_USE_12MO_IND, 'RSK_HEROIN_USE_12MO_IND',
		RSK_METH_USE_12MO_IND AS RSK_METH_USE_12MO_IND, 'RSK_METH_USE_12MO_IND',
		RSK_NITR_POP_USE_12MO_IND AS RSK_NITR_POP_USE_12MO_IND, 'RSK_NITR_POP_USE_12MO_IND',
		RSK_ED_MEDS_USE_12MO_IND AS RSK_ED_MEDS_USE_12MO_IND, 'RSK_ED_MEDS_USE_12MO_IND',
		RSK_OTHER_DRUG_USE_12MO_IND AS RSK_OTHER_DRUG_USE_12MO_IND, 'RSK_OTHER_DRUG_USE_12MO_IND',
		RSK_TARGET_POPULATIONS AS RSK_TARGET_POPULATIONS, 'RSK_TARGET_POPULATIONS',
		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_INV_RISK_FACTOR  
		ON STD_HIV_CASE.D_INV_RISK_FACTOR_KEY = D_INV_RISK_FACTOR.D_INV_RISK_FACTOR_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;

DATA RISK_FACTOR;
	SET RISK_FACTOR;
	DROP _TEMA001 _TEMA002 _TEMA003 _TEMA004 _TEMA005 _TEMA006 _TEMA007 _TEMA008 _TEMA009 _TEMA010 _TEMA011 _TEMA012 _TEMA013  _TEMA014 _TEMA015 _TEMA016 _TEMA017 _TEMA018 _TEMA019
		_TEMA020 _TEMA021 _TEMA022 _TEMA023
	;
RUN;
PROC SQL;
   CREATE INDEX INVESTIGATION_KEY on RISK_FACTOR(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE SOCIAL_HISTORY AS SELECT
		SOC_FEMALE_PRTNRS_12MO_TTL AS SOC_FEMALE_PRTNRS_12MO_TTL, 'SOC_FEMALE_PRTNRS_12MO_TTL',
		SOC_MALE_PRTNRS_12MO_TOTAL AS SOC_MALE_PRTNRS_12MO_TOTAL, 'SOC_MALE_PRTNRS_12MO_TOTAL',
		SOC_TRANSGNDR_PRTNRS_12MO_TTL AS SOC_TRANSGNDR_PRTNRS_12MO_TTL, 'SOC_TRANSGNDR_PRTNRS_12MO_TTL',
		SOC_PRTNRS_PRD_FML_TTL AS SOC_PRTNRS_PRD_FML_TTL, 'SOC_PRTNRS_PRD_FML_TTL',
		SOC_PRTNRS_PRD_MALE_TTL AS SOC_PRTNRS_PRD_MALE_TTL, 'SOC_PRTNRS_PRD_MALE_TTL',
		SOC_PRTNRS_PRD_TRNSGNDR_TTL AS STD_PRTNRS_PRD_TRNSGNDR_TTL, 'STD_PRTNRS_PRD_TRNSGNDR_TTL',
		SOC_FEMALE_PRTNRS_12MO_IND AS SOC_FEMALE_PRTNRS_12MO_IND, 'SOC_FEMALE_PRTNRS_12MO_IND',
		SOC_MALE_PRTNRS_12MO_IND AS SOC_MALE_PRTNRS_12MO_IND, 'SOC_MALE_PRTNRS_12MO_IND',
		SOC_TRANSGNDR_PRTNRS_12MO_IND AS SOC_TRANSGNDR_PRTNRS_12MO_IND, 'SOC_TRANSGNDR_PRTNRS_12MO_IND',
		SOC_PLACES_TO_MEET_PARTNER AS SOC_PLACES_TO_MEET_PARTNER, 'SOC_PLACES_TO_MEET_PARTNER',
		SOC_PLACES_TO_HAVE_SEX AS SOC_PLACES_TO_HAVE_SEX, 'SOC_PLACES_TO_HAVE_SEX',
		SOC_PRTNRS_PRD_FML_IND AS SOC_PRTNRS_PRD_FML_IND, 'SOC_PRTNRS_PRD_FML_IND',
		SOC_PRTNRS_PRD_MALE_IND AS SOC_PRTNRS_PRD_MALE_IND, 'SOC_PRTNRS_PRD_MALE_IND',
		SOC_PRTNRS_PRD_TRNSGNDR_IND AS SOC_PRTNRS_PRD_TRNSGNDR_IND, 'SOC_PRTNRS_PRD_TRNSGNDR_IND',
		SOC_SX_PRTNRS_INTNT_12MO_IND AS SOC_SX_PRTNRS_INTNT_12MO_IND, 'SOC_SX_PRTNRS_INTNT_12MO_IND',
		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN NBS_RDB.D_INV_SOCIAL_HISTORY  
		ON STD_HIV_CASE.D_INV_SOCIAL_HISTORY_KEY = D_INV_SOCIAL_HISTORY.D_INV_SOCIAL_HISTORY_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;

DATA SOCIAL_HISTORY;
	SET SOCIAL_HISTORY;
	DROP _TEMA001 _TEMA002 _TEMA003 _TEMA004 _TEMA005 _TEMA006 _TEMA007 _TEMA008 _TEMA009 _TEMA010 _TEMA011 _TEMA012 _TEMA013  _TEMA014 _TEMA015 
	;
RUN;
PROC SQL;
   CREATE INDEX INVESTIGATION_KEY on SOCIAL_HISTORY(INVESTIGATION_KEY);
QUIT;

PROC SQL;
CREATE TABLE D_INV_SYMPTOM AS SELECT * FROM NBS_RDB.D_INV_SYMPTOM;
QUIT;
DATA D_INV_SYMPTOM;
SET D_INV_SYMPTOM;
if missing(SYM_NEUROLOGIC_SIGN_SYM) then SYM_NEUROLOGIC_SIGN_SYM=" ";
if missing(SYM_OCULAR_MANIFESTATIONS) then SYM_OCULAR_MANIFESTATIONS=" ";
if missing(SYM_OTIC_MANIFESTATION) then SYM_OTIC_MANIFESTATION=" ";
if missing(SYM_LATE_CLINICAL_MANIFES) then SYM_LATE_CLINICAL_MANIFES=" ";
RUN;
PROC SQL;
	CREATE TABLE D_INV_SYMPTOM AS SELECT
		SYM_NEUROLOGIC_SIGN_SYM, SYM_OCULAR_MANIFESTATIONS, SYM_OTIC_MANIFESTATION,
		SYM_LATE_CLINICAL_MANIFES,
		STD_HIV_CASE.INVESTIGATION_KEY
	FROM
		STD_HIV_CASE LEFT OUTER JOIN D_INV_SYMPTOM
		ON STD_HIV_CASE.D_INV_SYMPTOM_KEY = D_INV_SYMPTOM.D_INV_SYMPTOM_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;
PROC SQL;
   CREATE INDEX INVESTIGATION_KEY on D_INV_SYMPTOM(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE  
		PATIENT AS 
	SELECT  
		D_PATIENT.PATIENT_CURRENT_SEX,
		D_PATIENT.PATIENT_LAST_NAME,
		D_PATIENT.PATIENT_FIRST_NAME,
		D_PATIENT.PATIENT_MIDDLE_NAME,
		D_PATIENT.PATIENT_ALIAS_NICKNAME AS PATIENT_ALIAS 'PATIENT_ALIAS',
		PATIENT_DOB,
		PATIENT_AGE_REPORTED AS AGE_REPORTED 'AGE_REPORTED',
		PATIENT_AGE_REPORTED_UNIT,
		PATIENT_ADDL_GENDER_INFO,
		PATIENT_BIRTH_SEX,
		PATIENT_DECEASED_DATE,
		PATIENT_STREET_ADDRESS_1,
		PATIENT_STREET_ADDRESS_2,
		PATIENT_CITY,
		PATIENT_ZIP,
		PATIENT_CENSUS_TRACT,
		PATIENT_PHONE_HOME,
		PATIENT_PHONE_WORK,
		PATIENT_PHONE_EXT_WORK,
		PATIENT_PHONE_CELL,
		PATIENT_EMAIL,
		PATIENT_AGE_REPORTED AS AGE_REPORTED 'AGE_REPORTED',
		PATIENT_DECEASED_INDICATOR,
		PATIENT_LOCAL_ID,

		/*PATIENT_CURRENT_SEX_CD, TODO*/

		PATIENT_CURR_SEX_UNK_RSN,
	PATIENT_PREFERRED_GENDER, 
	PATIENT_BIRTH_COUNTRY,
	/*PATIENT_DECEASED_INDICATOR_CD, TODO*/
	PATIENT_MARITAL_STATUS,
	PATIENT_STATE,
	PATIENT_COUNTY,
	PATIENT_COUNTRY,
	PATIENT_ETHNICITY,
	PATIENT_UNK_ETHNIC_RSN,
	PATIENT_RACE_CALCULATED as PATIENT_RACE 'PATIENT_RACE',
	STD_HIV_CASE.INVESTIGATION_KEY
	
	FROM
		STD_HIV_CASE
	INNER JOIN 		
		NBS_RDB.D_PATIENT 
		ON
		D_PATIENT.PATIENT_KEY=STD_HIV_CASE.PATIENT_KEY
	ORDER BY STD_HIV_CASE.INVESTIGATION_KEY;
QUIT;

DATA PATIENT;
	SET PATIENT;
	LENGTH PATIENT_NAME $150;
	LENGTH PATIENT_SEX $78;
	LENGTH PATIENT_AGE_REPORTED $78;
	LENGTH CALC_5_YEAR_AGE_GROUP $2;

	PATIENT_NAME=TRIM(PATIENT_LAST_NAME) || ', '|| TRIM(PATIENT_FIRST_NAME) || ' '|| TRIM(PATIENT_MIDDLE_NAME);
	PATIENT_AGE_REPORTED= AGE_REPORTED || ' '|| PATIENT_AGE_REPORTED_UNIT;

IF(PATIENT_PHONE_EXT_WORK~=.) THEN
	PATIENT_PHONE_WORK=TRIM(PATIENT_PHONE_WORK)||' Ext '||TRIM(PATIENT_PHONE_EXT_WORK);

PATIENT_SEX =PATIENT_PREFERRED_GENDER;

IF(lengthn(TRIM(PATIENT_PREFERRED_GENDER))<1) THEN
	PATIENT_SEX= PATIENT_CURR_SEX_UNK_RSN;
IF(lengthn(TRIM(PATIENT_SEX))<1) THEN
	PATIENT_SEX= PATIENT_CURRENT_SEX;
	
IF(AGE_REPORTED LE 4 AND AGE_REPORTED GE 0 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=1;
ELSE IF(AGE_REPORTED LE 9 AND AGE_REPORTED GE 5 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=2;
ELSE IF(AGE_REPORTED LE 14 AND AGE_REPORTED GE 10 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=3;
ELSE IF(AGE_REPORTED LE 19 AND AGE_REPORTED GE 15 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=4;
ELSE IF(AGE_REPORTED LE 24 AND AGE_REPORTED GE 20 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=5;
ELSE IF(AGE_REPORTED LE 29 AND AGE_REPORTED GE 25 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=6;
ELSE IF(AGE_REPORTED LE 34 AND AGE_REPORTED GE 30 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=7;
ELSE IF(AGE_REPORTED LE 39 AND AGE_REPORTED GE 35 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=8;
ELSE IF(AGE_REPORTED LE 44 AND AGE_REPORTED GE 40 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=9;
ELSE IF(AGE_REPORTED LE 49 AND AGE_REPORTED GE 45 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=10;
ELSE IF(AGE_REPORTED LE 54 AND AGE_REPORTED GE 50 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=11;
ELSE IF(AGE_REPORTED LE 59 AND AGE_REPORTED GE 55 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=12;
ELSE IF(AGE_REPORTED LE 64 AND AGE_REPORTED GE 60 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=13;
ELSE IF(AGE_REPORTED LE 69 AND AGE_REPORTED GE 65 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=14;
ELSE IF(AGE_REPORTED LE 74 AND AGE_REPORTED GE 70 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=15;
ELSE IF(AGE_REPORTED LE 79 AND AGE_REPORTED GE 75 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=16;
ELSE IF(AGE_REPORTED LE 84 AND AGE_REPORTED GE 80 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=17;
ELSE IF(AGE_REPORTED GE 85 AND PATIENT_AGE_REPORTED_UNIT='Years') THEN
	CALC_5_YEAR_AGE_GROUP=18;

DROP PATIENT_LAST_NAME PATIENT_FIRST_NAME PATIENT_MIDDLE_NAME AGE_REPORTED PATIENT_AGE_REPORTED_UNIT PATIENT_PHONE_EXT_WORK ;
RUN;

PROC SQL;
	CREATE TABLE  
		ENTITY_INIT AS 
	SELECT F_STD_PAGE_CASE.ORG_AS_REPORTER_KEY as REPORTING_ORG_KEY 'REPORTING_ORG_KEY', F_STD_PAGE_CASE.HOSPITAL_KEY,
		F_STD_PAGE_CASE.INVESTIGATOR_KEY as INVESTIGATOR_CURRENT_KEY 'INVESTIGATOR_CURRENT_KEY',
		F_STD_PAGE_CASE.PERSON_AS_REPORTER_KEY AS REPORTING_PROV_KEY 'REPORTING_PROV_KEY',
		F_STD_PAGE_CASE.PHYSICIAN_KEY,
		F_STD_PAGE_CASE.INIT_FOLLOW_UP_INVSTGTR_KEY AS INVESTIGATOR_INITIAL_KEY 'INVESTIGATOR_INITIAL_KEY',
		F_STD_PAGE_CASE.SURVEILLANCE_INVESTIGATOR_KEY as INVESTIGATOR_SURV_KEY 'INVESTIGATOR_SURV_KEY',
		F_STD_PAGE_CASE.INVSTGTR_FLD_FOLLOW_UP_KEY AS INVESTIGATOR_FL_FUP_KEY 'INVESTIGATOR_FL_FUP_KEY',
		F_STD_PAGE_CASE.INIT_ASGNED_FLD_FOLLOW_UP_KEY as INVESTIGATOR_INIT_FL_FUP_KEY 'INVESTIGATOR_INIT_FL_FUP_KEY',
		F_STD_PAGE_CASE.PROVIDER_FLD_FOLLOW_UP_KEY as PHYSICIAN_FL_FUP_KEY 'PHYSICIAN_FL_FUP_KEY',
		F_STD_PAGE_CASE.FACILITY_FLD_FOLLOW_UP_KEY,
		F_STD_PAGE_CASE.DISPOSITIONED_BY_KEY as INVESTIGATOR_DISP_FL_FUP_KEY 'INVESTIGATOR_DISP_FL_FUP_KEY',
		F_STD_PAGE_CASE.SUPRVSR_OF_FLD_FOLLOW_UP_KEY as INVESTIGATOR_SUPER_FL_FUP_KEY 'INVESTIGATOR_SUPER_FL_FUP_KEY',
		F_STD_PAGE_CASE.INTERVIEWER_ASSIGNED_KEY as INVESTIGATOR_INTERVIEW_KEY 'INVESTIGATOR_INTERVIEW_KEY',
		F_STD_PAGE_CASE.INIT_ASGNED_INTERVIEWER_KEY as INVESTIGATOR_INIT_INTRVW_KEY 'INVESTIGATOR_INIT_INTRVW_KEY',
		F_STD_PAGE_CASE.SUPRVSR_OF_CASE_ASSGNMENT_KEY AS INVESTIGATOR_SUPER_CASE_KEY 'INVESTIGATOR_SUPER_CASE_KEY',
		F_STD_PAGE_CASE.CLOSED_BY_KEY as INVESTIGATOR_CLOSED_KEY 'INVESTIGATOR_CLOSED_KEY',
		F_STD_PAGE_CASE.ORDERING_FACILITY_KEY,
		F_STD_PAGE_CASE.INVESTIGATION_KEY
	FROM nbs_rdb.F_STD_PAGE_CASE
	INNER JOIN STD_HIV_CASE ON F_STD_PAGE_CASE.INVESTIGATION_KEY=STD_HIV_CASE.INVESTIGATION_KEY;

QUIT;
PROC SQL;
   CREATE INDEX INVESTIGATION_KEY on ENTITY_INIT(INVESTIGATION_KEY);
QUIT;

PROC SQL;
	CREATE TABLE  
		ENTITY_DATA AS 
	SELECT 
		ENTITY_INIT.*, 
		a.PROVIDER_QUICK_CODE as INVESTIGATOR_CURRENT_QC,/*1*/
	b.PROVIDER_QUICK_CODE as INVESTIGATOR_INITIAL_QC,
	c.PROVIDER_QUICK_CODE as INVESTIGATOR_SURV_QC,
	d.PROVIDER_QUICK_CODE as INVESTIGATOR_FL_FUP_QC,
	e.PROVIDER_QUICK_CODE as INVESTIGATOR_DISP_FL_FUP_QC,/*5*/
	f.PROVIDER_QUICK_CODE as INVESTIGATOR_SUPER_FL_FUP_QC,
	g.PROVIDER_QUICK_CODE as INVESTIGATOR_INTERVIEW_QC,
	h.PROVIDER_QUICK_CODE as INVESTIGATOR_INIT_INTRVW_QC,
	i.PROVIDER_QUICK_CODE as INVESTIGATOR_SUPER_CASE_QC,
	j.PROVIDER_QUICK_CODE as INVESTIGATOR_CLOSED_QC,/*10*/
	k.PROVIDER_QUICK_CODE as INVESTIGATOR_INIT_FL_FUP_QC
	FROM 
	ENTITY_INIT 	LEFT JOIN
			NBS_RDB.D_PROVIDER a
	ON 	a.PROVIDER_KEY= ENTITY_INIT.INVESTIGATOR_CURRENT_KEY	LEFT JOIN
		NBS_RDB.D_PROVIDER b
	ON 	b.PROVIDER_KEY= ENTITY_INIT.INVESTIGATOR_INITIAL_KEY	LEFT JOIN
		NBS_RDB.D_PROVIDER c
	ON 	c.PROVIDER_KEY= ENTITY_INIT.INVESTIGATOR_SURV_KEY	LEFT JOIN
		NBS_RDB.D_PROVIDER d  
	ON 	d.PROVIDER_KEY= ENTITY_INIT.INVESTIGATOR_FL_FUP_KEY	LEFT JOIN
		NBS_RDB.D_PROVIDER e
	ON 	e.PROVIDER_KEY= ENTITY_INIT.INVESTIGATOR_DISP_FL_FUP_KEY	LEFT JOIN
		NBS_RDB.D_PROVIDER f
	ON 	f.PROVIDER_KEY= ENTITY_INIT.INVESTIGATOR_SUPER_FL_FUP_KEY	LEFT JOIN
		NBS_RDB.D_PROVIDER g
	ON 	g.PROVIDER_KEY= ENTITY_INIT.INVESTIGATOR_INTERVIEW_KEY	LEFT JOIN
		NBS_RDB.D_PROVIDER h 
	ON 	h.PROVIDER_KEY= ENTITY_INIT.INVESTIGATOR_INIT_INTRVW_KEY	LEFT JOIN
		NBS_RDB.D_PROVIDER i
	ON 	i.PROVIDER_KEY= ENTITY_INIT.INVESTIGATOR_SUPER_CASE_KEY	LEFT JOIN
		NBS_RDB.D_PROVIDER j
	ON 	j.PROVIDER_KEY= ENTITY_INIT.INVESTIGATOR_CLOSED_KEY	LEFT JOIN
		NBS_RDB.D_PROVIDER k
	ON 	k.PROVIDER_KEY= ENTITY_INIT.INVESTIGATOR_INIT_FL_FUP_KEY
		ORDER BY ENTITY_INIT.INVESTIGATION_KEY;
QUIT;
PROC SQL;
   CREATE INDEX INVESTIGATION_KEY on ENTITY_DATA(INVESTIGATION_KEY);
QUIT;

DATA STD_HIV_DATAMART_INIT;
	MERGE CONDITION D_INVESTIGATION INV_CONTACT
		CASE_MANAGEMENT INV_ADMINISTRATIVE INV_TREATMENT 
		CLINICAL COMPLICATION 
		INV_CONTACT EPIDEMIOLOGY 
		INV_HIV LAB_FINDING MEDICAL_HISTORY 
		PATIENT_OBS PREGNANCY_BIRTH RISK_FACTOR 
		SOCIAL_HISTORY D_INV_SYMPTOM PATIENT ENTITY_DATA INIT_INTERVIEW_CASE;
		BY INVESTIGATION_KEY;
RUN;

PROC SQL;
   CREATE INDEX INVESTIGATION_KEY on STD_HIV_DATAMART_INIT(INVESTIGATION_KEY);
QUIT;

PROC SORT TAGSORT FORCE DATA=STD_HIV_DATAMART_INIT NODUPKEY; BY INVESTIGATION_KEY;RUN;

PROC SQL;
create table STD_HIV_DATAMART as 
select 
ADI_900_STATUS,
ADI_900_STATUS_CD,
ADM_REFERRAL_BASIS_OOJ,
ADM_RPTNG_CNTY,
CA_INIT_INTVWR_ASSGN_DT,
CA_INTERVIEWER_ASSIGN_DT,
CA_PATIENT_INTV_STATUS,
CALC_5_YEAR_AGE_GROUP,
CASE_RPT_MMWR_WK,/*INVESTIGATION Position 9*/
CASE_RPT_MMWR_YR,/*INVESTIGATION Position 10*/
CC_CLOSED_DT,
CLN_CARE_STATUS_CLOSE_DT,/*CLINICAL Position 12*/
CLN_CONDITION_RESISTANT_TO,
CLN_DT_INIT_HLTH_EXM,
CLN_NEUROSYPHILLIS_IND,
CLN_PRE_EXP_PROPHY_IND,/*CLINICAL Position 16*/
CLN_PRE_EXP_PROPHY_REFER,/*CLINICAL Position 17*/
CLN_SURV_PROVIDER_DIAG_CD,
CMP_CONJUNCTIVITIS_IND,
CMP_PID_IND,
COINFECTION_ID,/*INVESTIGATION Position 21*/
CONDITION_CD,
CONDITION_KEY,
CONFIRMATION_DT,
CURR_PROCESS_STATE,/*INVESTIGATION Position 25*/
DETECTION_METHOD_DESC_TXT,
DIAGNOSIS,
DIAGNOSIS_CD,
DIE_FRM_THIS_ILLNESS_IND,/*INVESTIGATION Position 29*/
DISEASE_IMPORTED_IND,/*INVESTIGATION Position 30*/
DISSEMINATED_IND,
EPI_CNTRY_USUAL_RESID,
EPI_LINK_ID,
FACILITY_FLD_FOLLOW_UP_KEY,
FIELD_RECORD_NUMBER,
FL_FUP_ACTUAL_REF_TYPE,
FL_FUP_DISPO_DT,
FL_FUP_DISPOSITION,
FL_FUP_EXAM_DT,
FL_FUP_EXPECTED_DT,
FL_FUP_EXPECTED_IN_IND_CD,
FL_FUP_INIT_ASSGN_DT,
FL_FUP_INTERNET_OUTCOME_CD,
FL_FUP_INVESTIGATOR_ASSGN_DT,
FL_FUP_NOTIFICATION_PLAN,
FL_FUP_OOJ_OUTCOME,
FL_FUP_PROV_DIAGNOSIS_CD,
FL_FUP_PROV_EXM_REASON,
HIV_900_RESULT,
HIV_900_TEST_IND,
HIV_900_TEST_REFERRAL_DT,
HIV_AV_THERAPY_EVER_IND,
HIV_AV_THERAPY_LAST_12MO_IND,
HIV_CA_900_OTH_RSN_NOT_LO,
HIV_CA_900_REASON_NOT_LOC,
HIV_ENROLL_PRTNR_SRVCS_IND,
HIV_KEEP_900_CARE_APPT_IND,
HIV_LAST_900_TEST_DT,
HIV_POST_TEST_900_COUNSELING,
HIV_PREVIOUS_900_TEST_IND,
HIV_REFER_FOR_900_CARE_IND,
HIV_REFER_FOR_900_TEST,
HIV_RST_PROVIDED_900_RSLT_IND,
HIV_SELF_REPORTED_RSLT_900,
HIV_STATE_CASE_ID,
HOSPITAL_KEY,
HSPTLIZD_IND,/*INVESTIGATION Position 67*/
INVESTIGATION_KEY,
INIT_FUP_CLINIC_CODE,
INIT_FUP_CLOSED_DT,
INIT_FUP_INITIAL_FOLL_UP,
INIT_FUP_INTERNET_FOLL_UP,/*CASE_MANAGEMENT Position 72*/
INIT_FUP_INITIAL_FOLL_UP_CD,
INIT_FUP_INTERNET_FOLL_UP_CD,
INIT_FUP_NOTIFIABLE,
INITIATING_AGNCY,
INV_ASSIGNED_DT,/*INVESTIGATION Position 77*/
INV_CASE_STATUS,/*INVESTIGATION Position 78*/
INV_CLOSE_DT,/*INVESTIGATION Position 79*/
INV_LOCAL_ID,
INV_RPT_DT,/*INVESTIGATION Position 81*/
INV_START_DT,/*INVESTIGATION Position 82*/
INVESTIGATION_DEATH_DATE,/*INVESTIGATION Position 83*/
INVESTIGATION_STATUS,/*INVESTIGATION Position 85*/
INVESTIGATOR_CLOSED_KEY,
INVESTIGATOR_CLOSED_QC,
INVESTIGATOR_CURRENT_KEY,
INVESTIGATOR_CURRENT_QC,
INVESTIGATOR_DISP_FL_FUP_KEY,
INVESTIGATOR_DISP_FL_FUP_QC,
INVESTIGATOR_FL_FUP_KEY,
INVESTIGATOR_FL_FUP_QC,
INVESTIGATOR_INIT_INTRVW_KEY,
INVESTIGATOR_INIT_INTRVW_QC,
INVESTIGATOR_INIT_FL_FUP_KEY,
INVESTIGATOR_INIT_FL_FUP_QC,
INVESTIGATOR_INITIAL_KEY,
INVESTIGATOR_INITIAL_QC,
INVESTIGATOR_INTERVIEW_KEY,
INVESTIGATOR_INTERVIEW_QC,
INVESTIGATOR_SUPER_CASE_KEY,
INVESTIGATOR_SUPER_CASE_QC,
INVESTIGATOR_SUPER_FL_FUP_KEY,
INVESTIGATOR_SUPER_FL_FUP_QC,
INVESTIGATOR_SURV_KEY,
INVESTIGATOR_SURV_QC,
IPO_CURRENTLY_IN_INSTITUTION,
IPO_LIVING_WITH,
IPO_NAME_OF_INSTITUTITION,
IPO_TIME_AT_ADDRESS_NUM,
IPO_TIME_AT_ADDRESS_UNIT,
IPO_TIME_IN_COUNTRY_NUM,
IPO_TIME_IN_COUNTRY_UNIT,
IPO_TIME_IN_STATE_NUM,
IPO_TIME_IN_STATE_UNIT,
IPO_TYPE_OF_INSTITUTITION,
IPO_TYPE_OF_RESIDENCE,
IX_DATE_OI,
JURISDICTION_CD,
JURISDICTION_NM,
LAB_HIV_SPECIMEN_COLL_DT,/*LAB_FINDING Position 122*/
LAB_NONTREP_SYPH_RSLT_QNT,
LAB_NONTREP_SYPH_RSLT_QUA,
LAB_NONTREP_SYPH_TEST_TYP,
LAB_SYPHILIS_TST_PS_IND,/*LAB_FINDING Position 126*/
LAB_SYPHILIS_TST_RSLT_PS,/*--LAB_FINDING Position 127*/
LAB_TESTS_PERFORMED,
LAB_TREP_SYPH_RESULT_QUAL,
LAB_TREP_SYPH_TEST_TYPE,
MDH_PREV_STD_HIST,
OOJ_AGENCY_SENT_TO,
OOJ_DUE_DATE_SENT_TO,
OOJ_FR_NUMBER_SENT_TO,
OOJ_INITG_AGNCY_OUTC_DUE_DATE,
OOJ_INITG_AGNCY_OUTC_SNT_DATE,
OOJ_INITG_AGNCY_RECD_DATE,
ORDERING_FACILITY_KEY,
OUTBREAK_IND,/*INVESTIGATION Position 139*/
OUTBREAK_NAME,/*INVESTIGATION Position 140*/
PATIENT_ADDL_GENDER_INFO,
PATIENT_AGE_AT_ONSET,/*INVESTIGATION Position 142*/
PATIENT_AGE_AT_ONSET_UNIT,/*INVESTIGATION Position 143*/
PATIENT_AGE_REPORTED,
PATIENT_ALIAS,
PATIENT_BIRTH_COUNTRY,
PATIENT_BIRTH_SEX,
PATIENT_CENSUS_TRACT,
PATIENT_CITY,
PATIENT_COUNTRY,
PATIENT_COUNTY,
PATIENT_CURR_SEX_UNK_RSN,
PATIENT_CURRENT_SEX,
PATIENT_DECEASED_DATE,
PATIENT_DECEASED_INDICATOR,
PATIENT_DOB,
PATIENT_EMAIL,
PATIENT_ETHNICITY,
PATIENT_LOCAL_ID,
PATIENT_MARITAL_STATUS,
PATIENT_NAME,
PATIENT_PHONE_CELL,
PATIENT_PHONE_HOME,
PATIENT_PHONE_WORK,
PATIENT_PREFERRED_GENDER,
PATIENT_PREGNANT_IND,
PATIENT_RACE,
PATIENT_SEX,
PATIENT_STATE,
PATIENT_STREET_ADDRESS_1,
PATIENT_STREET_ADDRESS_2,
PATIENT_UNK_ETHNIC_RSN,
PATIENT_ZIP,
PBI_IN_PRENATAL_CARE_IND,
PBI_PATIENT_PREGNANT_WKS,
PBI_PREG_AT_EXAM_IND,
PBI_PREG_AT_EXAM_WKS,
PBI_PREG_AT_IX_IND,
PBI_PREG_AT_IX_WKS,
PBI_PREG_IN_LAST_12MO_IND,
PBI_PREG_OUTCOME,
PHYSICIAN_FL_FUP_KEY,
PHYSICIAN_KEY,
PROGRAM_AREA_CD,
PROGRAM_JURISDICTION_OID,
REPORTING_ORG_KEY,
REPORTING_PROV_KEY,
RPT_ELICIT_INTERNET_INFO,
RPT_FIRST_NDLSHARE_EXP_DT,
RPT_FIRST_SEX_EXP_DT,
RPT_LAST_NDLSHARE_EXP_DT,
PROVIDER_REASON_VISIT_DT,/*MEDICAL_HISTORY Position 192*/
REFERRAL_BASIS,/*INVESTIGATION Position 193*/
RPT_LAST_SEX_EXP_DT,
RPT_MET_OP_INTERNET,
RPT_NDLSHARE_EXP_FREQ,
RPT_RELATIONSHIP_TO_OP,
RPT_SEX_EXP_FREQ,
RPT_SRC_CD_DESC,
RPT_SPOUSE_OF_OP,
RSK_BEEN_INCARCERATD_12MO_IND,
RSK_COCAINE_USE_12MO_IND,
RSK_CRACK_USE_12MO_IND,
RSK_ED_MEDS_USE_12MO_IND,
RSK_HEROIN_USE_12MO_IND,
RSK_INJ_DRUG_USE_12MO_IND,
RSK_METH_USE_12MO_IND,
RSK_NITR_POP_USE_12MO_IND,
RSK_NO_DRUG_USE_12MO_IND,
RSK_OTHER_DRUG_SPEC,
RSK_OTHER_DRUG_USE_12MO_IND,
RSK_RISK_FACTORS_ASSESS_IND,
RSK_SEX_EXCH_DRGS_MNY_12MO_IND,
RSK_SEX_INTOXCTED_HGH_12MO_IND,
RSK_SEX_W_ANON_PTRNR_12MO_IND,
RSK_SEX_W_FEMALE_12MO_IND,
RSK_SEX_W_KNOWN_IDU_12MO_IND,
RSK_SEX_W_KNWN_MSM_12M_FML_IND,
RSK_SEX_W_MALE_12MO_IND,
RSK_SEX_W_TRANSGNDR_12MO_IND,
RSK_SEX_WOUT_CONDOM_12MO_IND,
RSK_SHARED_INJ_EQUIP_12MO_IND,
RSK_TARGET_POPULATIONS,
SOC_FEMALE_PRTNRS_12MO_IND,
SOC_FEMALE_PRTNRS_12MO_TTL,
SOC_MALE_PRTNRS_12MO_IND,
SOC_MALE_PRTNRS_12MO_TOTAL,
SOC_PLACES_TO_HAVE_SEX,
SOC_PLACES_TO_MEET_PARTNER,
SOC_PRTNRS_PRD_FML_IND,
SOC_PRTNRS_PRD_FML_TTL,
SOC_PRTNRS_PRD_MALE_IND,
SOC_PRTNRS_PRD_MALE_TTL,
SOC_PRTNRS_PRD_TRNSGNDR_IND,
SOC_SX_PRTNRS_INTNT_12MO_IND,
SOC_TRANSGNDR_PRTNRS_12MO_IND,
SOC_TRANSGNDR_PRTNRS_12MO_TTL,
SOURCE_SPREAD,
STD_PRTNRS_PRD_TRNSGNDR_TTL,
SURV_CLOSED_DT,
SURV_INVESTIGATOR_ASSGN_DT,
SURV_PATIENT_FOLL_UP,
SURV_PROVIDER_CONTACT,
SURV_PROVIDER_EXAM_REASON,
SYM_NEUROLOGIC_SIGN_SYM,
SYM_OCULAR_MANIFESTATIONS,
SYM_OTIC_MANIFESTATION,
SYM_LATE_CLINICAL_MANIFES,
TRT_TREATMENT_DATE
FROM STD_HIV_DATAMART_INIT;
QUIT;
DATA NBS_RDB.STD_HIV_DATAMART;
SET STD_HIV_DATAMART;
RUN;

%mend STD_DATAMART;

PROC SQL;
CREATE TABLE HIV_CHECKER_MASTER_LAST 
(COUNTSTD NUM,
COUNTHIV NUM,
COUNTPARTIALHIV NUM);
INSERT INTO HIV_CHECKER_MASTER_LAST( COUNTSTD, COUNTHIV) VALUES 
(NULL, NULL);
UPDATE HIV_CHECKER_MASTER_LAST SET COUNTSTD= (select  count(*) from NBS_SRT.Condition_code where nnd_entity_identifier= 'STD_Case_Map_v1.0' and port_req_ind_cd ='F' );
UPDATE HIV_CHECKER_MASTER_LAST SET COUNTHIV= (SELECT COUNT(*) from NBS_ODS.NBS_rdb_metadata where rdb_table_nm = 'D_INV_HIV' );
UPDATE HIV_CHECKER_MASTER_LAST SET COUNTPARTIALHIV= (SELECT DISTINCT count(RDB_COLUMN_NM) from NBS_ODS.NBS_rdb_metadata where rdb_table_nm = 'D_INV_HIV'  AND RDB_COLUMN_NM IN ('HIV_CA_900_REASON_NOT_LOC', 'HIV_CA_900_OTH_RSN_NOT_LO'));
QUIT;
DATA _null_;
  set HIV_CHECKER_MASTER_LAST;
  if COUNTHIV>0 AND COUNTPARTIALHIV>1 then call execute('%STD_ALL_HIV');
  if COUNTSTD>0 && COUNTHIV=0  then call execute('%STD_NO_HIV');
  if COUNTSTD>0 && COUNTHIV>0 && COUNTPARTIALHIV=0 then call execute('%STD_PARTIAL_HIV');
  if COUNTSTD>0  then call execute('%STD_DATAMART');
RUN;

