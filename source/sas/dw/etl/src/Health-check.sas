PROC SQL;
UPDATE nbs_rdb.ETL_MISSING_RECORD SET ACTIVITY_LOG_MASTER_UID= (SELECT ACTIVITY_LOG_MASTER_UID FROM NBS_RDB.ACTIVITY_LOG_MASTER 
WHERE ACTIVITY_LOG_MASTER_UID= SELECT MAX(ACTIVITY_LOG_MASTER_UID) FROM NBS_RDB.ACTIVITY_LOG_MASTER) where PROCESSED_INDICATOR=0;
UPDATE nbs_rdb.ETL_MISSING_RECORD set PROCESSED_INDICATOR =1,
ADMIN_COMMENT='Missing patient information in LAB100 fixed.'
where PROCESSED_INDICATOR=0;
QUIT;
PROC SQL;
UPDATE nbs_rdb.ACTIVITY_LOG_MASTER SET refresh_ind= 'T', refresh_description='ETL process completed.'  WHERE ACTIVITY_LOG_MASTER_UID= 
SELECT MAX(ACTIVITY_LOG_MASTER_UID) FROM NBS_RDB.ACTIVITY_LOG_MASTER;
UPDATE NBS_RDB.ACTIVITY_LOG_MASTER SET END_DATE=DATETIME() WHERE ACTIVITY_LOG_MASTER_UID = select MAX(ACTIVITY_LOG_MASTER_UID) from nbs_rdb.ACTIVITY_LOG_MASTER;
quit;

PROC SQL;
CREATE TABLE S_HEALTH_CHECK_PATIENT_INIT AS 
SELECT PERSON.PERSON_UID AS PATIENT_UID 'PATIENT_UID',
PERSON.LOCAL_ID AS PATIENT_LOCAL_ID 'PATIENT_LOCAL_ID',              
PERSON.ADD_USER_ID,
PERSON.LAST_CHG_USER_ID,
PERSON.PERSON_PARENT_UID AS PATIENT_MPR_UID 'PATIENT_MPR_UID', 
PERSON.LAST_CHG_TIME AS PATIENT_LAST_CHANGE_TIME 'PATIENT_LAST_CHANGE_TIME',
PERSON.ADD_TIME AS PATIENT_ADD_TIME 'PATIENT_ADD_TIME',
PERSON.RECORD_STATUS_CD AS PATIENT_RECORD_STATUS 'PATIENT_RECORD_STATUS',
PARTICIPATION.ACT_UID AS  PATIENT_EVENT_UID 'PATIENT_EVENT_UID',
PARTICIPATION.TYPE_CD AS PATIENT_EVENT_TYPE 'PATIENT_EVENT_TYPE'
FROM NBS_ODS.PERSON,NBS_ODS.PARTICIPATION
WHERE PERSON.PERSON_UID=PARTICIPATION.SUBJECT_ENTITY_UID
	AND PERSON.CD='PAT'
	AND DATEPART(PERSON.LAST_CHG_TIME) >=  TODAY()-&ETL_HEALTHCHECK_GOBACK_DAYS; 

	CREATE TABLE  S_HEALTH_CHECK_PATIENT1 AS SELECT A.*, 
	B.FIRST_NM AS ADD_USER_FIRST_NAME 'ADD_USER_FIRST_NAME', B.LAST_NM AS ADD_USER_LAST_NAME 'ADD_USER_LAST_NAME', 
	C.FIRST_NM AS CHG_USER_FIRST_NAME 'CHG_USER_FIRST_NAME', C.LAST_NM AS CHG_USER_LAST_NAME 'CHG_USER_LAST_NAME' 
	FROM S_HEALTH_CHECK_PATIENT_INIT A LEFT OUTER JOIN NBS_RDB.USER_PROFILE B
	ON A.ADD_USER_ID=B.NEDSS_ENTRY_ID
	LEFT OUTER JOIN NBS_RDB.USER_PROFILE C
	ON A.ADD_USER_ID=C.NEDSS_ENTRY_ID;
QUIT;
PROC SORT DATA=S_HEALTH_CHECK_PATIENT1 NODUPKEY; BY PATIENT_UID; RUN;
DATA S_HEALTH_CHECK_PATIENT1;
set S_HEALTH_CHECK_PATIENT1;
PUT ETL_HEALTHCHECK_DATE  datetime20.;
ETL_HEALTHCHECK_DATE=DATETIME();
LENGTH MISSING_PATIENT_COMMENT $200;
RUN;
PROC SQL;
CREATE TABLE HEALTH_CHECK_PATIENT2 AS 
SELECT HC.* FROM S_HEALTH_CHECK_PATIENT1 HC  
EXCEPT SELECT L_PATIENT.PATIENT_UID FROM NBS_RDB.L_PATIENT;
QUIT;
PROC SQL;
CREATE TABLE S_HEALTH_CHECK_CONTACT_INIT
AS
SELECT PERSON.PERSON_UID AS PATIENT_UID 'PATIENT_UID',
PERSON.LOCAL_ID AS PATIENT_LOCAL_ID 'PATIENT_LOCAL_ID',              
PERSON.ADD_USER_ID,
PERSON.LAST_CHG_USER_ID,
PERSON.PERSON_PARENT_UID AS PATIENT_MPR_UID 'PATIENT_MPR_UID', 
PERSON.LAST_CHG_TIME AS PATIENT_LAST_CHANGE_TIME 'PATIENT_LAST_CHANGE_TIME',
PERSON.ADD_TIME AS PATIENT_ADD_TIME 'PATIENT_ADD_TIME',
PERSON.RECORD_STATUS_CD AS PATIENT_RECORD_STATUS 'PATIENT_RECORD_STATUS',
CT_CONTACT.CONTACT_ENTITY_UID AS PATIENT_EVENT_UID 'PATIENT_EVENT_UID',
CT_CONTACT.RELATIONSHIP_CD AS PATIENT_EVENT_TYPE 'PATIENT_EVENT_TYPE'
FROM NBS_ODS.PERSON, NBS_ODS.CT_CONTACT
WHERE CT_CONTACT.CONTACT_ENTITY_UID=PERSON.PERSON_UID
	AND PERSON.CD='PAT'
	AND DATEPART(PERSON.LAST_CHG_TIME) >=  TODAY()-&ETL_HEALTHCHECK_GOBACK_DAYS ;

CREATE TABLE  S_HEALTH_CHECK_CONTACT2 AS SELECT A.*, 
B.FIRST_NM AS ADD_USER_FIRST_NAME 'ADD_USER_FIRST_NAME', B.LAST_NM AS ADD_USER_LAST_NAME 'ADD_USER_LAST_NAME', 
C.FIRST_NM AS CHG_USER_FIRST_NAME 'CHG_USER_FIRST_NAME', C.LAST_NM AS CHG_USER_LAST_NAME 'CHG_USER_LAST_NAME' 
FROM S_HEALTH_CHECK_CONTACT_INIT A LEFT OUTER JOIN NBS_RDB.USER_PROFILE B
ON A.ADD_USER_ID=B.NEDSS_ENTRY_ID
LEFT OUTER JOIN NBS_RDB.USER_PROFILE C
ON A.ADD_USER_ID=C.NEDSS_ENTRY_ID;
QUIT;
PROC SORT DATA=S_HEALTH_CHECK_CONTACT2 NODUPKEY; BY PATIENT_UID; RUN;
DATA S_HEALTH_CHECK_CONTACT2;
set S_HEALTH_CHECK_CONTACT2;
PUT ETL_HEALTHCHECK_DATE  datetime20.;
ETL_HEALTHCHECK_DATE=DATETIME();
LENGTH MISSING_PATIENT_COMMENT $200;
RUN;
PROC SQL;
CREATE TABLE S_HEALTH_CHECK_CONTACT3 AS 
SELECT HC.* FROM S_HEALTH_CHECK_CONTACT2 HC 
EXCEPT SELECT L_PATIENT.PATIENT_UID FROM NBS_RDB.L_PATIENT;
QUIT;

DATA S_HEALTH_CHECK_CONTACT3;
SET S_HEALTH_CHECK_CONTACT3;
ETL_HEALTHCHECK_DATE=DATETIME();
ETL_HEALTHCHECK_GOBACK_DAYS=&ETL_HEALTHCHECK_GOBACK_DAYS;
MISSING_PATIENT_COMMENT='Patient entry missing in D_PATIENT table. Please check.';
RUN;
PROC SQL;
CREATE TABLE HEALTH_CHECK_PATIENT AS select * from HEALTH_CHECK_PATIENT2
UNION select * from  S_HEALTH_CHECK_CONTACT3;
QUIT;

PROC SQL;
CREATE TABLE MISSING_PHC_INV AS SELECT HC.* , PHC.CD AS CONDITION_CODE, PHC.LOCAL_ID
FROM HEALTH_CHECK_PATIENT HC LEFT OUTER JOIN NBS_ODS.PUBLIC_HEALTH_CASE PHC ON
HC.PATIENT_EVENT_UID=PHC.PUBLIC_HEALTH_CASE_UID;
QUIT;
DATA MISSING_PHC_INV;
SET MISSING_PHC_INV;
IF (TRIM(PATIENT_EVENT_TYPE="SubjOfPHC")) then MISSING_PATIENT_COMMENT='Investigation Patient entry missing in D_PATIENT table. Please check.';
ETL_HEALTHCHECK_DATE=DATETIME();
ETL_HEALTHCHECK_GOBACK_DAYS=&ETL_HEALTHCHECK_GOBACK_DAYS;
RUN;
proc sql;
create table MISSING_PHC_DATA AS SELECT a.* , b.INVESTIGATION_FORM_CD FROM MISSING_PHC_INV A INNER JOIN
nbs_srt.condition_code B ON A.CONDITION_CODE= B.CONDITION_CD
AND b.INVESTIGATION_FORM_CD NOT LIKE 'INV_FORM_HEP%';
quit;
DATA MISSING_PHC_DATA_I;
set MISSING_PHC_DATA;
DROP add_user_id last_chg_user_id investigation_form_cd;
run;
%DBLOAD (ETL_HEALTH_CHECK_PAT_DATA, MISSING_PHC_DATA_I);
proc sql;
create table MISSING_HEP100_DATA AS SELECT a.* , b.INVESTIGATION_FORM_CD FROM MISSING_PHC_INV A INNER JOIN
nbs_srt.condition_code B ON A.CONDITION_CODE= B.CONDITION_CD
AND b.INVESTIGATION_FORM_CD LIKE 'INV_FORM_HEP%';
quit;
data MISSING_HEP100_DATA;
SET MISSING_HEP100_DATA;
MISSING_PATIENT_COMMENT='HEP100 Patient entry missing in D_PATIENT table. Please check.';
RUN;
%DBLOAD (ETL_HEALTH_CHECK_PAT_DATA, MISSING_HEP100_DATA);



