%MACRO ASSIGN_ADDITIONAL_KEY (DS, KEY);
 DATA &DS;
  IF &KEY=1 THEN OUTPUT;
  SET &DS;
	&KEY+1;
	OUTPUT;
 RUN;
%MEND ASSIGN_KEY;
%macro PATIENT_CHECKER;

PROC SQL;
CREATE TABLE 
	MISSING_LAB_CASES AS 
	SELECT LAB_RPT_LOCAL_ID as EVENT_LOCAL_ID  'EVENT_LOCAL_ID'   FROM nbs_rdb.lab100 
WHERE 
	PATIENT_KEY =1
UNION 
	SELECT EVENT_LOCAL_ID as EVENT_LOCAL_ID 'EVENT_LOCAL_ID', ETL_MISSING_RECORD_UID  FROM nbs_rdb.ETL_MISSING_RECORD 
WHERE 
	PATIENT_UID =.;
QUIT;

DATA MISSING_LAB_CASES;
SET MISSING_LAB_CASES;
LENGTH PROCESS_DESCRIPTION $50;
LENGTH PROCESS_UID 8;
LENGTH PROCESSED_INDICATOR 8;
RUN;


PROC SQL;
UPDATE MISSING_LAB_CASES SET PROCESS_UID=(SELECT PROCESS_UID FROM NBS_RDB.ETL_PROCESS WHERE PROCESS_NAME='LAB100');
UPDATE MISSING_LAB_CASES SET PROCESS_DESCRIPTION=(SELECT PROCESS_NAME FROM NBS_RDB.ETL_PROCESS WHERE PROCESS_NAME='LAB100');
RUN;


PROC SQL;
create table missing_patient as
  select distinct PERSON.PERSON_UID as PATIENT_UID, MISSING_LAB_CASES.PROCESS_UID, MISSING_LAB_CASES.PROCESS_DESCRIPTION,
  MISSING_LAB_CASES.ETL_MISSING_RECORD_UID, PROCESSED_INDICATOR, act_uid as EVENT_UID, TYPE_CD as TYPE_CODE, observation.last_chg_time as EVENT_LAST_CHG_TIME, 
	observation.local_id as EVENT_LOCAL_ID 'EVENT_LOCAL_ID', observation.CTRL_CD_DISPLAY_FORM, PERSON.LAST_CHG_TIME as PATIENT_LAST_CHG_TIME, 
	PROCESS_UID, PROCESS_DESCRIPTION
  from MISSING_LAB_CASES 
INNER JOIN nbs_ods.observation
ON observation.local_id=MISSING_LAB_CASES.EVENT_LOCAL_ID
INNER JOIN  nbs_ods.Participation 
ON observation.observation_uid=Participation.act_uid
INNER  JOIN NBS_ODS.PERSON 
ON PERSON.PERSON_UID= Participation.SUBJECT_ENTITY_UID
where Participation.type_cd in ('PATSBJ')
and observation.LAST_CHG_TIME<(SELECT MAX(ACTIVITY_LOG_DETAIL.START_DATE) FROM  nbs_rdb.ACTIVITY_LOG_DETAIL);
QUIT;


data missing_patient;
merge missing_patient MISSING_LAB_CASES;
by EVENT_LOCAL_ID;
run;


DATA missing_patient;
SET missing_patient;
LENGTH ADMIN_COMMENT $200;
IF EVENT_LAST_CHG_TIME=. THEN EVENT_LAST_CHG_TIME = PATIENT_LAST_CHG_TIME;
IF PATIENT_UID =. then ADMIN_COMMENT='The Observation local id is not a valid local id. Please check.';
ELSE IF PATIENT_UID >0 and EVENT_UID> 0 then ADMIN_COMMENT='LAB100 record found with missing patient information. This will be fixed in the current run of ETL.';
IF PATIENT_UID =. then PROCESSED_INDICATOR=-1;
ELSE IF  missing(EVENT_LOCAL_ID) then PROCESSED_INDICATOR=0;
ELSE IF PATIENT_UID >0 and EVENT_UID> 0 then PROCESSED_INDICATOR=0;
RUN;

PROC SQL;
create table missing_patient_N 
as select * from missing_patient where ETL_MISSING_RECORD_UID is null;
QUIT;

PROC SQL;
create table missing_patient_E
as select * from missing_patient where ETL_MISSING_RECORD_UID is not null;
QUIT;

DATA missing_patient_N;
SET missing_patient_N;
DROP ETL_MISSING_RECORD_UID;
RUN;
PROC SQL;
INSERT INTO NBS_RDB.ETL_MISSING_RECORD
(PATIENT_UID, PROCESS_UID,EVENT_UID, PROCESS_DESCRIPTION, PROCESSED_INDICATOR, TYPE_CODE, EVENT_LAST_CHG_TIME, EVENT_LOCAL_ID, ctrl_cd_display_form, PATIENT_LAST_CHG_TIME, ADMIN_COMMENT)
SELECT 
PATIENT_UID, PROCESS_UID, EVENT_UID, PROCESS_DESCRIPTION, PROCESSED_INDICATOR, TYPE_CODE, EVENT_LAST_CHG_TIME, EVENT_LOCAL_ID, ctrl_cd_display_form, PATIENT_LAST_CHG_TIME, ADMIN_COMMENT
FROM missing_patient_N;
QUIT;

DATA NBS_RDB.ETL_MISSING_RECORD;
 MODIFY NBS_RDB.ETL_MISSING_RECORD missing_patient_E;
 BY ETL_MISSING_RECORD_UID;
RUN;
%mend PATIENT_CHECKER;
PROC SQL;
CREATE TABLE D_PATIENT_CHECKER 
(COUNT_MISSING_PAT NUM,COUNT_MISSING_LAB NUM
);
INSERT INTO D_PATIENT_CHECKER( COUNT_MISSING_PAT, COUNT_MISSING_LAB ) VALUES 
(NULL, NULL);
UPDATE D_PATIENT_CHECKER SET COUNT_MISSING_PAT = (
select count(*) from nbs_rdb.LAB100 WHERE PATIENT_KEY=1); 
UPDATE D_PATIENT_CHECKER SET COUNT_MISSING_LAB = (
select count(*) from nbs_rdb.ETL_MISSING_RECORD WHERE EVENT_LOCAL_ID is not null and PROCESSED_INDICATOR is null); 
QUIT;
DATA _null_;
  set D_PATIENT_CHECKER;
  if COUNT_MISSING_PAT >0  then call execute('%PATIENT_CHECKER');
  else if COUNT_MISSING_LAB >0  then call execute('%PATIENT_CHECKER');
RUN;



