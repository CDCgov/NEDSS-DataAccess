%macro VAR_LOOKUP;
PROC SQL;
CREATE TABLE L_VAR_PAM_N AS
	SELECT VAR_PAM_UID  FROM nbs_rdb.S_VAR_PAM
	except SELECT VAR_PAM_UID  FROM  nbs_rdb.L_VAR_PAM;
CREATE TABLE L_VAR_PAM_E AS
	SELECT S_VAR_PAM.VAR_PAM_UID, L_VAR_PAM.VAR_PAM_KEY, L_VAR_PAM.D_VAR_PAM_KEY  
		FROM nbs_rdb.S_VAR_PAM, nbs_rdb.L_VAR_PAM
where S_VAR_PAM.VAR_PAM_UID= L_VAR_PAM.VAR_PAM_UID;
ALTER TABLE L_VAR_PAM_N ADD VAR_PAM_KEY_MAX_VAL NUMERIC;
UPDATE L_VAR_PAM_N SET VAR_PAM_KEY_MAX_VAL=(select max(VAR_PAM_KEY) from nbs_rdb.L_VAR_PAM);
QUIT;
 %assign_additional_key (L_VAR_PAM_N, VAR_PAM_KEY);
 PROC SORT DATA=L_VAR_PAM_N nodupkey; BY VAR_PAM_KEY; RUN;
DATA L_VAR_PAM_N;
SET L_VAR_PAM_N;
if VAR_PAM_KEY_MAX_VAL  ~=. then 
VAR_PAM_KEY= VAR_PAM_KEY+VAR_PAM_KEY_MAX_VAL;
DROP VAR_PAM_KEY_MAX_VAL;
RUN;

DATA L_VAR_PAM_N;
RETAIN
RVTC_PAM_UID VAR_PAM_KEY D_VAR_PAM_KEY;
	SET L_VAR_PAM_N;
	D_VAR_PAM_KEY=VAR_PAM_KEY;
	IF VAR_PAM_UID ~>0 THEN VAR_PAM_UID=1;
RUN;
data L_VAR_PAM_N;
set L_VAR_PAM_N;
if VAR_PAM_UID ~=. then output;
run;
PROC SQL;
%DBLOAD (L_VAR_PAM, L_VAR_PAM_N);
PROC SQL;
CREATE TABLE L_RASH_LOC_GEN_GROUP_BASE AS
	SELECT DISTINCT VAR_PAM_UID  FROM S_RASH_LOC_GEN;
QUIT;
 %ASSIGN_KEY (L_RASH_LOC_GEN_GROUP_BASE, D_RASH_LOC_GEN_GROUP_KEY);
PROC SQL;
CREATE TABLE L_RASH_LOC_GEN_BASE AS
	SELECT VAR_PAM_UID,NBS_Case_Answer_UID FROM S_RASH_LOC_GEN;
 QUIT;
 %ASSIGN_KEY (L_RASH_LOC_GEN_BASE, D_RASH_LOC_GEN_KEY);
PROC SQL;
CREATE TABLE L_RASH_LOC_GEN_GROUP AS 
   SELECT S_VAR_PAM.VAR_PAM_UID,L_RASH_LOC_GEN_GROUP_BASE.VAR_PAM_UID as D_RASH_LOC_GEN_UID 'D_RASH_LOC_GEN_GROUP_KEY',
L_RASH_LOC_GEN_GROUP_BASE.D_RASH_LOC_GEN_GROUP_KEY
	   FROM   S_VAR_PAM LEFT OUTER JOIN L_RASH_LOC_GEN_GROUP_BASE
           ON L_RASH_LOC_GEN_GROUP_BASE.VAR_PAM_UID=S_VAR_PAM.VAR_PAM_UID;
ALTER TABLE L_RASH_LOC_GEN_GROUP ADD RASH_LOC_GEN_KEY_MAX_VAL NUMERIC;
ALTER TABLE L_RASH_LOC_GEN_GROUP ADD D_RASH_LOC_GEN_KEY_MAX_VAL NUMERIC;
ALTER TABLE L_RASH_LOC_GEN_GROUP ADD D_RASH_LOC_GEN_GROUP_KEY_MAX_VAL NUMERIC;
UPDATE L_RASH_LOC_GEN_GROUP SET RASH_LOC_GEN_KEY_MAX_VAL=(select max(RASH_LOC_GEN_KEY) from nbs_rdb.L_RASH_LOC_GEN);
UPDATE L_RASH_LOC_GEN_GROUP SET D_RASH_LOC_GEN_KEY_MAX_VAL=(select max(D_RASH_LOC_GEN_KEY) from nbs_rdb.L_RASH_LOC_GEN);
UPDATE L_RASH_LOC_GEN_GROUP SET D_RASH_LOC_GEN_GROUP_KEY_MAX_VAL=(select max(D_RASH_LOC_GEN_GROUP_KEY) from nbs_rdb.L_RASH_LOC_GEN);
QUIT;
PROC SQL;
CREATE TABLE L_RASH_LOC_GEN AS 
   SELECT L_RASH_LOC_GEN_GROUP.VAR_PAM_UID,  NBS_Case_Answer_UID, L_RASH_LOC_GEN_BASE.VAR_PAM_UID as D_RASH_LOC_GEN_UID, L_RASH_LOC_GEN_BASE.D_RASH_LOC_GEN_KEY,
			D_RASH_LOC_GEN_GROUP_KEY,RASH_LOC_GEN_KEY_MAX_VAL,D_RASH_LOC_GEN_KEY_MAX_VAL, D_RASH_LOC_GEN_GROUP_KEY_MAX_VAL
	   FROM   L_RASH_LOC_GEN_GROUP LEFT OUTER JOIN L_RASH_LOC_GEN_BASE
           ON L_RASH_LOC_GEN_BASE.VAR_PAM_UID=L_RASH_LOC_GEN_GROUP.VAR_PAM_UID;
QUIT;
 %assign_key2 (L_RASH_LOC_GEN, RASH_LOC_GEN_KEY);
DATA L_RASH_LOC_GEN;
SET L_RASH_LOC_GEN;
IF D_RASH_LOC_GEN_GROUP_KEY =.  THEN 
		D_RASH_LOC_GEN_GROUP_KEY= 1;
IF D_RASH_LOC_GEN_KEY =.  THEN 
		D_RASH_LOC_GEN_KEY= 1;
if RASH_LOC_GEN_KEY_MAX_VAL  ~=. then 
RASH_LOC_GEN_KEY= RASH_LOC_GEN_KEY+RASH_LOC_GEN_KEY_MAX_VAL;
if D_RASH_LOC_GEN_KEY_MAX_VAL  ~=. then 
D_RASH_LOC_GEN_KEY= D_RASH_LOC_GEN_KEY+D_RASH_LOC_GEN_KEY_MAX_VAL;
if D_RASH_LOC_GEN_GROUP_KEY_MAX_VAL  ~=. then 
D_RASH_LOC_GEN_GROUP_KEY= D_RASH_LOC_GEN_GROUP_KEY+D_RASH_LOC_GEN_GROUP_KEY_MAX_VAL;

RUN;
PROC SORT DATA=L_RASH_LOC_GEN nodupkey; BY RASH_LOC_GEN_KEY; RUN;
%DBLOAD (L_RASH_LOC_GEN, L_RASH_LOC_GEN);

PROC SQL;
CREATE TABLE L_PCR_SOURCE_GROUP_BASE AS
	SELECT DISTINCT VAR_PAM_UID  FROM S_PCR_SOURCE;
QUIT;
 %ASSIGN_KEY (L_PCR_SOURCE_GROUP_BASE, D_PCR_SOURCE_GROUP_KEY);
PROC SQL;
CREATE TABLE L_PCR_SOURCE_BASE AS
	SELECT VAR_PAM_UID,NBS_Case_Answer_UID FROM S_PCR_SOURCE;
 QUIT;
 %ASSIGN_KEY (L_PCR_SOURCE_BASE, D_PCR_SOURCE_KEY);
PROC SQL;
CREATE TABLE L_PCR_SOURCE_GROUP AS 
   SELECT S_VAR_PAM.VAR_PAM_UID,L_PCR_SOURCE_GROUP_BASE.VAR_PAM_UID as D_PCR_SOURCE_UID 'D_PCR_SOURCE_GROUP_KEY',
L_PCR_SOURCE_GROUP_BASE.D_PCR_SOURCE_GROUP_KEY
	   FROM   S_VAR_PAM LEFT OUTER JOIN L_PCR_SOURCE_GROUP_BASE
           ON L_PCR_SOURCE_GROUP_BASE.VAR_PAM_UID=S_VAR_PAM.VAR_PAM_UID;
ALTER TABLE L_PCR_SOURCE_GROUP ADD PCR_SOURCE_KEY_MAX_VAL NUMERIC;
ALTER TABLE L_PCR_SOURCE_GROUP ADD D_PCR_SOURCE_KEY_MAX_VAL NUMERIC;
ALTER TABLE L_PCR_SOURCE_GROUP ADD D_PCR_SOURCE_GROUP_KEY_MAX_VAL NUMERIC;
UPDATE L_PCR_SOURCE_GROUP SET PCR_SOURCE_KEY_MAX_VAL=(select max(PCR_SOURCE_KEY) from nbs_rdb.L_PCR_SOURCE);
UPDATE L_PCR_SOURCE_GROUP SET D_PCR_SOURCE_KEY_MAX_VAL=(select max(D_PCR_SOURCE_KEY) from nbs_rdb.L_PCR_SOURCE);
UPDATE L_PCR_SOURCE_GROUP SET D_PCR_SOURCE_GROUP_KEY_MAX_VAL=(select max(D_PCR_SOURCE_GROUP_KEY) from nbs_rdb.L_PCR_SOURCE);
QUIT;
PROC SQL;
CREATE TABLE L_PCR_SOURCE AS 
   SELECT L_PCR_SOURCE_GROUP.VAR_PAM_UID,  NBS_Case_Answer_UID, L_PCR_SOURCE_BASE.VAR_PAM_UID as D_PCR_SOURCE_UID, L_PCR_SOURCE_BASE.D_PCR_SOURCE_KEY,
			D_PCR_SOURCE_GROUP_KEY,PCR_SOURCE_KEY_MAX_VAL,D_PCR_SOURCE_KEY_MAX_VAL, D_PCR_SOURCE_GROUP_KEY_MAX_VAL
	   FROM   L_PCR_SOURCE_GROUP LEFT OUTER JOIN L_PCR_SOURCE_BASE
           ON L_PCR_SOURCE_BASE.VAR_PAM_UID=L_PCR_SOURCE_GROUP.VAR_PAM_UID;
QUIT;
 %assign_key2 (L_PCR_SOURCE, PCR_SOURCE_KEY);
DATA L_PCR_SOURCE;
SET L_PCR_SOURCE;
IF D_PCR_SOURCE_GROUP_KEY =.  THEN 
		D_PCR_SOURCE_GROUP_KEY= 1;
IF D_PCR_SOURCE_KEY =.  THEN 
		D_PCR_SOURCE_KEY= 1;
if PCR_SOURCE_KEY_MAX_VAL  ~=. then 
PCR_SOURCE_KEY= PCR_SOURCE_KEY+PCR_SOURCE_KEY_MAX_VAL;
if D_PCR_SOURCE_KEY_MAX_VAL  ~=. then 
D_PCR_SOURCE_KEY= D_PCR_SOURCE_KEY+D_PCR_SOURCE_KEY_MAX_VAL;
if D_PCR_SOURCE_GROUP_KEY_MAX_VAL  ~=. then 
D_PCR_SOURCE_GROUP_KEY= D_PCR_SOURCE_GROUP_KEY+D_PCR_SOURCE_GROUP_KEY_MAX_VAL;

RUN;
PROC SORT DATA=L_PCR_SOURCE nodupkey; BY PCR_SOURCE_KEY; RUN;
%DBLOAD (L_PCR_SOURCE, L_PCR_SOURCE);
%mend VAR_LOOKUP;
PROC SQL;
CREATE TABLE VAR_PORT_IND 
AS
select PORT_REQ_IND_CD from nbs_srt.condition_code where condition_cd ='10030';
QUIT;
DATA _null_;
  set VAR_PORT_IND;
  if PORT_REQ_IND_CD='T' then call execute('%VAR_LOOKUP');
RUN;
