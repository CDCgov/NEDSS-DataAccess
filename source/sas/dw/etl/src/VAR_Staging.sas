%macro VAR_STAGING;
PROC SQL;
UPDATE ACTIVITY_LOG_DETAIL SET 
START_DATE=DATETIME();
CREATE TABLE PHC_UIDS AS 
select public_health_case_UID LENGTH =8 AS VAR_PAM_UID 'VAR_PAM_UID' from nbs_ods.public_health_case where cd in (
select  condition_cd from nbs_srt.condition_code where investigation_form_cd = 'INV_FORM_VAR'
);

CREATE TABLE S_VAR_PAM_SET_BASE AS
SELECT  act_uid LENGTH =8 AS VAR_PAM_UID 'VAR_PAM_UID', CODE_SET_GROUP_ID, 
DATAMART_COLUMN_NM , ANSWER_TXT, RECORD_STATUS_CD, PA.LAST_CHG_TIME
FROM  NBS_ODS.NBS_QUESTION PQ
JOIN NBS_ODS.NBS_Case_Answer PA ON PQ.NBS_QUESTION_UID =PA.NBS_QUESTION_UID
WHERE PQ.nbs_question_uid in ( select nbs_question_uid from   nbs_ods.nbs_ui_metadata
where investigation_form_cd='INV_FORM_VAR' 
and ldf_status_cd is null 
and nbs_ui_component_uid <> 1013
and nbs_question_uid is not null)
AND DATAMART_COLUMN_NM IS NOT NULL
AND PA.RECORD_STATUS_CD <> 'LOG_DEL'
AND PQ.data_location = 'NBS_Case_Answer.answer_txt'	
AND DATAMART_COLUMN_NM <> 'N/A'
/*AND PA.last_chg_time>(select start_date from ACTIVITY_LOG_MASTER_LAST)*/
GROUP BY ACT_UID, DATAMART_COLUMN_NM ;

CREATE TABLE S_VAR_PAM_SET_INT AS 
SELECT A.VAR_PAM_UID, CODE_SET_GROUP_ID, 
DATAMART_COLUMN_NM , ANSWER_TXT, RECORD_STATUS_CD, LAST_CHG_TIME
FROM PHC_UIDS a LEFT OUTER JOIN S_VAR_PAM_SET_BASE B
on PHC_UIDS.VAR_PAM_UID= B.VAR_PAM_UID;
QUIT;
PROC SQL;
CREATE TABLE S_VAR_PAM_SET AS 
	SELECT * FROM S_VAR_PAM_SET_INT VAR
		LEFT JOIN NBS_SRT.CODESET_GROUP_METADATA METADATA
		ON METADATA.CODE_SET_GROUP_ID=VAR.CODE_SET_GROUP_ID;
QUIT;
PROC SQL;
CREATE TABLE S_VAR_PAM_SET_TRANSLATED AS 
	SELECT 	VAR_PAM_UID, VAR.CODE_SET_GROUP_ID, VAR.DATAMART_COLUMN_NM,
			ANSWER_TXT, VAR.CODE_SET_NM, VAR.RECORD_STATUS_CD, VAR.LAST_CHG_TIME,
			CODE,CODE_SHORT_DESC_TXT AS CODE_SHORT_DESC_TXT
	FROM	S_VAR_PAM_SET VAR
			LEFT JOIN NBS_SRT.CODE_VALUE_GENERAL CVG
			ON CVG.CODE_SET_NM=VAR.CODE_SET_NM
			AND CVG.CODE=VAR.ANSWER_TXT;
QUIT;
DATA S_VAR_PAM_SET_CVG;
SET S_VAR_PAM_SET_TRANSLATED;
IF CODE_SET_GROUP_ID=''  AND CODE_SET_NM NOT IN ('STATE_CCD','COUNTY_CCD', 'PSL_CNTRY','S_JURDIC_C', 'S_PROGRA_C') THEN ANSWER_TXT= ANSWER_TXT;
ELSE IF CODE_SET_NM NOT IN ('STATE_CCD','COUNTY_CCD', 'PSL_CNTRY','S_JURDIC_C', 'S_PROGRA_C')
THEN ANSWER_TXT= CODE_SHORT_DESC_TXT;
RUN;
PROC SQL;
CREATE TABLE S_VAR_PAM_SET_CVG AS 
	SELECT 	VAR_PAM_UID, CODE_SET_GROUP_ID, VAR.DATAMART_COLUMN_NM,
			ANSWER_TXT, VAR.CODE_SET_NM, VAR.RECORD_STATUS_CD,VAR.LAST_CHG_TIME,
			VAR.CODE,CVG.CODE_DESC_TXT AS CODE_DESC_TXT
	FROM	S_VAR_PAM_SET_CVG VAR
			LEFT JOIN NBS_SRT.COUNTRY_CODE CVG
			ON CVG.CODE=VAR.ANSWER_TXT
			AND VAR.CODE_SET_NM ='PSL_CNTRY';
QUIT;
DATA S_VAR_PAM_SET_CVG;
SET S_VAR_PAM_SET_CVG;
IF CODE_SET_GROUP_ID=''  AND CODE_SET_NM  NOT IN ('PSL_CNTRY') THEN ANSWER_TXT= ANSWER_TXT;
ELSE IF CODE_SET_NM ='PSL_CNTRY' THEN ANSWER_TXT= CODE_DESC_TXT;
RUN;
PROC SORT DATA=S_VAR_PAM_SET_CVG; BY VAR_PAM_UID; RUN;
proc sql;
create table S_PAM_CHG_TIME as select distinct VAR_PAM_UID, LAST_CHG_TIME FROM S_VAR_PAM_SET_CVG;
quit;

PROC TRANSPOSE DATA=S_VAR_PAM_SET_CVG OUT=S_VAR_PAM1;
    BY VAR_PAM_UID;
	ID DATAMART_COLUMN_NM;
	VAR ANSWER_TXT;
RUN;
data S_VAR_PAM2;
set S_VAR_PAM1;
	
LENGTH VACCINE_TYPE_21 $200;
LENGTH VACCINE_MANUFACTURER_11 $200;
LENGTH EPI_LINKED1 $200;
LENGTH PCR_TEST1 $200;
LENGTH VARICELLA_NO_VACCINE_REASON1 $200;
LENGTH SEROLOGY_TEST1 $200;
LENGTH DFA_TEST_RESULT1 $200;
LENGTH HEALTHCARE_WORKER1 $200;
LENGTH IGG_TEST_WHOLE_CELL_MFGR1 $200;
LENGTH PREVIOUS_DIAGNOSIS_AGE_UNIT1 $200;
LENGTH PREGNANT_TRIMESTER1 $200;
LENGTH PREVIOUS_DIAGNOSIS1 $200;
LENGTH LAB_TESTING_OTHER_SPECIFY1 $200;
LENGTH IGM_TEST_TYPE1 $200;
LENGTH FEVER_TEMPERATURE_UNIT1 $200;
LENGTH IGG_TEST1 $200;
LENGTH MEDICATION_NAME1 $200;
LENGTH VACCINE_MANUFACTURER_31 $200;
LENGTH COMPLICATIONS_PNEUMONIA1 $200;
LENGTH DFA_TEST1 $200;
LENGTH VESICLES1 $200;
LENGTH VARICELLA_NO_2NDVACCINE_REASON1 $200;
LENGTH IGM_TEST1 $200;
LENGTH VACCINE_TYPE_41 $200;
LENGTH COMPLICATIONS_CEREB_ATAXIA1 $200;
LENGTH FEVER1 $200;
LENGTH STRAIN_TYPE1 $200;
LENGTH LAB_TESTING_OTHER_RESULT1 $200;
LENGTH CROPS_WAVES1 $200;
LENGTH TREATED1 $200;
LENGTH RASH_LOCATION1 $200;
LENGTH PATIENT_VISIT_HC_PROVIDER1 $200;
LENGTH RASH_CRUST1 $200;
LENGTH TRANSMISSION_SETTING1 $200;
LENGTH CULTURE_TEST_RESULT1 $200;
LENGTH HEMORRHAGIC1 $200;
LENGTH CULTURE_TEST1 $200;
LENGTH VACCINE_TYPE_11 $200;
LENGTH PCR_TEST_RESULT1 $200;
LENGTH LAB_TESTING_OTHER1 $200;
LENGTH COMPLICATIONS1 $200;
LENGTH COMPLICATIONS_PNEU_DIAG_BY1 $200;
LENGTH VACCINE_TYPE_51 $200;
LENGTH IGG_TEST_TYPE1 $200;
LENGTH EPI_LINKED_CASE_TYPE1 $200;
LENGTH VACCINE_MANUFACTURER_41 $200;
LENGTH MACULAR_PAPULAR1 $200;
LENGTH VACCINE_TYPE_31 $200;
LENGTH PREVIOUS_DIAGNOSIS_BY1 $200;
LENGTH VESICULAR1 $200;
LENGTH VACCINE_MANUFACTURER_51 $200;
LENGTH DEATH_VARICELLA1 $200;
LENGTH IGG_TEST_GP_ELISA_MFGR1 $200;
LENGTH VARICELLA_VACCINE1 $200;
LENGTH IGM_TEST_RESULT1 $200;
LENGTH IMMUNOCOMPROMISED1 $200;
LENGTH COMPLICATIONS_OTHER1 $200;
LENGTH ITCHY1 $200;
LENGTH PATIENT_BIRTH_COUNTRY1 $200;
LENGTH DEATH_AUTOPSY1 $200;
LENGTH COMPLICATIONS_ENCEPHALITIS1 $200;
LENGTH COMPLICATIONS_HEMORRHAGIC1 $200;
LENGTH COMPLICATIONS_SKIN_INFECTION1 $200;
LENGTH COMPLICATIONS_DEHYDRATION1 $200;
LENGTH VACCINE_MANUFACTURER_21 $200;
LENGTH GENOTYPING_SENT_TO_CDC1 $200;
LENGTH STRAIN_IDENTIFICATION_SENT1 $200;
LENGTH IGG_TEST_CONVALESCENT_RESULT1 $200;
LENGTH IGG_TEST_ACUTE_RESULT1 $200;
LENGTH LAB_TESTING1 $200;
LENGTH PAPULES1 $200;
LENGTH SCABS1 $200;
LENGTH LESIONS_TOTAL1 $200;
LENGTH MACULES1 $200;
LENGTH PCR_TEST_SOURCE_OTHER1 $200;
LENGTH VARICELLA_NO_2NDVACCINE_OTHER1 $200;
LENGTH VACCINE_LOT_51 $200;
LENGTH RASH_LOCATION_DERMATOME1 $200;
LENGTH IGG_TEST_OTHER1 $200;
LENGTH VACCINE_LOT_41 $200;
LENGTH VACCINE_LOT_11 $200;
LENGTH DEATH_CAUSE1 $200;
LENGTH VARICELLA_NO_VACCINE_OTHER1 $200;
LENGTH IGG_TEST_ACUTE_VALUE1 $200;
LENGTH TRANSMISSION_SETTING_OTHER1 $200;
LENGTH IMMUNOCOMPROMISED_CONDITION1 $200;
LENGTH LAB_TESTING_OTHER_RESULT_VALUE1 $200;
LENGTH VACCINE_LOT_31 $200;
LENGTH MEDICATION_NAME_OTHER1 $200;
LENGTH PREVIOUS_DIAGNOSIS_BY_OTHER1 $200;
LENGTH RASH_LOCATION_OTHER1 $200;
LENGTH IGG_TEST_CONVALESCENT_VALUE1 $200;
LENGTH IGM_TEST_TYPE_OTHER1 $200;
LENGTH PCR_TEST_RESULT_OTHER1 $200;
LENGTH VACCINE_LOT_21 $200;
LENGTH IGM_TEST_RESULT_VALUE1 $200;
LENGTH COMPLICATIONS_OTHER_SPECIFY1 $200;

IGG_TEST_ACUTE_DATE1=INPUT(IGG_TEST_ACUTE_DATE,  ANYDTDTM32.);
VACCINE_DATE_41=INPUT(VACCINE_DATE_4,  ANYDTDTM32.);
PCR_TEST_DATE1=INPUT(PCR_TEST_DATE,  ANYDTDTM32.);
VACCINE_DATE_21=INPUT(VACCINE_DATE_2,  ANYDTDTM32.);
MEDICATION_START_DATE1=INPUT(MEDICATION_START_DATE,  ANYDTDTM32.);
DFA_TEST_DATE1=INPUT(DFA_TEST_DATE,  ANYDTDTM32.);
VACCINE_DATE_31=INPUT(VACCINE_DATE_3,  ANYDTDTM32.);
IGG_TEST_CONVALESCENT_DATE1=INPUT(IGG_TEST_CONVALESCENT_DATE,  ANYDTDTM32.);
MEDICATION_STOP_DATE1=INPUT(MEDICATION_STOP_DATE,  ANYDTDTM32.);
VACCINE_DATE_11=INPUT(VACCINE_DATE_1,  ANYDTDTM32.);
LAB_TESTING_OTHER_DATE1=INPUT(LAB_TESTING_OTHER_DATE,  ANYDTDTM32.);
CULTURE_TEST_DATE1=INPUT(CULTURE_TEST_DATE,  ANYDTDTM32.);
GENOTYPING_SENT_TO_CDC_DATE1=INPUT(GENOTYPING_SENT_TO_CDC_DATE,  ANYDTDTM32.);
FEVER_ONSET1=INPUT(FEVER_ONSET_DATE,  ANYDTDTM32.);
RASH_ONSET_DATE1=INPUT(RASH_ONSET_DATE,  ANYDTDTM32.);
DEATH_VARICELLA_DATE1=INPUT(DEATH_VARICELLA_DATE,  ANYDTDTM32.);
IGM_TEST_DATE1=INPUT(IGM_TEST_DATE,  ANYDTDTM32.);
VACCINE_DATE_51=INPUT(VACCINE_DATE_5,  ANYDTDTM32.);

VARICELLA_VACCINE_DOSES_NUMBER1=INPUT(VARICELLA_VACCINE_DOSES_NUMBER,  COMMA20.);
FEVER_DURATION_DAYS1=INPUT(FEVER_DURATION_DAYS,  COMMA20.);
PREVIOUS_DIAGNOSIS_AGE1=INPUT(PREVIOUS_DIAGNOSIS_AGE,  COMMA20.);
LESIONS_TOTAL_LT501=INPUT(LESIONS_TOTAL_LT50,  COMMA20.);
VESICLES_NUMBER1=INPUT(VESICLES_NUMBER,  COMMA20.);
MACULES_NUMBER1=INPUT(MACULES_NUMBER,  COMMA20.);
PAPULES_NUMBER1=INPUT(PAPULES_NUMBER,  COMMA20.);

PREGNANT_WEEKS1=INPUT(PREGNANT_WEEKS,  COMMA20.);
RASH_CRUSTED_DAYS1=INPUT(RASH_CRUSTED_DAYS,  COMMA20.);
RASH_DURATION_DAYS1=INPUT(RASH_DURATION_DAYS,  COMMA20.);
FEVER_TEMPERATURE1=INPUT(FEVER_TEMPERATURE,  COMMA20.);

VACCINE_TYPE_21= VACCINE_TYPE_2;
VACCINE_MANUFACTURER_11= VACCINE_MANUFACTURER_1;
EPI_LINKED1= EPI_LINKED;
PCR_TEST1= PCR_TEST;
VARICELLA_NO_VACCINE_REASON1= VARICELLA_NO_VACCINE_REASON;
SEROLOGY_TEST1= SEROLOGY_TEST;
DFA_TEST_RESULT1= DFA_TEST_RESULT;
HEALTHCARE_WORKER1= HEALTHCARE_WORKER;
IGG_TEST_WHOLE_CELL_MFGR1= IGG_TEST_WHOLE_CELL_MFGR;
PREVIOUS_DIAGNOSIS_AGE_UNIT1= PREVIOUS_DIAGNOSIS_AGE_UNIT;
PREGNANT_TRIMESTER1= PREGNANT_TRIMESTER;
PREVIOUS_DIAGNOSIS1= PREVIOUS_DIAGNOSIS;
LAB_TESTING_OTHER_SPECIFY1= LAB_TESTING_OTHER_SPECIFY;
IGM_TEST_TYPE1= IGM_TEST_TYPE;
FEVER_TEMPERATURE_UNIT1= FEVER_TEMPERATURE_UNIT;
IGG_TEST1= IGG_TEST;
MEDICATION_NAME1= MEDICATION_NAME;
VACCINE_MANUFACTURER_31= VACCINE_MANUFACTURER_3;
COMPLICATIONS_PNEUMONIA1= COMPLICATIONS_PNEUMONIA;
DFA_TEST1= DFA_TEST;
VESICLES1= VESICLES;
VARICELLA_NO_2NDVACCINE_REASON1= VARICELLA_NO_2NDVACCINE_REASON;
IGM_TEST1= IGM_TEST;
VACCINE_TYPE_41= VACCINE_TYPE_4;
COMPLICATIONS_CEREB_ATAXIA1= COMPLICATIONS_CEREB_ATAXIA;
FEVER1= FEVER;
STRAIN_TYPE1= STRAIN_TYPE;
LAB_TESTING_OTHER_RESULT1= LAB_TESTING_OTHER_RESULT;
CROPS_WAVES1= CROPS_WAVES;
TREATED1= TREATED;
RASH_LOCATION1= RASH_LOCATION;
PATIENT_VISIT_HC_PROVIDER1= PATIENT_VISIT_HC_PROVIDER;
RASH_CRUST1= RASH_CRUST;
TRANSMISSION_SETTING1= TRANSMISSION_SETTING;
CULTURE_TEST_RESULT1= CULTURE_TEST_RESULT;
HEMORRHAGIC1= HEMORRHAGIC;
CULTURE_TEST1= CULTURE_TEST;
VACCINE_TYPE_11= VACCINE_TYPE_1;
PCR_TEST_RESULT1= PCR_TEST_RESULT;
LAB_TESTING_OTHER1= LAB_TESTING_OTHER;
COMPLICATIONS1= COMPLICATIONS;
COMPLICATIONS_PNEU_DIAG_BY1= COMPLICATIONS_PNEU_DIAG_BY;
VACCINE_TYPE_51= VACCINE_TYPE_5;
IGG_TEST_TYPE1= IGG_TEST_TYPE;
EPI_LINKED_CASE_TYPE1= EPI_LINKED_CASE_TYPE;
VACCINE_MANUFACTURER_41= VACCINE_MANUFACTURER_4;
MACULAR_PAPULAR1= MACULAR_PAPULAR;
VACCINE_TYPE_31= VACCINE_TYPE_3;
PREVIOUS_DIAGNOSIS_BY1= PREVIOUS_DIAGNOSIS_BY;
VESICULAR1= VESICULAR;
VACCINE_MANUFACTURER_51= VACCINE_MANUFACTURER_5;
DEATH_VARICELLA1= DEATH_VARICELLA;
IGG_TEST_GP_ELISA_MFGR1= IGG_TEST_GP_ELISA_MFGR;
VARICELLA_VACCINE1= VARICELLA_VACCINE;
IGM_TEST_RESULT1= IGM_TEST_RESULT;
IMMUNOCOMPROMISED1= IMMUNOCOMPROMISED;
COMPLICATIONS_OTHER1= COMPLICATIONS_OTHER;
ITCHY1= ITCHY;
PATIENT_BIRTH_COUNTRY1= PATIENT_BIRTH_COUNTRY;
DEATH_AUTOPSY1= DEATH_AUTOPSY;
COMPLICATIONS_ENCEPHALITIS1= COMPLICATIONS_ENCEPHALITIS;
COMPLICATIONS_HEMORRHAGIC1= COMPLICATIONS_HEMORRHAGIC;
COMPLICATIONS_SKIN_INFECTION1= COMPLICATIONS_SKIN_INFECTION;
COMPLICATIONS_DEHYDRATION1= COMPLICATIONS_DEHYDRATION;
VACCINE_MANUFACTURER_21= VACCINE_MANUFACTURER_2;
GENOTYPING_SENT_TO_CDC1= GENOTYPING_SENT_TO_CDC;
STRAIN_IDENTIFICATION_SENT1= STRAIN_IDENTIFICATION_SENT;
IGG_TEST_CONVALESCENT_RESULT1= IGG_TEST_CONVALESCENT_RESULT;
IGG_TEST_ACUTE_RESULT1= IGG_TEST_ACUTE_RESULT;
LAB_TESTING1= LAB_TESTING;
PAPULES1= PAPULES;
SCABS1= SCABS;
LESIONS_TOTAL1= LESIONS_TOTAL;
MACULES1= MACULES;
PCR_TEST_SOURCE_OTHER1= PCR_TEST_SOURCE_OTHER;
VARICELLA_NO_2NDVACCINE_OTHER1= VARICELLA_NO_2NDVACCINE_OTHER;
VACCINE_LOT_51= VACCINE_LOT_5;
RASH_LOCATION_DERMATOME1= RASH_LOCATION_DERMATOME;
IGG_TEST_OTHER1= IGG_TEST_OTHER;
VACCINE_LOT_41= VACCINE_LOT_4;
VACCINE_LOT_11= VACCINE_LOT_1;
DEATH_CAUSE1= DEATH_CAUSE;
VARICELLA_NO_VACCINE_OTHER1= VARICELLA_NO_VACCINE_OTHER;
IGG_TEST_ACUTE_VALUE1= IGG_TEST_ACUTE_VALUE;
TRANSMISSION_SETTING_OTHER1= TRANSMISSION_SETTING_OTHER;
IMMUNOCOMPROMISED_CONDITION1= IMMUNOCOMPROMISED_CONDITION;
LAB_TESTING_OTHER_RESULT_VALUE1= LAB_TESTING_OTHER_RESULT_VALUE;
VACCINE_LOT_31= VACCINE_LOT_3;
MEDICATION_NAME_OTHER1= MEDICATION_NAME_OTHER;
PREVIOUS_DIAGNOSIS_BY_OTHER1= PREVIOUS_DIAGNOSIS_BY_OTHER;
RASH_LOCATION_OTHER1= RASH_LOCATION_OTHER;
IGG_TEST_CONVALESCENT_VALUE1= IGG_TEST_CONVALESCENT_VALUE;
IGM_TEST_TYPE_OTHER1= IGM_TEST_TYPE_OTHER;
PCR_TEST_RESULT_OTHER1= PCR_TEST_RESULT_OTHER;
VACCINE_LOT_21= VACCINE_LOT_2;
IGM_TEST_RESULT_VALUE1= IGM_TEST_RESULT_VALUE;
COMPLICATIONS_OTHER_SPECIFY1= COMPLICATIONS_OTHER_SPECIFY;
DROP VACCINE_TYPE_2;
DROP VACCINE_MANUFACTURER_1;
DROP EPI_LINKED;
DROP PCR_TEST;
DROP VARICELLA_NO_VACCINE_REASON;
DROP SEROLOGY_TEST;
DROP DFA_TEST_RESULT;
DROP HEALTHCARE_WORKER;
DROP IGG_TEST_WHOLE_CELL_MFGR;
DROP PREVIOUS_DIAGNOSIS_AGE_UNIT;
DROP PREGNANT_TRIMESTER;
DROP PREVIOUS_DIAGNOSIS;
DROP LAB_TESTING_OTHER_SPECIFY;
DROP IGM_TEST_TYPE;
DROP FEVER_TEMPERATURE_UNIT;
DROP IGG_TEST;
DROP MEDICATION_NAME;
DROP VACCINE_MANUFACTURER_3;
DROP COMPLICATIONS_PNEUMONIA;
DROP DFA_TEST;
DROP VESICLES;
DROP VARICELLA_NO_2NDVACCINE_REASON;
DROP IGM_TEST;
DROP VACCINE_TYPE_4;
DROP COMPLICATIONS_CEREB_ATAXIA;
DROP FEVER;
DROP STRAIN_TYPE;
DROP LAB_TESTING_OTHER_RESULT;
DROP CROPS_WAVES;
DROP TREATED;
DROP RASH_LOCATION;
DROP PATIENT_VISIT_HC_PROVIDER;
DROP RASH_CRUST;
DROP TRANSMISSION_SETTING;
DROP CULTURE_TEST_RESULT;
DROP HEMORRHAGIC;
DROP CULTURE_TEST;
DROP VACCINE_TYPE_1;
DROP PCR_TEST_RESULT;
DROP LAB_TESTING_OTHER;
DROP COMPLICATIONS;
DROP COMPLICATIONS_PNEU_DIAG_BY;
DROP VACCINE_TYPE_5;
DROP IGG_TEST_TYPE;
DROP EPI_LINKED_CASE_TYPE;
DROP VACCINE_MANUFACTURER_4;
DROP MACULAR_PAPULAR;
DROP VACCINE_TYPE_3;
DROP PREVIOUS_DIAGNOSIS_BY;
DROP VESICULAR;
DROP VACCINE_MANUFACTURER_5;
DROP DEATH_VARICELLA;
DROP IGG_TEST_GP_ELISA_MFGR;
DROP VARICELLA_VACCINE;
DROP IGM_TEST_RESULT;
DROP IMMUNOCOMPROMISED;
DROP COMPLICATIONS_OTHER;
DROP ITCHY;
DROP PATIENT_BIRTH_COUNTRY;
DROP DEATH_AUTOPSY;
DROP COMPLICATIONS_ENCEPHALITIS;
DROP COMPLICATIONS_HEMORRHAGIC;
DROP COMPLICATIONS_SKIN_INFECTION;
DROP COMPLICATIONS_DEHYDRATION;
DROP VACCINE_MANUFACTURER_2;
DROP GENOTYPING_SENT_TO_CDC;
DROP STRAIN_IDENTIFICATION_SENT;
DROP IGG_TEST_CONVALESCENT_RESULT;
DROP IGG_TEST_ACUTE_RESULT;
DROP LAB_TESTING;
DROP PAPULES;
DROP SCABS;
DROP LESIONS_TOTAL;
DROP MACULES;
DROP IGG_TEST_ACUTE_DATE;
DROP VACCINE_DATE_4;
DROP PCR_TEST_DATE;
DROP VACCINE_DATE_2;
DROP MEDICATION_START_DATE;
DROP DFA_TEST_DATE;
DROP VACCINE_DATE_3;
DROP IGG_TEST_CONVALESCENT_DATE;
DROP MEDICATION_STOP_DATE;
DROP VACCINE_DATE_1;
DROP LAB_TESTING_OTHER_DATE;
DROP CULTURE_TEST_DATE;
DROP GENOTYPING_SENT_TO_CDC_DATE;
DROP FEVER_ONSET_DATE;
DROP RASH_ONSET_DATE;
DROP DEATH_VARICELLA_DATE;
DROP IGM_TEST_DATE;
DROP VACCINE_DATE_5;
DROP VARICELLA_VACCINE_DOSES_NUMBER;
DROP FEVER_DURATION_DAYS;
DROP PREVIOUS_DIAGNOSIS_AGE;
DROP LESIONS_TOTAL_LT50;
DROP VESICLES_NUMBER;
DROP MACULES_NUMBER;
DROP PAPULES_NUMBER;
DROP PREGNANT_WEEKS;
DROP RASH_CRUSTED_DAYS;
DROP RASH_DURATION_DAYS;
DROP FEVER_TEMPERATURE;
DROP PCR_TEST_SOURCE_OTHER;
DROP VARICELLA_NO_2NDVACCINE_OTHER;
DROP VACCINE_LOT_5;
DROP RASH_LOCATION_DERMATOME;
DROP IGG_TEST_OTHER;
DROP VACCINE_LOT_4;
DROP VACCINE_LOT_1;
DROP DEATH_CAUSE;
DROP VARICELLA_NO_VACCINE_OTHER;
DROP IGG_TEST_ACUTE_VALUE;
DROP TRANSMISSION_SETTING_OTHER;
DROP IMMUNOCOMPROMISED_CONDITION;
DROP LAB_TESTING_OTHER_RESULT_VALUE;
DROP VACCINE_LOT_3;
DROP MEDICATION_NAME_OTHER;
DROP PREVIOUS_DIAGNOSIS_BY_OTHER;
DROP RASH_LOCATION_OTHER;
DROP IGG_TEST_CONVALESCENT_VALUE;
DROP IGM_TEST_TYPE_OTHER;
DROP PCR_TEST_RESULT_OTHER;
DROP VACCINE_LOT_2;
DROP IGM_TEST_RESULT_VALUE;
DROP COMPLICATIONS_OTHER_SPECIFY;
run;
proc sql;
create table S_VAR_PAM as
select 
VAR_PAM_UID,
VACCINE_TYPE_21 AS VACCINE_TYPE_2 'VACCINE_TYPE_2',
VACCINE_MANUFACTURER_11 AS VACCINE_MANUFACTURER_1 'VACCINE_MANUFACTURER_1',
EPI_LINKED1 AS EPI_LINKED 'EPI_LINKED',
PCR_TEST1 AS PCR_TEST 'PCR_TEST',
VARICELLA_NO_VACCINE_REASON1 AS VARICELLA_NO_VACCINE_REASON 'VARICELLA_NO_VACCINE_REASON',
SEROLOGY_TEST1 AS SEROLOGY_TEST 'SEROLOGY_TEST',
DFA_TEST_RESULT1 AS DFA_TEST_RESULT 'DFA_TEST_RESULT',
HEALTHCARE_WORKER1 AS HEALTHCARE_WORKER 'HEALTHCARE_WORKER',
IGG_TEST_WHOLE_CELL_MFGR1 AS IGG_TEST_WHOLE_CELL_MFGR 'IGG_TEST_WHOLE_CELL_MFGR',
PREVIOUS_DIAGNOSIS_AGE_UNIT1 AS PREVIOUS_DIAGNOSIS_AGE_UNIT 'PREVIOUS_DIAGNOSIS_AGE_UNIT',
PREGNANT_TRIMESTER1 AS PREGNANT_TRIMESTER 'PREGNANT_TRIMESTER',
PREVIOUS_DIAGNOSIS1 AS PREVIOUS_DIAGNOSIS 'PREVIOUS_DIAGNOSIS',
LAB_TESTING_OTHER_SPECIFY1 AS LAB_TESTING_OTHER_SPECIFY 'LAB_TESTING_OTHER_SPECIFY',
IGM_TEST_TYPE1 AS IGM_TEST_TYPE 'IGM_TEST_TYPE',
FEVER_TEMPERATURE_UNIT1 AS FEVER_TEMPERATURE_UNIT 'FEVER_TEMPERATURE_UNIT',
IGG_TEST1 AS IGG_TEST 'IGG_TEST',
MEDICATION_NAME1 AS MEDICATION_NAME 'MEDICATION_NAME',
VACCINE_MANUFACTURER_31 AS VACCINE_MANUFACTURER_3 'VACCINE_MANUFACTURER_3',
COMPLICATIONS_PNEUMONIA1 AS COMPLICATIONS_PNEUMONIA 'COMPLICATIONS_PNEUMONIA',
DFA_TEST1 AS DFA_TEST 'DFA_TEST',
VESICLES1 AS VESICLES 'VESICLES',
VARICELLA_NO_2NDVACCINE_REASON1 AS VARICELLA_NO_2NDVACCINE_REASON 'VARICELLA_NO_2NDVACCINE_REASON',
IGM_TEST1 AS IGM_TEST 'IGM_TEST',
VACCINE_TYPE_41 AS VACCINE_TYPE_4 'VACCINE_TYPE_4',
COMPLICATIONS_CEREB_ATAXIA1 AS COMPLICATIONS_CEREB_ATAXIA 'COMPLICATIONS_CEREB_ATAXIA',
FEVER1 AS FEVER 'FEVER',
STRAIN_TYPE1 AS STRAIN_TYPE 'STRAIN_TYPE',
LAB_TESTING_OTHER_RESULT1 AS LAB_TESTING_OTHER_RESULT 'LAB_TESTING_OTHER_RESULT',
CROPS_WAVES1 AS CROPS_WAVES 'CROPS_WAVES',
TREATED1 AS TREATED 'TREATED',
RASH_LOCATION1 AS RASH_LOCATION 'RASH_LOCATION',
PATIENT_VISIT_HC_PROVIDER1 AS PATIENT_VISIT_HC_PROVIDER 'PATIENT_VISIT_HC_PROVIDER',
RASH_CRUST1 AS RASH_CRUST 'RASH_CRUST',
TRANSMISSION_SETTING1 AS TRANSMISSION_SETTING 'TRANSMISSION_SETTING',
CULTURE_TEST_RESULT1 AS CULTURE_TEST_RESULT 'CULTURE_TEST_RESULT',
HEMORRHAGIC1 AS HEMORRHAGIC 'HEMORRHAGIC',
CULTURE_TEST1 AS CULTURE_TEST 'CULTURE_TEST',
VACCINE_TYPE_11 AS VACCINE_TYPE_1 'VACCINE_TYPE_1',
PCR_TEST_RESULT1 AS PCR_TEST_RESULT 'PCR_TEST_RESULT',
LAB_TESTING_OTHER1 AS LAB_TESTING_OTHER 'LAB_TESTING_OTHER',
COMPLICATIONS1 AS COMPLICATIONS 'COMPLICATIONS',
COMPLICATIONS_PNEU_DIAG_BY1 AS COMPLICATIONS_PNEU_DIAG_BY 'COMPLICATIONS_PNEU_DIAG_BY',
VACCINE_TYPE_51 AS VACCINE_TYPE_5 'VACCINE_TYPE_5',
IGG_TEST_TYPE1 AS IGG_TEST_TYPE 'IGG_TEST_TYPE',
EPI_LINKED_CASE_TYPE1 AS EPI_LINKED_CASE_TYPE 'EPI_LINKED_CASE_TYPE',
VACCINE_MANUFACTURER_41 AS VACCINE_MANUFACTURER_4 'VACCINE_MANUFACTURER_4',
MACULAR_PAPULAR1 AS MACULAR_PAPULAR 'MACULAR_PAPULAR',
VACCINE_TYPE_31 AS VACCINE_TYPE_3 'VACCINE_TYPE_3',
PREVIOUS_DIAGNOSIS_BY1 AS PREVIOUS_DIAGNOSIS_BY 'PREVIOUS_DIAGNOSIS_BY',
VESICULAR1 AS VESICULAR 'VESICULAR',
VACCINE_MANUFACTURER_51 AS VACCINE_MANUFACTURER_5 'VACCINE_MANUFACTURER_5',
DEATH_VARICELLA1 AS DEATH_VARICELLA 'DEATH_VARICELLA',
IGG_TEST_GP_ELISA_MFGR1 AS IGG_TEST_GP_ELISA_MFGR 'IGG_TEST_GP_ELISA_MFGR',
VARICELLA_VACCINE1 AS VARICELLA_VACCINE 'VARICELLA_VACCINE',
IGM_TEST_RESULT1 AS IGM_TEST_RESULT 'IGM_TEST_RESULT',
IMMUNOCOMPROMISED1 AS IMMUNOCOMPROMISED 'IMMUNOCOMPROMISED',
COMPLICATIONS_OTHER1 AS COMPLICATIONS_OTHER 'COMPLICATIONS_OTHER',
ITCHY1 AS ITCHY 'ITCHY',
PATIENT_BIRTH_COUNTRY1 AS PATIENT_BIRTH_COUNTRY 'PATIENT_BIRTH_COUNTRY',
DEATH_AUTOPSY1 AS DEATH_AUTOPSY 'DEATH_AUTOPSY',
COMPLICATIONS_ENCEPHALITIS1 AS COMPLICATIONS_ENCEPHALITIS 'COMPLICATIONS_ENCEPHALITIS',
COMPLICATIONS_HEMORRHAGIC1 AS COMPLICATIONS_HEMORRHAGIC 'COMPLICATIONS_HEMORRHAGIC',
COMPLICATIONS_SKIN_INFECTION1 AS COMPLICATIONS_SKIN_INFECTION 'COMPLICATIONS_SKIN_INFECTION',
COMPLICATIONS_DEHYDRATION1 AS COMPLICATIONS_DEHYDRATION 'COMPLICATIONS_DEHYDRATION',
VACCINE_MANUFACTURER_21 AS VACCINE_MANUFACTURER_2 'VACCINE_MANUFACTURER_2',
GENOTYPING_SENT_TO_CDC1 AS GENOTYPING_SENT_TO_CDC 'GENOTYPING_SENT_TO_CDC',
STRAIN_IDENTIFICATION_SENT1 AS STRAIN_IDENTIFICATION_SENT 'STRAIN_IDENTIFICATION_SENT',
IGG_TEST_CONVALESCENT_RESULT1 AS IGG_TEST_CONVALESCENT_RESULT 'IGG_TEST_CONVALESCENT_RESULT',
IGG_TEST_ACUTE_RESULT1 AS IGG_TEST_ACUTE_RESULT 'IGG_TEST_ACUTE_RESULT',
LAB_TESTING1 AS LAB_TESTING 'LAB_TESTING',
PAPULES1 AS PAPULES 'PAPULES',
SCABS1 AS SCABS 'SCABS',
LESIONS_TOTAL1 AS LESIONS_TOTAL 'LESIONS_TOTAL',
MACULES1 AS MACULES 'MACULES',
IGG_TEST_ACUTE_DATE1 AS IGG_TEST_ACUTE_DATE 'IGG_TEST_ACUTE_DATE',
VACCINE_DATE_41 AS VACCINE_DATE_4 'VACCINE_DATE_4',
PCR_TEST_DATE1 AS PCR_TEST_DATE 'PCR_TEST_DATE',
VACCINE_DATE_21 AS VACCINE_DATE_2 'VACCINE_DATE_2',
MEDICATION_START_DATE1 AS MEDICATION_START_DATE 'MEDICATION_START_DATE',
DFA_TEST_DATE1 AS DFA_TEST_DATE 'DFA_TEST_DATE',
VACCINE_DATE_31 AS VACCINE_DATE_3 'VACCINE_DATE_3',
IGG_TEST_CONVALESCENT_DATE1 AS IGG_TEST_CONVALESCENT_DATE 'IGG_TEST_CONVALESCENT_DATE',
MEDICATION_STOP_DATE1 AS MEDICATION_STOP_DATE 'MEDICATION_STOP_DATE',
VACCINE_DATE_11 AS VACCINE_DATE_1 'VACCINE_DATE_1',
LAB_TESTING_OTHER_DATE1 AS LAB_TESTING_OTHER_DATE 'LAB_TESTING_OTHER_DATE',
CULTURE_TEST_DATE1 AS CULTURE_TEST_DATE 'CULTURE_TEST_DATE',
GENOTYPING_SENT_TO_CDC_DATE1 AS GENOTYPING_SENT_TO_CDC_DATE 'GENOTYPING_SENT_TO_CDC_DATE',
FEVER_ONSET1 AS FEVER_ONSET_DATE 'FEVER_ONSET_DATE',
RASH_ONSET_DATE1 AS RASH_ONSET_DATE 'RASH_ONSET_DATE',
DEATH_VARICELLA_DATE1 AS DEATH_VARICELLA_DATE 'DEATH_VARICELLA_DATE',
IGM_TEST_DATE1 AS IGM_TEST_DATE 'IGM_TEST_DATE',
VACCINE_DATE_51 AS VACCINE_DATE_5 'VACCINE_DATE_5',
VARICELLA_VACCINE_DOSES_NUMBER1 AS VARICELLA_VACCINE_DOSES_NUMBER 'VARICELLA_VACCINE_DOSES_NUMBER',
FEVER_DURATION_DAYS1 AS FEVER_DURATION_DAYS 'FEVER_DURATION_DAYS',
PREVIOUS_DIAGNOSIS_AGE1 AS PREVIOUS_DIAGNOSIS_AGE 'PREVIOUS_DIAGNOSIS_AGE',
LESIONS_TOTAL_LT501 AS LESIONS_TOTAL_LT50 'LESIONS_TOTAL_LT50',
VESICLES_NUMBER1 AS VESICLES_NUMBER 'VESICLES_NUMBER',
MACULES_NUMBER1 AS MACULES_NUMBER 'MACULES_NUMBER',
PAPULES_NUMBER1 AS PAPULES_NUMBER 'PAPULES_NUMBER',
PREGNANT_WEEKS1 AS PREGNANT_WEEKS 'PREGNANT_WEEKS',
RASH_CRUSTED_DAYS1 AS RASH_CRUSTED_DAYS 'RASH_CRUSTED_DAYS',
RASH_DURATION_DAYS1 AS RASH_DURATION_DAYS 'RASH_DURATION_DAYS',
FEVER_TEMPERATURE1 AS FEVER_TEMPERATURE 'FEVER_TEMPERATURE',
PCR_TEST_SOURCE_OTHER1 AS PCR_TEST_SOURCE_OTHER 'PCR_TEST_SOURCE_OTHER',
VARICELLA_NO_2NDVACCINE_OTHER1 AS VARICELLA_NO_2NDVACCINE_OTHER 'VARICELLA_NO_2NDVACCINE_OTHER',
VACCINE_LOT_51 AS VACCINE_LOT_5 'VACCINE_LOT_5',
RASH_LOCATION_DERMATOME1 AS RASH_LOCATION_DERMATOME 'RASH_LOCATION_DERMATOME',
IGG_TEST_OTHER1 AS IGG_TEST_OTHER 'IGG_TEST_OTHER',
VACCINE_LOT_41 AS VACCINE_LOT_4 'VACCINE_LOT_4',
VACCINE_LOT_11 AS VACCINE_LOT_1 'VACCINE_LOT_1',
DEATH_CAUSE1 AS DEATH_CAUSE 'DEATH_CAUSE',
VARICELLA_NO_VACCINE_OTHER1 AS VARICELLA_NO_VACCINE_OTHER 'VARICELLA_NO_VACCINE_OTHER',
IGG_TEST_ACUTE_VALUE1 AS IGG_TEST_ACUTE_VALUE 'IGG_TEST_ACUTE_VALUE',
TRANSMISSION_SETTING_OTHER1 AS TRANSMISSION_SETTING_OTHER 'TRANSMISSION_SETTING_OTHER',
IMMUNOCOMPROMISED_CONDITION1 AS IMMUNOCOMPROMISED_CONDITION 'IMMUNOCOMPROMISED_CONDITION',
LAB_TESTING_OTHER_RESULT_VALUE1 AS LAB_TESTING_OTHER_RESULT_VALUE 'LAB_TESTING_OTHER_RESULT_VALUE',
VACCINE_LOT_31 AS VACCINE_LOT_3 'VACCINE_LOT_3',
MEDICATION_NAME_OTHER1 AS MEDICATION_NAME_OTHER 'MEDICATION_NAME_OTHER',
PREVIOUS_DIAGNOSIS_BY_OTHER1 AS PREVIOUS_DIAGNOSIS_BY_OTHER 'PREVIOUS_DIAGNOSIS_BY_OTHER',
RASH_LOCATION_OTHER1 AS RASH_LOCATION_OTHER 'RASH_LOCATION_OTHER',
IGG_TEST_CONVALESCENT_VALUE1 AS IGG_TEST_CONVALESCENT_VALUE 'IGG_TEST_CONVALESCENT_VALUE',
IGM_TEST_TYPE_OTHER1 AS IGM_TEST_TYPE_OTHER 'IGM_TEST_TYPE_OTHER',
PCR_TEST_RESULT_OTHER1 AS PCR_TEST_RESULT_OTHER 'PCR_TEST_RESULT_OTHER',
VACCINE_LOT_21 AS VACCINE_LOT_2 'VACCINE_LOT_2',
IGM_TEST_RESULT_VALUE1 AS IGM_TEST_RESULT_VALUE 'IGM_TEST_RESULT_VALUE',
COMPLICATIONS_OTHER_SPECIFY1 AS COMPLICATIONS_OTHER_SPECIFY 'COMPLICATIONS_OTHER_SPECIFY'

from S_VAR_PAM2;
run;
PROC SORT DATA=s_VAR_pam nodupkey; BY VAR_PAM_UID; RUN;
PROC SQL;
CREATE TABLE s_VAR_pam AS SELECT * FROM
S_PAM_CHG_TIME, S_VAR_PAM WHERE 
S_VAR_PAM.VAR_PAM_UID=S_PAM_CHG_TIME.VAR_PAM_UID;
QUIT;
data s_VAR_pam;
set s_VAR_pam;
if VAR_PAM_UID ~=. then output;
run;
%DBLOAD (S_VAR_PAM, S_VAR_PAM);
proc sql;
UPDATE ACTIVITY_LOG_DETAIL SET SOURCE_ROW_COUNT=(SELECT COUNT(*) FROM S_VAR_PAM),
END_DATE=DATETIME(),
DESTINATION_row_count=(SELECT COUNT(*) FROM nbs_rdb.S_VAR_PAM ),
ACTIVITY_LOG_DETAIL_UID= ((select max(ACTIVITY_LOG_DETAIL_uid) from nbs_rdb.ACTIVITY_LOG_DETAIL)+1),
PROCESS_UID= (select process_uid from NBS_RDB.ETL_PROCESS where process_name='S_VAR_PAM');
quit;
DATA ACTIVITY_LOG_DETAIL;
SET ACTIVITY_LOG_DETAIL;
ADMIN_COMMENT=COMPRESS(DESTINATION_ROW_COUNT) || ' RECORD(S) INSERTED AND 0 RECORD(S) UPDATED IN S_VAR_PAM TABLE.'||
' THERE ARE NOW '|| COMPRESS(DESTINATION_ROW_COUNT) || ' TOTAL NUMBER OF RECORD(S) IN THE S_VAR_PAM TABLE.';
RUN;
%DBLOAD (ACTIVITY_LOG_DETAIL, ACTIVITY_LOG_DETAIL);
PROC SQL;
UPDATE ACTIVITY_LOG_DETAIL SET START_DATE=DATETIME();

CREATE TABLE S_VAR_PAM_ACT_ENTITY AS
SELECT NBS_ACT_ENTITY.NBS_ACT_ENTITY_UID, NBS_ACT_ENTITY.ADD_TIME, NBS_ACT_ENTITY.ADD_USER_ID, NBS_ACT_ENTITY.ADD_USER_ID,NBS_ACT_ENTITY.LAST_CHG_TIME,  NBS_ACT_ENTITY.LAST_CHG_USER_ID,
NBS_ACT_ENTITY.ACT_UID AS VAR_PAM_UID 'VAR_PAM_UID',ENTITY_UID, TYPE_CD,RECORD_STATUS_CD, RECORD_STATUS_TIME,
RECORD_STATUS_TIME, NBS_ACT_ENTITY_UID as VAR_PAM_ACT_ENTITY_UID  'VAR_PAM_ACT_ENTITY_UID'
FROM NBS_ODS.NBS_ACT_ENTITY, S_VAR_PAM  where 
NBS_ACT_ENTITY.ACT_UID=S_VAR_PAM.VAR_PAM_UID;
/*AND NBS_ACT_ENTITY.last_chg_time>(select start_date from ACTIVITY_LOG_MASTER_LAST); */

UPDATE ACTIVITY_LOG_DETAIL SET SOURCE_ROW_COUNT=(SELECT COUNT(*) FROM nbs_ods.NBS_ACT_ENTITY where last_chg_time>(select start_date from ACTIVITY_LOG_MASTER_LAST)),
END_DATE=DATETIME(),
DESTINATION_row_count=(SELECT COUNT(*) FROM S_VAR_PAM_ACT_ENTITY),
ACTIVITY_LOG_DETAIL_UID= ((select max(ACTIVITY_LOG_DETAIL_uid) from nbs_rdb.ACTIVITY_LOG_DETAIL)+1),
PROCESS_UID= (select process_uid from NBS_RDB.ETL_PROCESS where process_name='S_VAR_PAM_ACT_ENTITY');
QUIT;
DATA ACTIVITY_LOG_DETAIL;
SET ACTIVITY_LOG_DETAIL;
IF ACTIVITY_LOG_DETAIL_UID > 0 THEN ACTIVITY_LOG_DETAIL_UID= SUM(ACTIVITY_LOG_DETAIL_UID+1);
ELSE ACTIVITY_LOG_DETAIL_UID= 1;
RUN;
%DBLOAD (S_VAR_PAM_ACT_ENTITY, S_VAR_PAM_ACT_ENTITY);
DATA ACTIVITY_LOG_DETAIL;
SET ACTIVITY_LOG_DETAIL;
ADMIN_COMMENT=COMPRESS(DESTINATION_ROW_COUNT) || ' RECORD(S) INSERTED AND 0 RECORD(S) UPDATED IN S_VAR_PAM_ACT_ENTITY TABLE.'||
' THERE ARE NOW '|| COMPRESS(DESTINATION_ROW_COUNT) || ' TOTAL NUMBER OF RECORD(S) IN THE S_VAR_PAM_ACT_ENTITY TABLE.';
RUN;
%DBLOAD (ACTIVITY_LOG_DETAIL, ACTIVITY_LOG_DETAIL);
/*proc sql;
UPDATE ACTIVITY_LOG_DETAIL SET SOURCE_ROW_COUNT=(SELECT COUNT(*) FROM S_VAR_PAM),
END_DATE=DATETIME(),
DESTINATION_row_count=(SELECT COUNT(*) FROM nbs_rdb.S_VAR_PAM ),
ACTIVITY_LOG_DETAIL_UID= ((select max(ACTIVITY_LOG_DETAIL_uid) from nbs_rdb.ACTIVITY_LOG_DETAIL)+1),
PROCESS_UID= (select process_uid from NBS_RDB.ETL_PROCESS where process_name='S_VAR_PAM');
quit;
DATA ACTIVITY_LOG_DETAIL;
SET ACTIVITY_LOG_DETAIL;
ADMIN_COMMENT=COMPRESS(DESTINATION_ROW_COUNT) || ' RECORD(S) INSERTED AND 0 RECORD(S) UPDATED IN S_VAR_PAM TABLE.'||
' THERE ARE NOW '|| COMPRESS(DESTINATION_ROW_COUNT) || ' TOTAL NUMBER OF RECORD(S) IN THE S_VAR_PAM TABLE.';
RUN;

%DBLOAD (ACTIVITY_LOG_DETAIL, ACTIVITY_LOG_DETAIL);*/
/*proc sql;
UPDATE ACTIVITY_LOG_DETAIL SET SOURCE_ROW_COUNT=(SELECT COUNT(*) FROM S_VAR_PAM),
END_DATE=DATETIME(),
DESTINATION_row_count=(SELECT COUNT(*) FROM nbs_rdb.S_VAR_PAM ),
ACTIVITY_LOG_DETAIL_UID= ((select max(ACTIVITY_LOG_DETAIL_uid) from nbs_rdb.ACTIVITY_LOG_DETAIL)+1),
PROCESS_UID= (select process_uid from NBS_RDB.ETL_PROCESS where process_name='S_VAR_PAM');
quit;
%DBLOAD (ACTIVITY_LOG_DETAIL, ACTIVITY_LOG_DETAIL);*/
proc sql;
UPDATE ACTIVITY_LOG_DETAIL SET 
START_DATE=DATETIME();

create table S_RASH_LOC_GEN_BASE as
SELECT  ACT_UID length =8 AS VAR_PAM_UID  'VAR_PAM_UID',
SEQ_NBR, datamart_column_nm , NBS_Case_Answer_uid, answer_txt, CODE_SET_GROUP_ID, pa.last_chg_time
FROM  nbs_ods.nbs_Question pq
JOIN nbs_ods.NBS_Case_Answer pa ON pq.nbs_question_uid =pa.nbs_question_uid
WHERE datamart_column_nm <> 'n/a'
and question_identifier='VAR105'
/*AND pa.last_chg_time>(select start_date from ACTIVITY_LOG_MASTER_LAST)*/
GROUP BY ACT_UID, datamart_column_nm ;


create table D_RASH_LOC_GEN as select * from nbs_rdb.D_RASH_LOC_GEN where VAR_PAM_UID in (select distinct VAR_PAM_UID from S_RASH_LOC_GEN_BASE);

delete from nbs_rdb.D_RASH_LOC_GEN where VAR_PAM_UID in (select distinct VAR_PAM_UID from D_RASH_LOC_GEN);
delete from nbs_rdb.L_RASH_LOC_GEN where VAR_PAM_UID in (select distinct VAR_PAM_UID from D_RASH_LOC_GEN);


delete from nbs_rdb.d_RASH_LOC_GEN_group where d_RASH_LOC_GEN_group_key in (
select distinct  d_RASH_LOC_GEN_group_key from  d_RASH_LOC_GEN where VAR_PAM_UID in (select distinct VAR_PAM_UID from D_RASH_LOC_GEN));


delete from nbs_rdb.S_RASH_LOC_GEN where VAR_PAM_UID in (select distinct VAR_PAM_UID from D_RASH_LOC_GEN);
delete from nbs_rdb.L_RASH_LOC_GEN where VAR_PAM_UID in (select distinct VAR_PAM_UID from D_RASH_LOC_GEN);

quit;

PROC SQL;
CREATE TABLE S_RASH_LOC_GEN_CODED  AS 
	SELECT * FROM S_RASH_LOC_GEN_BASE VAR
		LEFT JOIN NBS_SRT.CODESET_GROUP_METADATA METADATA
		ON METADATA.CODE_SET_GROUP_ID=VAR.CODE_SET_GROUP_ID;
QUIT;
PROC SQL;
CREATE TABLE S_RASH_LOC_GEN_CODED_TRANSLATED AS 
	SELECT 	VAR.CODE_SET_GROUP_ID, VAR_PAM_UID,
			SEQ_NBR, NBS_Case_Answer_uid, ANSWER_TXT, VAR.CODE_SET_NM,DATAMART_COLUMN_NM,
			CODE,CODE_SHORT_DESC_TXT AS CODE_SHORT_DESC_TXT, last_chg_time
	FROM	S_RASH_LOC_GEN_CODED VAR
			LEFT JOIN NBS_SRT.CODE_VALUE_GENERAL CVG
			ON CVG.CODE_SET_NM=VAR.CODE_SET_NM
			AND CVG.CODE=VAR.ANSWER_TXT
			ORDER BY VAR_PAM_UID;
QUIT;
DATA S_RASH_LOC_GEN;
SET S_RASH_LOC_GEN_CODED_TRANSLATED;
value=ANSWER_TXT;
IF CODE_SET_GROUP_ID=''  THEN value= ANSWER_TXT;
ELSE IF CODE_SET_GROUP_ID<>''  THEN value=CODE_SHORT_DESC_TXT;
RUN;
%DBLOAD (S_RASH_LOC_GEN, S_RASH_LOC_GEN);
proc sql;
UPDATE ACTIVITY_LOG_DETAIL SET SOURCE_ROW_COUNT=(SELECT COUNT(*) FROM S_RASH_LOC_GEN_BASE),
END_DATE=DATETIME(),
DESTINATION_row_count=(SELECT COUNT(*) FROM NBS_RDB.S_RASH_LOC_GEN),
ACTIVITY_LOG_DETAIL_UID= ((select max(ACTIVITY_LOG_DETAIL_uid) from nbs_rdb.ACTIVITY_LOG_DETAIL)+1),
PROCESS_UID= (select process_uid from NBS_RDB.ETL_PROCESS where process_name='S_RASH_LOC_GEN');
quit;
data ACTIVITY_LOG_DETAIL;
set ACTIVITY_LOG_DETAIL;
DESTINATION_ROW_COUNTs=put(DESTINATION_ROW_COUNT, 20.);
ADMIN_COMMENT=COMPRESS(DESTINATION_ROW_COUNTs) || ' RECORD(S) INSERTED AND 0 RECORD(S) UPDATED IN S_RASH_LOC_GEN TABLE.'||
' THERE ARE NOW '|| COMPRESS(DESTINATION_ROW_COUNTs) || ' TOTAL NUMBER OF RECORD(S) IN THE S_RASH_LOC_GEN TABLE.';
run;
%DBLOAD (ACTIVITY_LOG_DETAIL, ACTIVITY_LOG_DETAIL);
proc sql;
UPDATE ACTIVITY_LOG_DETAIL SET 
START_DATE=DATETIME();

create table S_PCR_SOURCE_BASE as
SELECT  ACT_UID length =8 AS VAR_PAM_UID  'VAR_PAM_UID',
SEQ_NBR, datamart_column_nm , NBS_Case_Answer_uid, answer_txt, CODE_SET_GROUP_ID, pa.last_chg_time
FROM  nbs_ods.nbs_Question pq
JOIN nbs_ods.NBS_Case_Answer pa ON pq.nbs_question_uid =pa.nbs_question_uid
WHERE datamart_column_nm <> 'n/a'
and question_identifier='VAR176'
/*AND pa.last_chg_time>(select start_date from ACTIVITY_LOG_MASTER_LAST)*/
GROUP BY ACT_UID, datamart_column_nm ;


create table D_PCR_SOURCE as select * from nbs_rdb.D_PCR_SOURCE where VAR_PAM_UID in (select distinct VAR_PAM_UID from S_PCR_SOURCE_BASE);

delete from nbs_rdb.D_PCR_SOURCE where VAR_PAM_UID in (select distinct VAR_PAM_UID from D_PCR_SOURCE);
delete from nbs_rdb.L_PCR_SOURCE where VAR_PAM_UID in (select distinct VAR_PAM_UID from D_PCR_SOURCE);


delete from nbs_rdb.d_PCR_SOURCE_group where d_PCR_SOURCE_group_key in (
select distinct  d_PCR_SOURCE_group_key from  d_PCR_SOURCE where VAR_PAM_UID in (select distinct VAR_PAM_UID from D_PCR_SOURCE));


delete from nbs_rdb.S_PCR_SOURCE where VAR_PAM_UID in (select distinct VAR_PAM_UID from D_PCR_SOURCE);
delete from nbs_rdb.L_PCR_SOURCE where VAR_PAM_UID in (select distinct VAR_PAM_UID from D_PCR_SOURCE);

quit;

PROC SQL;
CREATE TABLE S_PCR_SOURCE_CODED  AS 
	SELECT * FROM S_PCR_SOURCE_BASE VAR
		LEFT JOIN NBS_SRT.CODESET_GROUP_METADATA METADATA
		ON METADATA.CODE_SET_GROUP_ID=VAR.CODE_SET_GROUP_ID;
QUIT;
PROC SQL;
CREATE TABLE S_PCR_SOURCE_CODED_TRANSLATED AS 
	SELECT 	VAR.CODE_SET_GROUP_ID, VAR_PAM_UID,
			SEQ_NBR, NBS_Case_Answer_uid, ANSWER_TXT, VAR.CODE_SET_NM,DATAMART_COLUMN_NM,
			CODE,CODE_SHORT_DESC_TXT AS CODE_SHORT_DESC_TXT, last_chg_time
	FROM	S_PCR_SOURCE_CODED VAR
			LEFT JOIN NBS_SRT.CODE_VALUE_GENERAL CVG
			ON CVG.CODE_SET_NM=VAR.CODE_SET_NM
			AND CVG.CODE=VAR.ANSWER_TXT
			ORDER BY VAR_PAM_UID;
QUIT;
DATA S_PCR_SOURCE;
SET S_PCR_SOURCE_CODED_TRANSLATED;
value=ANSWER_TXT;
IF CODE_SET_GROUP_ID=''  THEN value= ANSWER_TXT;
ELSE IF CODE_SET_GROUP_ID<>''  THEN value=CODE_SHORT_DESC_TXT;
RUN;
%DBLOAD (S_PCR_SOURCE, S_PCR_SOURCE);
proc sql;
UPDATE ACTIVITY_LOG_DETAIL SET SOURCE_ROW_COUNT=(SELECT COUNT(*) FROM S_PCR_SOURCE_BASE),
END_DATE=DATETIME(),
DESTINATION_row_count=(SELECT COUNT(*) FROM NBS_RDB.S_PCR_SOURCE),
ACTIVITY_LOG_DETAIL_UID= ((select max(ACTIVITY_LOG_DETAIL_uid) from nbs_rdb.ACTIVITY_LOG_DETAIL)+1),
PROCESS_UID= (select process_uid from NBS_RDB.ETL_PROCESS where process_name='S_PCR_SOURCE');
quit;
data ACTIVITY_LOG_DETAIL;
set ACTIVITY_LOG_DETAIL;
DESTINATION_ROW_COUNTs=put(DESTINATION_ROW_COUNT, 20.);
ADMIN_COMMENT=COMPRESS(DESTINATION_ROW_COUNTs) || ' RECORD(S) INSERTED AND 0 RECORD(S) UPDATED IN S_PCR_SOURCE TABLE.'||
' THERE ARE NOW '|| COMPRESS(DESTINATION_ROW_COUNTs) || ' TOTAL NUMBER OF RECORD(S) IN THE S_PCR_SOURCE TABLE.';
run;
%DBLOAD (ACTIVITY_LOG_DETAIL, ACTIVITY_LOG_DETAIL);
proc sql;
create table case_entity as select * from nbs_ods.NBS_ACT_ENTITY 
where ACT_UID in (select public_health_case_UID from nbs_ods.public_health_case where cd in (
select  condition_cd from nbs_srt.condition_code where investigation_form_cd = 'INV_FORM_VAR'
))
/*and last_chg_time>(select start_date from ACTIVITY_LOG_MASTER_LAST)*/
order by ACT_UID;
quit;
PROC TRANSPOSE DATA=case_entity OUT=case_entity1;
    BY ACT_UID;
	COPY last_chg_time;
	ID type_cd;
	VAR entity_uid;
RUN;
data F_S_VAR_PAM;
set case_entity1;
if InvestgrOfPHC ~=. then provider_uid=InvestgrOfPHC;
if OrgAsReporterOfPHC ~=. then ORG_AS_REPORTER_UID=OrgAsReporterOfPHC;
if HospOfADT ~=. then HOSPITAL_UID=HospOfADT;
if PerAsReporterOfPHC ~=. then PERSON_AS_REPORTER_UID=PerAsReporterOfPHC;
if SubjOfPHC ~=. then person_uid=SubjOfPHC;
if PhysicianOfPHC~=. then PHYSICIAN_UID=PhysicianOfPHC;
if ACT_UID ~=. then VAR_PAM_UID=ACT_UID;
if SubjOfPHC>0 then 
 do; 
  output F_S_VAR_PAM;
 end;
run;

%DBLOAD (F_S_VAR_PAM, F_S_VAR_PAM);
%mend VAR_STAGING;
PROC SQL;
CREATE TABLE VAR_PORT_IND 
AS
select PORT_REQ_IND_CD from nbs_srt.condition_code where condition_cd ='10030';
QUIT;
DATA _null_;
  set VAR_PORT_IND;
  if PORT_REQ_IND_CD='T' then call execute('%VAR_STAGING');
RUN;
