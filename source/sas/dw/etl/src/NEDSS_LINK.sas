/*GET THE DATA FROM BASIC RDB TABLES(INVESTIGATION, EVENT_METRIC CASE_COUNT PERSON LOCATION PERSON_RACE RACE)
*/
PROC SQL;
CREATE TABLE INVESTIGATION_METRICS AS
SELECT     
			INVESTIGATION.INV_LOCAL_ID, 
			INVESTIGATION.DISEASE_IMPORTED_IND,
			INVESTIGATION.CASE_RPT_MMWR_WK, 
			INVESTIGATION.CASE_RPT_MMWR_YR, 
			INVESTIGATION.OUTBREAK_IND, 
			INVESTIGATION.CASE_TYPE AS CASETYPE 'CASETYPE', 
			INVESTIGATION.INV_CASE_STATUS, 
			INVESTIGATION.INVESTIGATION_KEY, 
			INVESTIGATION.CASE_UID, 
			INVESTIGATION.ILLNESS_ONSET_DT,
			INVESTIGATION.DIAGNOSIS_DT,
			INVESTIGATION.EARLIEST_RPT_TO_CNTY_DT,
			INVESTIGATION.EARLIEST_RPT_TO_STATE_DT,
			EVENT_METRIC.CONDITION_CD, 
			EVENT_METRIC.CONDITION_DESC_TXT, 
			EVENT_METRIC.ADD_TIME, 
			EVENT_METRIC.LAST_CHG_TIME, 
			EVENT_METRIC.LOCAL_ID, 
			/*EVENT_METRIC.EVENT_TYPE,*/
			EVENT_METRIC.EVENT_UID, 
			PERSON.AGE_REPORTED, 
			PERSON.AGE_REPORT_UNIT_CD, 
			PERSON.PERSON_DOB, 
			PERSON.PATIENT_HISPANIC_IND, 
			PERSON.PERSON_CURR_GENDER, 
			PERSON.PERSON_KEY,
			CASE_COUNT.CASE_COUNT,
			LOCATION.STATE_FIPS,
			LOCATION.CNTY_FIPS,
			LOCATION.CNTY_SHORT_DESC,
			RACE.RACE_CD
FROM        nbs_rdb.INVESTIGATION INNER JOIN
			nbs_rdb.EVENT_METRIC ON INVESTIGATION.INV_LOCAL_ID = EVENT_METRIC.LOCAL_ID INNER JOIN
			nbs_rdb.CASE_COUNT ON INVESTIGATION.INVESTIGATION_KEY = CASE_COUNT.INVESTIGATION_KEY INNER JOIN
			nbs_rdb.PERSON ON CASE_COUNT.PATIENT_KEY = PERSON.PERSON_KEY  INNER JOIN
            nbs_rdb.LOCATION ON CASE_COUNT.CASE_LOCATION_KEY = LOCATION.LOCATION_KEY left outer JOIN
			nbs_rdb.PERSON_RACE ON PERSON.PERSON_KEY = PERSON_RACE.PERSON_KEY left outer JOIN
            nbs_rdb.RACE ON PERSON_RACE.RACE_KEY = RACE.RACE_KEY
			where INVESTIGATION.record_status_cd <>'INACTIVE'
			order by INV_LOCAL_ID asc, RACE.RACE_CD desc;
QUIT;
data INVESTIGATION_METRICS;
  set INVESTIGATION_METRICS;
IF RACE_CD ='1002-5'  THEN RACE_CD = '1';
IF RACE_CD ='2028-9'  THEN RACE_CD = '2';
IF RACE_CD ='2054-5'  THEN RACE_CD = '3';
IF RACE_CD ='2106-3'  THEN RACE_CD = '5';
IF RACE_CD ='2076-8'  THEN RACE_CD = '2';
IF RACE_CD ='U'       THEN RACE_CD = '9';
run;
data INVESTIGATION_METRICS;
  set INVESTIGATION_METRICS;
  by INV_LOCAL_ID;
  /* set up arrays for kid variables */
  /* remember to find out the maximum number of investigation_keys per lab */
  array RACE_CDS {*} RACE_CD1-RACE_CD2;
   /* the dollar sign is used to keep SAS from assuming these are numeric variables */


  retain INVORDR RACE_CD1-RACE_CD2;

  /* When we are at the start of the BY group we   */
  /* want to reinitialize our RETAINED variables   */
  if first.INV_LOCAL_ID then do;
    do I= 1 to 2;
       RACE_CDS[i]= "";
       INVORDR=0;
  end;
   end;

  INVORDR=INVORDR+1;
  if 0 < INVORDR <= 2 then do;
     IF RACE_CD ~=1 THEN 
      RACE_CDS[INVORDR]=RACE_CD;
  end;

  if last.INV_LOCAL_ID then do;
     CEB=INVORDR;
   output;
  end;
drop RACE_CD INVORDR I;

RUN;

data INVESTIGATION_METRICS;
  set INVESTIGATION_METRICS;
  if RACE_CD1~=. then RACE_CD = RACE_CD1;
  if RACE_CD1~=. and RACE_CD2~=. then RACE_CD = 7;
  run;
/*GET THE STATE NAME BASED ON STATE_FIPS */
PROC SQL;
CREATE TABLE INV_PERSON_COUNTY  AS
SELECT     INVESTIGATION_METRICS.*,
			STATE_CODE.STATE_NM
FROM        INVESTIGATION_METRICS INVESTIGATION_METRICS LEFT OUTER JOIN
            NBS_SRT.STATE_CODE ON INVESTIGATION_METRICS.STATE_FIPS= STATE_CODE.STATE_CD;
QUIT;
/*EVENT DATE CALCULATIONS */
DATA INV_PERSON_COUNTY ; 
SET INV_PERSON_COUNTY ;
EVNT_DATE = ILLNESS_ONSET_DT;
IF ILLNESS_ONSET_DT ~= .  THEN 
		EVNT_DATE = ILLNESS_ONSET_DT;
ELSE IF DIAGNOSIS_DT ~= . THEN 
		EVNT_DATE = DIAGNOSIS_DT;
ELSE IF EARLIEST_RPT_TO_CNTY_DT ~=. THEN 
		EVNT_DATE =EARLIEST_RPT_TO_CNTY_DT;
ELSE IF EARLIEST_RPT_TO_STATE_DT ~=. THEN 
		EVNT_DATE =EARLIEST_RPT_TO_STATE_DT;
DATETYPE = '';
IF ILLNESS_ONSET_DT ~= .  THEN 
		DATETYPE = '1';
ELSE IF DIAGNOSIS_DT ~= . THEN 
		DATETYPE = '2';
ELSE IF EARLIEST_RPT_TO_CNTY_DT ~=. THEN 
		DATETYPE ='4';
ELSE IF EARLIEST_RPT_TO_STATE_DT ~=. THEN 
		DATETYPE ='5';

RUN;
/* TRANSLATION OF DATA */
DATA INV_PERSON_COUNTY;
SET INV_PERSON_COUNTY;

/*AGE UNIT CONVERSION*/
IF AGE_REPORT_UNIT_CD = 'Y'      THEN AGE_REPORT_UNIT_CD='0';
ELSE IF AGE_REPORT_UNIT_CD = 'M' THEN AGE_REPORT_UNIT_CD='1';
ELSE IF AGE_REPORT_UNIT_CD = 'W' THEN AGE_REPORT_UNIT_CD = '2';
ELSE IF AGE_REPORT_UNIT_CD= 'D'  THEN AGE_REPORT_UNIT_CD='3';
ELSE IF AGE_REPORT_UNIT_CD= 'H'  THEN AGE_REPORT_UNIT_CD='9';
ELSE IF AGE_REPORT_UNIT_CD = 'UNK' THEN AGE_REPORT_UNIT_CD = '9';
ELSE IF AGE_REPORT_UNIT_CD = 'U' THEN AGE_REPORT_UNIT_CD = '9';
ELSE IF AGE_REPORT_UNIT_CD = 'Y' THEN AGE_REPORT_UNIT_CD = '';

/*RECTYPE CONVERSION */
IF CASETYPE = 'I'      THEN CASETYPE='M';

/*ETHNICITY CONVERSION */
IF PATIENT_HISPANIC_IND = '2135-2' THEN PATIENT_HISPANIC_IND='1';
ELSE IF PATIENT_HISPANIC_IND = '2186-5' THEN PATIENT_HISPANIC_IND='2';


/* IMPORTED IND CONVERSION */
IF DISEASE_IMPORTED_IND = 'Out of country' THEN DISEASE_IMPORTED_IND = '2';
IF DISEASE_IMPORTED_IND = 'Out of state' THEN DISEASE_IMPORTED_IND = '3';
IF DISEASE_IMPORTED_IND = 'Out of jurisdiction' THEN DISEASE_IMPORTED_IND = '9';
IF DISEASE_IMPORTED_IND = 'Unknown' THEN DISEASE_IMPORTED_IND = '9';
IF DISEASE_IMPORTED_IND = 'Indigenous' THEN DISEASE_IMPORTED_IND = '1';
PUT DISEASE_IMPORTED_IND;

/* PERSON_CURR_GENDER CONVERSION */
IF PERSON_CURR_GENDER = 'M' THEN PERSON_CURR_GENDER = 1;
IF PERSON_CURR_GENDER = 'F' THEN PERSON_CURR_GENDER = 2;
IF PERSON_CURR_GENDER = 'U' THEN PERSON_CURR_GENDER = 9;
/*status conversion*/
IF INV_CASE_STATUS = 'Confirmed' THEN INV_CASE_STATUS = '1';
/*IF STATUS = 'Not a Case' THEN STATUS = 1;*/
IF INV_CASE_STATUS = 'Probable' THEN INV_CASE_STATUS = '2';
IF INV_CASE_STATUS = 'Suspect' THEN INV_CASE_STATUS = '3';
IF INV_CASE_STATUS = 'Unknown' THEN INV_CASE_STATUS = '9';
put INV_CASE_STATUS;

substr(CNTY_FIPS, 1,2)='';
put cnty_fips;

CNTY_SHORT_DESC=tranwrd(CNTY_SHORT_DESC, "County", "");

IF OUTBREAK_IND = 'Yes' THEN OUTBREAK_IND='1' ;
IF OUTBREAK_IND = 'No' THEN OUTBREAK_IND='2' ;
IF OUTBREAK_IND = 'Unknown' THEN OUTBREAK_IND='9' ;
PUT OUTBREAK_IND;
RUN;
/* COLUMN NAME TRANSLATION */ 
PROC SQL;
CREATE TABLE NEDSSSDAT AS
SELECT INV_LOCAL_ID,
DISEASE_IMPORTED_IND,
CASE_RPT_MMWR_WK AS MMWR_WEEK 'MMWR_WEEK',
CASE_RPT_MMWR_YR as CASE_RPT_MMWR_YR 'CASE_RPT_MMWR_YR',
OUTBREAK_IND,
CASETYPE,       
INV_CASE_STATUS,
INVESTIGATION_KEY, 
CASE_UID,
CONDITION_CD,
CONDITION_DESC_TXT,
ADD_TIME AS INIT_DATE 'INIT_DATE',
LAST_CHG_TIME AS UPDATED_DATE 'UPDATED_DATE',
LOCAL_ID, 
/*EVENT_TYPE, */
EVENT_UID, 
AGE_REPORTED as AGE_REPORTED 'AGE_REPORTED',        
AGE_REPORT_UNIT_CD as AGETYPESTR 'AGETYPESTR',
PERSON_DOB AS BIRTHDATE 'BIRTHDATE',
PATIENT_HISPANIC_IND AS PATIENT_HISPANIC_IND 'PATIENT_HISPANIC_IND',
PERSON_CURR_GENDER,
PERSON_KEY, 
CASE_COUNT AS CASE_COUNT 'CASE_COUNT',
STATE_FIPS AS STATE_FIP 'STATE_FIP',
CNTY_FIPS AS CNTY_CODE 'CNTY_CODE',
STATE_NM AS STATE_NM 'STATE_NM',
CNTY_SHORT_DESC AS CNTY_SHORT_DESC 'CNTY_SHORT_DESC',
RACE_CD AS RACE_CD 'RACE_CD',
EVNT_DATE,
DATETYPE
FROM INV_PERSON_COUNTY;
QUIT;	
/*DATA TRANSLATION WITH SOME COLUMNS DROPPED AS THESE COLUMNS WILL NOT BE USED IN THE NEXT STEP OF CODE */

 DATA SRCDATA(DROP = RACE_CD1 RACE_CD12 AGE_REPORTED STATE_FIP CNTY_CODE MMWR_WEEK CASE_RPT_MMWR_YR AGETYPESTR CASETYPE STATE_NM
                   CNTY_SHORT_DESC CONDITION_CD CONDITION_DESC_TXT CASE_COUNT  PERSON_CURR_GENDER OUTBREAK_IND DISEASE_IMPORTED_IND
                   INV_CASE_STATUS INV_LOCAL_ID RACE_CD PATIENT_HISPANIC_IND) ;
  SET NEDSSSDAT ;  
  /*LENGTH CASEID1 $6 SEX1 RACE1 AGETYPE1 $1 ;
  
  CASEID1 = CASEID ;
  SEX1 = SEX ;
  RACE1 = RACE ;
*/

  LENGTH CDATE $6 MMWR_WK NDATE MMWRMNTH 8 CNTYNAME $25 EVNTNAME $50 YEARGRP 8 age 8 AGETYPE $1 RACE $1;


* CALCULATE MMWR WEEK NUMBER, MONTH AND YEAR ;

  MMWR_WK= ((CASE_RPT_MMWR_YR - 2000) * 100) + MMWR_WEEK ;
  /*CDATE = PUT(MMWR_WK,MMTOWK.) ;*/
  if CDATE ~= 'MMWR W' then   NDATE = INPUT(CDATE,YYMMDD6.) ;
  if CDATE ~= 'MMWR W' then MMWRMNTH = MONTH(NDATE) ;
  if CDATE ~= 'MMWR W' then YR = YEAR(NDATE) ;

  IF YR LT CASE_RPT_MMWR_YR THEN MMWRMNTH = 1 ;
  ELSE IF YR GT CASE_RPT_MMWR_YR THEN MMWRMNTH = 12 ;

* CALCULATE AGE IN YEARS ;

  IF AGETYPESTR = 1 THEN DO ;        * AGE IS IN MONTH UNITS ;
     AGETYPESTR = 0 ;
     AGE_REPORTED = INT(AGE_REPORTED / 12) ;
  END;
  ELSE IF AGETYPESTR = 2 THEN DO ;   * AGE IS IN WEEK UNITS ;
     AGETYPESTR = 0 ;
     AGE_REPORTED = INT(AGE_REPORTED / 52) ;
  END ;
  ELSE IF AGETYPESTR = 3 THEN DO ;   * AGE IS IN DAY UNITS ;
     AGETYPESTR = 0 ;
     AGE_REPORTED = INT(AGE_REPORTED / 365.25) ;
  END ;

  IF CASETYPE = 'S' THEN DO ;      * SUMMARY RECORD AGE VALUE SUBSTITUTION ;
     AGETYPESTR = 9 ;
     AGE_REPORTED = 999 ;
  END ;

* CREATE YEARGRP VARIABLE ;

  IF AGETYPE = 0 AND AGE = 0 THEN YEARGRP = 1 ;
  ELSE IF AGETYPESTR = 0 AND  1 GT AGE THEN YEARGRP = 1 ;
  ELSE IF AGETYPESTR = 0 AND  1 LE AGE LT   5 THEN YEARGRP = 2 ;
  ELSE IF AGETYPESTR = 0 AND  5 LE AGE LT  10 THEN YEARGRP = 3 ;
  ELSE IF AGETYPESTR = 0 AND 10 LE AGE LT  15 THEN YEARGRP = 4 ;
  ELSE IF AGETYPESTR = 0 AND 15 LE AGE LT  20 THEN YEARGRP = 5 ;
  ELSE IF AGETYPESTR = 0 AND 20 LE AGE LT  25 THEN YEARGRP = 6 ;
  ELSE IF AGETYPESTR = 0 AND 25 LE AGE LT  30 THEN YEARGRP = 7 ;
  ELSE IF AGETYPESTR = 0 AND 30 LE AGE LT  40 THEN YEARGRP = 8 ;
  ELSE IF AGETYPESTR = 0 AND 40 LE AGE LT  50 THEN YEARGRP = 9 ;
  ELSE IF AGETYPESTR = 0 AND 50 LE AGE LT  60 THEN YEARGRP = 10 ;
  ELSE IF AGETYPESTR = 0 AND 60 LE AGE LT 999 THEN YEARGRP = 11 ;

IF AGETYPESTR = 9 THEN YEARGRP = 99 ;

  IF AGE_REPORTED = . THEN DO ;
     AGETYPESTR = . ;
     YEARGRP = . ;
  END ;

AGETYPE1 = AGETYPESTR ;
age = INT(AGE_REPORTED);
STATEFIP = INT(STATE_FIP);
CNTYCODE = INT(CNTY_CODE);
MMWRWEEK = INT(MMWR_WEEK);
MMWRYEAR = INT(CASE_RPT_MMWR_YR);
AGETYPE =AGETYPESTR;
RECTYPE =CASETYPE;
STATABRV = STATE_NM;
CNTYNAME =CNTY_SHORT_DESC;
EVNTCODE = CONDITION_CD;
EVNTNAME=CONDITION_DESC_TXT;
CASCOUNT=CASE_COUNT;
SEX = PERSON_CURR_GENDER;
OUTBRKID = OUTBREAK_IND;
IMPORTED=DISEASE_IMPORTED_IND;
STATUS=INV_CASE_STATUS;
CASEID=INV_LOCAL_ID;
RACE = RACE_CD;
ETHNCITY= PATIENT_HISPANIC_IND;
RUN ;

/* CONVERT TEMPORARY CALCULATION VARIABLES INTO FINAL FORM VARIABLES */

 DATA TEMP (drop=CASE_RPT_MMWR_YR INVESTIGATION_KEY MMWR_WEEK  CASE_UID  LOCAL_ID EVENT_UID AGE_REPORTED PERSON_KEY STATE_FIP 
         CNTY_CODE CDATE MMWR_WK NDATE YEAR AGETYPE1 BIRTHDATE UPDATED_DATE INIT_DATE EVNT_DATE YEARGRP Y X);
  LENGTH RECTYPE   $1
         STATEFIP 8  
         STATABRV  $2
         CNTYCODE  8 
         CNTYNAME $25
         SITECODE  $3
         EVNTCODE  $8
         EVNTNAME $50
         CASCOUNT   8
         AGE        8
		 AGE5GRP    8 
		 AGE10GRP   8 
         AGETYPE   $1
         SEX
         RACE      
         ETHNCITY  $1
         OUTBRKID  $1
         IMPORTED  $1
         STATUS    $1
         YRGRP      8 ;
		
  SET SRCDATA ;
  YRGRP    = YEARGRP ;
  EVNTDATE = EVNT_DATE;
  BRTHDATE = BIRTHDATE;
  UPDATED = UPDATED_DATE;
  INITDATE=INIT_DATE ;
  SOURCE_NAME='NBS';

  IF LEFT(SEX)      = '.' THEN SEX      = ' ' ;
  IF LEFT(RACE)     = '.' THEN RACE     = ' ' ;
  IF LEFT(ETHNCITY) = '.' THEN ETHNCITY = ' ' ;
  IF LEFT(OUTBRKID) = '.' THEN OUTBRKID = ' ' ;
  IF LEFT(IMPORTED) = '.' THEN IMPORTED = ' ' ;
  IF LEFT(STATUS)   = '.' THEN STATUS   = ' ' ;
  IF LEFT(EVNT_DATE) = '.' THEN EVNT_DATE = ' ' ;
  IF LEFT(INITDATE) = '.' THEN INITDATE = ' ' ;
  IF LEFT(UPDATED)  = '.' THEN UPDATED  = ' ' ; 

 RUN ;

 /************************************************
  * FURTHER PROCESS DATA INTO NNDSS LINK FORM    *
  ************************************************/

 DATA NEDSSDAT (DROP = YR X Y) ;
  SET TEMP ;

* CREATE FIVE-YEAR AGE GROUP VARIABLE ;

  IF 0 LE AGE LT 1 THEN AGE5GRP = 1 ;
  ELSE IF  1 LE AGE LE  4 THEN AGE5GRP =  2 ;
  ELSE IF  5 LE AGE LE  9 THEN AGE5GRP =  3 ;
  ELSE IF 10 LE AGE LE 14 THEN AGE5GRP =  4 ;
  ELSE IF 15 LE AGE LE 19 THEN AGE5GRP =  5 ;
  ELSE IF 20 LE AGE LE 24 THEN AGE5GRP =  6 ;
  ELSE IF 25 LE AGE LE 29 THEN AGE5GRP =  7 ;
  ELSE IF 30 LE AGE LE 34 THEN AGE5GRP =  8 ;
  ELSE IF 35 LE AGE LE 39 THEN AGE5GRP =  9 ;
  ELSE IF 40 LE AGE LE 44 THEN AGE5GRP = 10 ;
  ELSE IF 45 LE AGE LE 49 THEN AGE5GRP = 11 ;
  ELSE IF 50 LE AGE LE 54 THEN AGE5GRP = 12 ;
  ELSE IF 55 LE AGE LE 59 THEN AGE5GRP = 13 ;
  ELSE IF 60 LE AGE LE 64 THEN AGE5GRP = 14 ;
  ELSE IF 65 LE AGE THEN AGE5GRP = 15 ;
  ELSE AGE5GRP = . ;

* CREATE TEN-YEAR AGE GROUP VARIABLE ;

  IF 0 LE AGE LT 1 THEN AGE10GRP = 1 ;
  ELSE IF  1 LE AGE LE  9 THEN AGE10GRP = 2 ;
  ELSE IF 10 LE AGE LE 19 THEN AGE10GRP = 3 ;
  ELSE IF 20 LE AGE LE 29 THEN AGE10GRP = 4 ;
  ELSE IF 30 LE AGE LE 39 THEN AGE10GRP = 5 ;
  ELSE IF 40 LE AGE LE 49 THEN AGE10GRP = 6 ;
  ELSE IF 50 LE AGE LE 59 THEN AGE10GRP = 7 ;
  ELSE IF 60 LE AGE LE 69 THEN AGE10GRP = 8 ;
  ELSE IF 70 LE AGE THEN AGE10GRP = 9 ;
  ELSE AGE10GRP = . ;

* CONVERT SUMMARY RECORDS TO INDIVIDUAL CASE RECORDS ;

* IF THERE IS A SUMMARY RECORD FOR 10 CASES, THIS PORTION OF THE PROGRAM ;
* WILL CREATE 10 INDIVIDUAL CASE RECORDS, AND DELETE THE SUMMARY RECORD. ;

  IF CASCOUNT GT 1 THEN DO ;
     Y = CASCOUNT ;

     DO X = 1 TO Y ;
        CASCOUNT = 1 ;
        RECTYPE  = 'M' ;
        OUTPUT ;
     END ;
  END ;
  ELSE OUTPUT ;

* CREATE VARIABLE LABELS ;

  LABEL RECTYPE  = 'RECORD TYPE'
        MMWRYEAR = 'MMWR YEAR'
        MMWRMNTH = 'MMWR MONTH'
        MMWRWEEK = 'MMWR WEEK'
        STATEFIP = 'STATE FIPS'
        STATABRV = 'STATE NAME ABBREV.'
        CNTYCODE = 'COUNTY CODE'
        CNTYNAME = 'COUNTY NAME'
        SITECODE = 'SITE CODE'
        CASEID   = 'CASE ID'
        EVNTCODE = 'EVENT CODE'
        EVNTNAME = 'EVENT NAME'
        CASCOUNT = 'CASE COUNT'
        BRTHDATE = 'BIRTH DATE'
        AGE      = 'AGE'
        AGETYPE  = 'AGE TYPE'
        SEX      = 'SEX'
        RACE     = 'RACE'
        ETHNCITY = 'ETHNICITY'
        OUTBRKID = 'OUTBREAK ID'
        IMPORTED = 'IMPORTED'
        STATUS   = 'STATUS'
        EVNTDATE = 'EVENT DATE'
        DATETYPE = 'EVENT DATE TYPE'
        INITDATE = 'INIT. DATE'
        UPDATED  = 'UPDATED'
        YRGRP    = 'FSI AGE GROUP (YRS)'
        AGE5GRP  = '5 YR AGE GROUP'
        AGE10GRP = '10 YR AGE GROUP' ;
 RUN ;


PROC SQL;

CREATE TABLE RDBDATA.NEDSS_LINK AS
  select 
	AGE, AGE10GRP, AGE5GRP, AGETYPE, BRTHDATE, CASCOUNT, CASEID, CNTYCODE,
	CNTYNAME, DATETYPE, ETHNCITY as ETHNICITY, EVNTCODE, EVNTDATE, EVNTNAME, IMPORTED, INITDATE,
	MMWRMNTH, MMWRWEEK, MMWRYEAR, OUTBRKID, RACE, RECTYPE, SEX, STATABRV, STATEFIP,
	STATUS, UPDATED, YRGRP, SOURCE_NAME
from NEDSSDAT;
quit;
 

PROC SQL ;
   insert into 
	nbs_rdb.NEDSS_LINK(AGE, AGE10GRP, AGE5GRP, AGETYPE, BRTHDATE, CASCOUNT, CASEID, CNTYCODE, 
	CNTYNAME, DATETYPE, ETHNICITY, EVNTCODE, EVNTDATE, EVNTNAME, IMPORTED, INITDATE, 
	MMWRMNTH, MMWRWEEK, MMWRYEAR, OUTBRKID, RACE, RECTYPE, SEX, STATABRV, STATEFIP, 
	STATUS, UPDATED, YRGRP, SOURCE_NAME)
	select * from RDBDATA.NEDSS_LINK;

QUIT ;

/*
proc sql;
   create table dest.nedssdat as
   select AGE, 
		AGE10GRP, 
		AGE5GRP, 
		AGETYPE, 
		put(datepart(BRTHDATE), mmddyy10.)as BRTHDATE, 
		CASCOUNT, 
		CASEID, 
		CNTYCODE, 
		CNTYNAME, 
		DATETYPE, 
		ETHNICITY, 
		EVNTCODE, 
		put(datepart(EVNTDATE), mmddyy10.)as EVNTDATE, 
		EVNTNAME, 
		IMPORTED, 
		put(datepart(INITDATE), mmddyy10.)as INITDATE, 
		MMWRMNTH, 
		MMWRWEEK, 
		MMWRYEAR, 
		OUTBRKID, 
		RACE, 
		RECTYPE, 
		SEX, 
		STATABRV, 
		STATEFIP, 
		STATUS, 
		put(datepart(UPDATED), mmddyy10.)as UPDATED, 
		YRGRP, 
		SOURCE_NAME,
		put(datepart(SOURCE_DATE), mmddyy10.)as SOURCE_DATE,
		put(datepart(LOAD_DATE), mmddyy10.)as LOAD_DATE 
		from nbs_rdb.NEDSS_LINK;
		
 quit;

*/



