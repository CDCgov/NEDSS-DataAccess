PROC DATASETS LIB=WORK MEMTYPE=DATA
		KILL;
RUN;
PROC SQL;
CREATE TABLE ACTIVITY_LOG_MASTER_LAST 
(ACTIVITY_LOG_MASTER_UID NUM,
START_DATE DATE, 
START_DATE2 DATE,
START_DATEINIT DATE,
COUNT NUM);
INSERT INTO ACTIVITY_LOG_MASTER_LAST( ACTIVITY_LOG_MASTER_UID, START_DATE,START_DATEINIT, START_DATE2) VALUES 
(1 , '01JUN1900'D,'01JUN1900'D, NULL);
UPDATE ACTIVITY_LOG_MASTER_LAST SET COUNT= (SELECT COUNT(*) FROM nbs_rdb.D_PATIENT);

UPDATE ACTIVITY_LOG_MASTER_LAST set ACTIVITY_LOG_MASTER_UID = (SELECT MAX(ACTIVITY_LOG_MASTER_UID)
FROM nbs_rdb.ACTIVITY_LOG_MASTER where (refresh_ind ='T' OR  refresh_ind is null) );
UPDATE ACTIVITY_LOG_MASTER_LAST SET START_DATE2= (SELECT START_DATE FROM nbs_rdb.ACTIVITY_LOG_MASTER 
WHERE ACTIVITY_LOG_MASTER_UID= (SELECT MAX(ACTIVITY_LOG_MASTER_UID)
FROM nbs_rdb.ACTIVITY_LOG_MASTER where (refresh_ind ='T' OR  refresh_ind is null) ));
CREATE TABLE ACTIVITY_LOG_MASTER  
(ACTIVITY_LOG_MASTER_UID NUM,
START_DATE DATE, END_DATE DATE);

CREATE TABLE ACTIVITY_LOG_MASTER
(ACTIVITY_LOG_MASTER_UID NUM,
START_DATE DATE, 
END_DATE DATE,
refresh_ind VARCHAR(20), 
refresh_description VARCHAR(100)
);
INSERT INTO ACTIVITY_LOG_MASTER( ACTIVITY_LOG_MASTER_UID, START_DATE, END_DATE) VALUES 
(1 , NULL, NULL);
UPDATE ACTIVITY_LOG_MASTER SET ACTIVITY_LOG_MASTER_UID= (SELECT MAX(ACTIVITY_LOG_MASTER_UID)
FROM nbs_rdb.ACTIVITY_LOG_MASTER),START_DATE =DATETIME();

CREATE TABLE ACTIVITY_LOG_DETAIL  (ACTIVITY_LOG_DETAIL_UID NUMERIC,	PROCESS_UID NUMERIC ,	
	SOURCE_ROW_COUNT NUMERIC , ROW_COUNT_INSERT NUMERIC, ROW_COUNT_UPDATE NUMERIC,
	SOURCE_ROW_COUNT_EXISTING NUMERIC ,	SOURCE_ROW_COUNT_NEW NUMERIC ,
	DESTINATION_ROW_COUNT NUMERIC ,
	START_DATE DATE, END_DATE DATE,
	START_DATE2 DATE,
	ADMIN_COMMENT VARCHAR(200), ACTIVITY_LOG_MASTER_UID NUMERIC);
INSERT INTO ACTIVITY_LOG_DETAIL( ACTIVITY_LOG_DETAIL_UID, PROCESS_UID,SOURCE_ROW_COUNT, DESTINATION_ROW_COUNT,
START_DATE,END_DATE, ACTIVITY_LOG_MASTER_UID) VALUES (1 , 1, NULL, NULL, NULL, NULL, NULL);
UPDATE ACTIVITY_LOG_DETAIL SET ACTIVITY_LOG_DETAIL_UID= (SELECT MAX(ACTIVITY_LOG_DETAIL_UID) FROM nbs_rdb.ACTIVITY_LOG_DETAIL)+1 ;
UPDATE ACTIVITY_LOG_DETAIL SET START_DATE2= (
SELECT MAX(START_DATE)  FROM nbs_rdb.ACTIVITY_LOG_DETAIL);
QUIT;
DATA ACTIVITY_LOG_MASTER;
SET ACTIVITY_LOG_MASTER;
IF ACTIVITY_LOG_MASTER_UID > 0 THEN ACTIVITY_LOG_MASTER_UID= SUM(ACTIVITY_LOG_MASTER_UID+1);
ELSE ACTIVITY_LOG_MASTER_UID= 1;
RUN;
DATA ACTIVITY_LOG_MASTER_LAST;
SET ACTIVITY_LOG_MASTER_LAST;
IF COUNT<1 THEN START_DATE=START_DATEINIT;
ELSE IF START_DATE<START_DATE2 THEN START_DATE=START_DATE2;
RUN;
DATA rdbdata.ACTIVITY_LOG_MASTER_LAST;
SET ACTIVITY_LOG_MASTER_LAST;
RUN;


DATA ACTIVITY_LOG_MASTER_LAST;
SET rdbdata.ACTIVITY_LOG_MASTER_LAST;
	ODSE_COUNT=0;
	RDB_COUNT=0;
RUN;
PROC SQL;
	UPDATE ACTIVITY_LOG_MASTER_LAST SET ODSE_COUNT = (SELECT COUNT(*) FROM nbs_cdc.INTERVENTION);
	UPDATE ACTIVITY_LOG_MASTER_LAST SET RDB_COUNT = (SELECT COUNT(*) FROM nbs_rdb.D_VACCINATION where D_VACCINATION_KEY>1);
QUIT;
DATA ACTIVITY_LOG_MASTER_LAST;
SET ACTIVITY_LOG_MASTER_LAST;;
IF ODSE_COUNT>RDB_COUNT THEN START_DATE = '01JUN1900'D;
RUN;

DATA ACTIVITY_LOG_DETAIL;
SET rdbdata.ACTIVITY_LOG_DETAIL;
RUN;

PROC SQL;
UPDATE ACTIVITY_LOG_DETAIL SET 
START_DATE=DATETIME(),
ACTIVITY_LOG_MASTER_UID= ((SELECT MAX(ACTIVITY_LOG_MASTER_UID) FROM nbs_rdb.ACTIVITY_LOG_MASTER));
QUIT;

PROC SQL;
CREATE TABLE  
	S_VACCINATION_UIDS AS  
SELECT 
	INTERVENTION_UID LENGTH =8 AS PAGE_UID 'PAGE_UID', INTERVENTION.LAST_CHG_TIME FROM nbs_cdc.INTERVENTION
	INNER JOIN nbs_cdc.NBS_ACT_ENTITY ON NBS_ACT_ENTITY.ACT_UID = INTERVENTION.INTERVENTION_UID
WHERE NBS_ACT_ENTITY.TYPE_CD='SubOfVacc'
AND INTERVENTION.LAST_CHG_TIME> (SELECT  MAX(START_DATE) FROM nbs_rdb.ACTIVITY_LOG_DETAIL WHERE PROCESS_UID IN (SELECT PROCESS_UID FROM nbs_rdb.ETL_PROCESS WHERE PROCESS_NAME='D_VACCINATION'));
QUIT;
/*
PROC SQL;
CREATE TABLE  
	S_VACCINATION_UIDS AS  
SELECT 
	INTERVENTION_UID LENGTH =8 AS VACCINATION_UID 'VACCINATION_UID', LAST_CHG_TIME FROM nbs_cdc.INTERVENTION;
QUIT;
*/
PROC SQL;
CREATE TABLE VACCINATION_INIT AS
	SELECT INTERVENTION_UID AS VACCINATION_UID 'VACCINATION_UID',INTERVENTION.MATERIAL_CD,
INTERVENTION.LOCAL_ID	AS	LOCAL_ID 'LOCAL_ID', 
 ADD_TIME,ADD_USER_ID, INTERVENTION.LAST_CHG_TIME AS LAST_CHG_TIME ',LAST_CHG_TIME', LAST_CHG_USER_ID AS LAST_CHG_USER_ID 'LAST_CHG_USER_ID', 
RECORD_STATUS_TIME AS RECORD_STATUS_TIME 'RECORD_STATUS_TIME', VERSION_CTRL_NBR AS VERSION_CTRL_NBR 'VERSION_CTRL_NBR', 
INTERVENTION.ACTIVITY_FROM_TIME	AS	VACCINE_ADMINISTERED_DATE 'VACCINE_ADMINISTERED_DATE',
INTERVENTION.TARGET_SITE_CD,
INTERVENTION.AGE_AT_VACC	AS	AGE_AT_VACCINATION 'AGE_AT_VACCINATION',
INTERVENTION.AGE_AT_VACC_UNIT_CD,
INTERVENTION.VACC_MFGR_CD,
INTERVENTION.ELECTRONIC_IND,
INTERVENTION.MATERIAL_LOT_NM	AS	VACCINE_LOT_NUMBER_TXT 'VACCINE_LOT_NUMBER_TXT',
INTERVENTION.MATERIAL_EXPIRATION_TIME	AS	VACCINE_EXPIRATION_DT 'VACCINE_EXPIRATION_DT',
INTERVENTION.VACC_DOSE_NBR	AS	VACCINE_DOSE_NBR 'VACCINE_DOSE_NBR',
INTERVENTION.VACC_INFO_SOURCE_CD LENGTH =8,
INTERVENTION.RECORD_STATUS_CD	AS	RECORD_STATUS_CD 'RECORD_STATUS_CD' FROM nbs_cdc.INTERVENTION
	INNER JOIN  S_VACCINATION_UIDS ON
		INTERVENTION.INTERVENTION_UID =S_VACCINATION_UIDS.PAGE_UID;
QUIT;
  
OPTIONS FMTSEARCH=(NBSFMT);
DATA VACCINATION_INIT;
SET VACCINATION_INIT;
	VACCINE_INFO_SOURCE= PUT(VACC_INFO_SOURCE_CD, $VAC147F.);
	AGE_AT_VACCINATION_UNIT= PUT(AGE_AT_VACC_UNIT_CD, $VAC106F.);
	VACCINATION_ANATOMICAL_SITE= PUT(TARGET_SITE_CD, $VAC104F.);
	VACCINATION_ADMINISTERED_NM= PUT(MATERIAL_CD, $VAC101F.);
	VACCINE_MANUFACTURER_NM= PUT(VACC_MFGR_CD, $VAC107F.);
	DROP VACC_INFO_SOURCE_CD AGE_AT_VACC_UNIT_CD TARGET_SITE_CD MATERIAL_CD VACC_MFGR_CD;
RUN;


%PROCESS_INCR_STAGING_DATA(NBS_ANSWER, 'D_VACCINATION',S_VACCINATION_UIDS, PAGE_UID, 'NBS_ANSWER.ANSWER_TXT', ACT_UID,NBS_ANSWER_UID);

PROC SQL;
CREATE TABLE 
	S_VACCINATION AS 
SELECT * 
FROM 
	VACCINATION_INIT
	LEFT OUTER JOIN NUMERIC_DATA_OUT
ON 
	NUMERIC_DATA_OUT.PAGE_UID=VACCINATION_INIT.VACCINATION_UID
	LEFT OUTER  JOIN DATE_DATA_OUT 
ON 
	DATE_DATA_OUT.PAGE_UID=VACCINATION_INIT.VACCINATION_UID
	LEFT OUTER  JOIN CODED_DATA_OUT
ON 
	CODED_DATA_OUT.PAGE_UID=VACCINATION_INIT.VACCINATION_UID
	LEFT OUTER  JOIN TEXT_DATA_OUT 
ON 
	TEXT_DATA_OUT.PAGE_UID=VACCINATION_INIT.VACCINATION_UID;
QUIT;

DATA S_VACCINATION;
SET S_VACCINATION(DROP=_NAME_ _LABEL_);
RUN;

%MACRO ASSIGN_ADDITIONAL_KEY (DS, KEY);
 DATA &DS;
  IF &KEY=1 THEN OUTPUT;
  SET &DS;
	&KEY+1;
	OUTPUT;
 RUN;
%MEND ASSIGN_ADDITIONAL_KEY;

%INCREMENTAL(L_VACCINATION_N,L_VACCINATION,L_VACCINATION_E, S_VACCINATION, 'S_VACCINATION',VACCINATION_UID,D_VACCINATION_KEY);

%PAGE_DYNAMIC_LOOKUP(S_VACCINATION,D_VACCINATION_N, L_VACCINATION_N,L_VACCINATION_E, D_VACCINATION,'D_VACCINATION', D_VACCINATION_KEY, VACCINATION_UID);

/*%ProcessRepeatData(S_VACCINATION_UIDS, NBS_ANSWER, NBS_ANSWER_UID, S_VACCINATION_REPEAT, L_VACCINATION_REPEAT, D_VACCINATION_REPEAT, D_VACCINATION_REPEAT_KEY);*/
PROC SQL;
	DROP TABLE nbs_rdb.F_VACCINATION;
QUIT;

PROC SQL;
CREATE TABLE PARTICIPATION_INIT AS 
SELECT L_VACCINATION.D_VACCINATION_KEY,
NBS_ACT_ENTITY.ACT_UID, NBS_ACT_ENTITY.ENTITY_UID, TYPE_CD 
FROM nbs_rdb.L_VACCINATION 
LEFT OUTER JOIN 
nbs_cdc.NBS_ACT_ENTITY ON
L_VACCINATION.VACCINATION_UID=NBS_ACT_ENTITY.ACT_UID;
QUIT;

PROC SQL;
CREATE TABLE PARTICIPATION_PAT AS SELECT D_VACCINATION_KEY, PATIENT_KEY, PARTICIPATION_INIT.ACT_UID 
FROM PARTICIPATION_INIT INNER JOIN
nbs_rdb.L_PATIENT ON L_PATIENT.PATIENT_UID=PARTICIPATION_INIT.ENTITY_UID WHERE TYPE_CD='SubOfVacc';
QUIT;
PROC SORT DATA=PARTICIPATION_PAT NODUPKEY OUT=PARTICIPATION_PAT; BY D_VACCINATION_KEY; RUN;

PROC SQL;
CREATE TABLE PARTICIPATION_PRV AS SELECT D_VACCINATION_KEY, PROVIDER_KEY AS VACCINE_GIVEN_BY_KEY 'VACCINE_GIVEN_BY_KEY', ACT_UID  FROM 
PARTICIPATION_INIT INNER JOIN
nbs_rdb.L_PROVIDER
ON PARTICIPATION_INIT.ENTITY_UID=L_PROVIDER.PROVIDER_UID WHERE TYPE_CD='PerformerOfVacc';
QUIT;
PROC SORT DATA=PARTICIPATION_PRV NODUPKEY OUT=PARTICIPATION_PRV; BY D_VACCINATION_KEY; RUN;


PROC SQL;
CREATE TABLE PARTICIPATION_ORG AS SELECT D_VACCINATION_KEY, ORGANIZATION_KEY AS VACCINE_GIVEN_BY_ORG_KEY 'VACCINE_GIVEN_BY_ORG_KEY', ACT_UID  FROM 
PARTICIPATION_INIT INNER JOIN
nbs_rdb.L_ORGANIZATION
ON PARTICIPATION_INIT.ENTITY_UID=L_ORGANIZATION.ORGANIZATION_UID WHERE TYPE_CD='PerformerOfVacc';
QUIT;
PROC SORT DATA=PARTICIPATION_ORG NODUPKEY OUT=PARTICIPATION_ORG; BY D_VACCINATION_KEY; RUN;

PROC SQL;
CREATE TABLE VACCINATION_FACT_INIT AS SELECT PARTICIPATION_PAT.ACT_UID, PARTICIPATION_PAT.PATIENT_KEY,PARTICIPATION_PAT.D_VACCINATION_KEY, PARTICIPATION_PRV.VACCINE_GIVEN_BY_KEY, PARTICIPATION_ORG.VACCINE_GIVEN_BY_ORG_KEY
FROM PARTICIPATION_PAT LEFT OUTER JOIN PARTICIPATION_PRV ON
PARTICIPATION_PAT.D_VACCINATION_KEY = PARTICIPATION_PRV.D_VACCINATION_KEY
LEFT OUTER JOIN PARTICIPATION_ORG ON
PARTICIPATION_PAT.D_VACCINATION_KEY = PARTICIPATION_ORG.D_VACCINATION_KEY;
QUIT;
PROC SORT DATA=VACCINATION_FACT_INIT NODUPKEY OUT=VACCINATION_FACT_INIT; BY D_VACCINATION_KEY; RUN;
PROC SQL;
DROP TABLE PARTICIPATION_PAT;
DROP TABLE PARTICIPATION_PRV;
DROP TABLE PARTICIPATION_ORG;
QUIT;
DATA VACCINATION_FACT_INIT;
SET VACCINATION_FACT_INIT;
DROP 	VACCINATION_UID PHC_UID VACCINATION_UID ACT_UID ENTITY_UID  PATIENT_UID;
IF (VACCINE_GIVEN_BY_KEY=.) THEN VACCINE_GIVEN_BY_KEY=1;
IF(VACCINE_GIVEN_BY_ORG_KEY=.) THEN VACCINE_GIVEN_BY_ORG_KEY=1;
IF(D_VACCINATION_REPEAT_KEY=.) THEN D_VACCINATION_REPEAT_KEY=1;
IF(PATIENT_KEY=.) THEN PATIENT_KEY=1;
RUN;


PROC SQL;
CREATE TABLE VACCINATION_PHC_COLL 
AS SELECT TARGET_ACT_UID AS PHC_UID 'PHC_UID', 	D_VACCINATION_KEY
FROM nbs_cdc.ACT_RELATIONSHIP 
INNER JOIN 	nbs_rdb.L_VACCINATION
ON	ACT_RELATIONSHIP.SOURCE_ACT_UID =L_VACCINATION.VACCINATION_UID WHERE  ACT_RELATIONSHIP.TYPE_CD='1180';

CREATE TABLE PHC_INVESTIGATION_KEY 
	AS SELECT VACCINATION_PHC_COLL.*, INVESTIGATION_KEY
	FROM VACCINATION_PHC_COLL INNER JOIN 
	nbs_rdb.L_INVESTIGATION ON
 	VACCINATION_PHC_COLL.PHC_UID= L_INVESTIGATION.CASE_UID;
QUIT;

PROC SQL;
CREATE TABLE F_VACCINATION AS SELECT * FROM VACCINATION_FACT_INIT
LEFT OUTER JOIN PHC_INVESTIGATION_KEY ON 
VACCINATION_FACT_INIT.D_VACCINATION_KEY = PHC_INVESTIGATION_KEY.D_VACCINATION_KEY;
QUIT;

DATA F_VACCINATION;
SET F_VACCINATION;
IF(INVESTIGATION_KEY=.) THEN INVESTIGATION_KEY=1;
DROP PHC_UID;
RUN;

%DBLOAD (F_VACCINATION, F_VACCINATION);

PROC DATASETS LIB=WORK MEMTYPE=DATA
		KILL;
RUN;