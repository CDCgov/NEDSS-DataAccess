USE rdb;
GO

 select
  name AS 'Constraint',
  OBJECT_NAME(parent_object_id) AS 'Table',
  OBJECT_NAME(referenced_object_id) AS 'Referenced Table',
  is_disabled,
  is_not_trusted
FROM sys.foreign_keys
WHERE is_disabled = 1;
go

DECLARE @sql nvarchar(max) = N'';

;WITH x AS 
(
  SELECT DISTINCT obj = 
      QUOTENAME(OBJECT_SCHEMA_NAME(parent_object_id)) + '.' 
    + QUOTENAME(OBJECT_NAME(parent_object_id)) 
  FROM sys.foreign_keys
)
SELECT @sql += N'ALTER TABLE ' + obj + N' NOCHECK CONSTRAINT ALL;
' FROM x;

EXEC sys.sp_executesql @sql;

go


IF OBJECT_ID ('dbo.COVID_CASE_DATAMART') IS NOT NULL DROP TABLE 	dbo.COVID_CASE_DATAMART	;
IF OBJECT_ID ('dbo.COVID_LAB_AOE_ST') IS NOT NULL DROP TABLE 	dbo.COVID_LAB_AOE_ST	;
IF OBJECT_ID ('dbo.COVID_LAB_DATAMART') IS NOT NULL DROP TABLE 	dbo.COVID_LAB_DATAMART	;
IF OBJECT_ID ('dbo.COVID_LAB_RSLT_TYPE') IS NOT NULL DROP TABLE 	dbo.COVID_LAB_RSLT_TYPE	;
IF OBJECT_ID ('dbo.COVID_MERGED_CASE_LIST') IS NOT NULL DROP TABLE 	dbo.COVID_MERGED_CASE_LIST	;
IF OBJECT_ID ('dbo.COVID_VACCINATION_DATAMART') IS NOT NULL DROP TABLE 	dbo.COVID_VACCINATION_DATAMART	;

IF OBJECT_ID ('dbo.DATAMART_REFRESH_ACTIVITY_LOG') IS NOT NULL
	DELETE from DATAMART_REFRESH_ACTIVITY_LOG where STORED_PROCEDURE_NM='SP_COVID_VACCINATION_DATAMART'
GO
IF OBJECT_ID ('dbo.DATAMART_REFRESH_ACTIVITY_LOG') IS NOT NULL
	INSERT INTO RDB.dbo.DATAMART_REFRESH_ACTIVITY_LOG (STORED_PROCEDURE_NM ,DATAMART_NM,DATAMART_ROW_COUNT, REFRESH_TIME) VALUES('SP_COVID_VACCINATION_DATAMART','COVID_VACCINATION_DATAMART', 0,'01/01/2020');
GO

IF OBJECT_ID ('dbo.DATAMART_REFRESH_ACTIVITY_LOG') IS NOT NULL
DELETE FROM DATAMART_REFRESH_ACTIVITY_LOG WHERE STORED_PROCEDURE_NM = 'SP_COVID_CASE_DATAMART';
GO

IF OBJECT_ID ('dbo.DATAMART_REFRESH_ACTIVITY_LOG') IS NOT NULL
INSERT INTO RDB.dbo.DATAMART_REFRESH_ACTIVITY_LOG(STORED_PROCEDURE_NM,  DATAMART_NM,  DATAMART_ROW_COUNT,  REFRESH_TIME)
VALUES('SP_COVID_CASE_DATAMART',  'COVID_CASE_DATAMART',  0,  '01/01/2020');
GO

IF OBJECT_ID ('dbo.DATAMART_REFRESH_ACTIVITY_LOG') IS NOT NULL
DELETE from DATAMART_REFRESH_ACTIVITY_LOG where STORED_PROCEDURE_NM='SP_COVID_LAB_DATAMART'
GO

IF OBJECT_ID ('dbo.DATAMART_REFRESH_ACTIVITY_LOG') IS NOT NULL
INSERT INTO RDB.dbo.DATAMART_REFRESH_ACTIVITY_LOG (STORED_PROCEDURE_NM ,DATAMART_NM,DATAMART_ROW_COUNT, REFRESH_TIME) VALUES('SP_COVID_LAB_DATAMART','COVID_LAB_DATAMART', 0,'01/01/2020');           
GO

IF OBJECT_ID('rdb.dbo.COVID_LAB_CORE_DATA', 'U') IS NOT NULL
	DROP TABLE rdb.dbo.COVID_LAB_CORE_DATA;
IF OBJECT_ID('rdb.dbo.COVID_LAB_PATIENT_DATA', 'U') IS NOT NULL
	DROP TABLE rdb.dbo.COVID_LAB_PATIENT_DATA;
IF OBJECT_ID('rdb.dbo.COVID_LAB_ENTITIES_DATA', 'U') IS NOT NULL
	DROP TABLE rdb.dbo.COVID_LAB_ENTITIES_DATA;
IF OBJECT_ID('rdb.dbo.COVID_LAB_ASSOCIATIONS', 'U') IS NOT NULL
	DROP TABLE rdb.dbo.COVID_LAB_ASSOCIATIONS;
IF OBJECT_ID('COVID_MERGED_LAB_LIST') IS NOT NULL
	DROP TABLE COVID_MERGED_LAB_LIST;
go

IF OBJECT_ID('RDB.dbo.TEMP_UPDATED_LAB_INV_MAP', 'U') IS NOT NULL  
DROP TABLE RDB.dbo.TEMP_UPDATED_LAB_INV_MAP; 
GO  
IF OBJECT_ID ('rdb.dbo.REF_FORMCODE_TRANSLATION') IS NOT NULL DROP TABLE REF_FORMCODE_TRANSLATION;
GO
 
IF OBJECT_ID ('dbo.ACTIVITY_LOG_MASTER_LAST_SAS') IS NOT NULL DROP TABLE 	dbo.ACTIVITY_LOG_MASTER_LAST_SAS; 
 GO 

IF OBJECT_ID ('dbo.ACTIVITY_STATUS') IS NOT NULL truncate table dbo.ACTIVITY_STATUS; 
 GO 
IF OBJECT_ID ('dbo.AGGREGATE_REPORT_DATAMART') IS NOT NULL truncate table dbo.AGGREGATE_REPORT_DATAMART; 
 GO 
IF OBJECT_ID ('dbo.CONFIRMATION_METHOD_GROUP') IS NOT NULL truncate table dbo.CONFIRMATION_METHOD_GROUP; 
 GO 

IF OBJECT_ID ('dbo.D_CASE_MANAGEMENT') IS NOT NULL truncate table dbo.D_CASE_MANAGEMENT; 
 GO 
IF OBJECT_ID ('dbo.D_CONTACT_RECORD') IS NOT NULL truncate table dbo.D_CONTACT_RECORD; 
 GO 
IF OBJECT_ID ('dbo.D_INTERVIEW') IS NOT NULL truncate table dbo.D_INTERVIEW; 
 GO 
IF OBJECT_ID ('dbo.D_INTERVIEW_NOTE') IS NOT NULL truncate table dbo.D_INTERVIEW_NOTE; 
 GO 
IF OBJECT_ID ('dbo.D_INV_PLACE_REPEAT') IS NOT NULL truncate table dbo.D_INV_PLACE_REPEAT; 
 GO 
IF OBJECT_ID ('dbo.D_LAB_TEST_N') IS NOT NULL DROP TABLE 	dbo.D_LAB_TEST_N; 
 GO 
IF OBJECT_ID ('dbo.D_LDF_META_DATA') IS NOT NULL truncate table dbo.D_LDF_META_DATA; 
 GO 
IF OBJECT_ID ('dbo.DATAMART_REFRESH_ACTIVITY_LOG') IS NOT NULL truncate table dbo.DATAMART_REFRESH_ACTIVITY_LOG; 
 GO 
IF OBJECT_ID ('dbo.DCIPHER_CSV_FORMAT') IS NOT NULL DROP TABLE 	dbo.DCIPHER_CSV_FORMAT; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_ALASKA_COVID_PAGE') IS NOT NULL DROP TABLE 	dbo.DM_INV_ALASKA_COVID_PAGE; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_ARBO_HUMAN') IS NOT NULL DROP TABLE 	dbo.DM_INV_ARBO_HUMAN; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_BABESIOSIS_PAGE') IS NOT NULL DROP TABLE 	dbo.DM_INV_BABESIOSIS_PAGE; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_CONG_SYPHILIS') IS NOT NULL DROP TABLE 	dbo.DM_INV_CONG_SYPHILIS; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_COVID19') IS NOT NULL DROP TABLE 	dbo.DM_INV_COVID19; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_GENERIC_V2') IS NOT NULL DROP TABLE 	dbo.DM_INV_GENERIC_V2; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_HEPATITIS_A_ACUTE') IS NOT NULL DROP TABLE 	dbo.DM_INV_HEPATITIS_A_ACUTE; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_HEPATITIS_B_C_ACUTE') IS NOT NULL DROP TABLE 	dbo.DM_INV_HEPATITIS_B_C_ACUTE; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_HEPATITIS_B_C_CHRONIC') IS NOT NULL DROP TABLE 	dbo.DM_INV_HEPATITIS_B_C_CHRONIC; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_HEPATITIS_B_PERINATAL') IS NOT NULL DROP TABLE 	dbo.DM_INV_HEPATITIS_B_PERINATAL; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_HEPATITIS_CORE') IS NOT NULL DROP TABLE 	dbo.DM_INV_HEPATITIS_CORE; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_HIV') IS NOT NULL DROP TABLE 	dbo.DM_INV_HIV; 
 GO 
IF OBJECT_ID ('dbo.DM_INV_STD') IS NOT NULL DROP TABLE 	dbo.DM_INV_STD; 
 GO 
IF OBJECT_ID ('dbo.ETL_HEALTH_CHECK_PAT_DATA') IS NOT NULL truncate table dbo.ETL_HEALTH_CHECK_PAT_DATA; 
 GO 
IF OBJECT_ID ('dbo.EVENT_METRIC_INC') IS NOT NULL truncate table dbo.EVENT_METRIC_INC; 
 GO 
IF OBJECT_ID ('dbo.F_CONTACT_RECORD_CASE') IS NOT NULL truncate table dbo.F_CONTACT_RECORD_CASE; 
 GO 
IF OBJECT_ID ('dbo.F_INTERVIEW_CASE') IS NOT NULL truncate table dbo.F_INTERVIEW_CASE; 
 GO 
IF OBJECT_ID ('dbo.F_VACCINATION') IS NOT NULL truncate table dbo.F_VACCINATION; 
 GO 
IF OBJECT_ID ('dbo.HEPATITIS_DATAMART') IS NOT NULL truncate table dbo.HEPATITIS_DATAMART; 
 GO 
IF OBJECT_ID ('dbo.INIT') IS NOT NULL DROP TABLE 	dbo.INIT; 
 GO 
IF OBJECT_ID ('dbo.INV_HIV') IS NOT NULL DROP TABLE 	dbo.INV_HIV; 
 GO 
IF OBJECT_ID ('dbo.INV_SUMM_DATAMART') IS NOT NULL truncate table dbo.INV_SUMM_DATAMART; 
 GO 
IF OBJECT_ID ('dbo.LAB101') IS NOT NULL TRUNCATE TABLE dbo.LAB101; 
 GO 
IF OBJECT_ID ('dbo.L_VACCINATION') IS NOT NULL truncate table dbo.L_VACCINATION; 
 GO 
IF OBJECT_ID ('dbo.D_VACCINATION') IS NOT NULL truncate table dbo.D_VACCINATION; 
 GO 

IF OBJECT_ID ('dbo.job_batch_rebuild_log') IS NOT NULL truncate table dbo.job_batch_rebuild_log; 
 GO 
IF OBJECT_ID ('dbo.job_flow_log') IS NOT NULL truncate table dbo.job_flow_log; 
 GO 
IF OBJECT_ID ('dbo.L_CASE_MANAGEMENT') IS NOT NULL truncate table dbo.L_CASE_MANAGEMENT; 
 GO 
IF OBJECT_ID ('dbo.L_CONFIRMATION_METHOD') IS NOT NULL truncate table dbo.L_CONFIRMATION_METHOD; 
 GO 
IF OBJECT_ID ('dbo.L_CONTACT_RECORD') IS NOT NULL truncate table dbo.L_CONTACT_RECORD; 
 GO 
IF OBJECT_ID ('dbo.L_INTERVIEW') IS NOT NULL truncate table dbo.L_INTERVIEW; 
 GO 
IF OBJECT_ID ('dbo.L_INTERVIEW_NOTE') IS NOT NULL truncate table dbo.L_INTERVIEW_NOTE; 
 GO 
IF OBJECT_ID ('dbo.L_INVESTIGATION') IS NOT NULL truncate table dbo.L_INVESTIGATION; 
 GO 
IF OBJECT_ID ('dbo.L_LAB_TEST') IS NOT NULL truncate table dbo.L_LAB_TEST; 
 GO 
IF OBJECT_ID ('dbo.L_ORGANIZATION') IS NOT NULL truncate table dbo.L_ORGANIZATION; 
 GO 
IF OBJECT_ID ('dbo.L_PROVIDER') IS NOT NULL truncate table dbo.L_PROVIDER; 
 GO 
IF OBJECT_ID ('dbo.LAB_RESULT_COMMENT') IS NOT NULL truncate table dbo.LAB_RESULT_COMMENT; 
 GO 
IF OBJECT_ID ('dbo.LAB_RESULT_VAL') IS NOT NULL truncate table dbo.LAB_RESULT_VAL; 
 GO 
IF OBJECT_ID ('dbo.LAB_RPT_USER_COMMENT') IS NOT NULL truncate table  dbo.LAB_RPT_USER_COMMENT; 
 GO 
IF OBJECT_ID ('dbo.LAB_TEST_RESULT') IS NOT NULL truncate table dbo.LAB_TEST_RESULT; 
 GO 
 
IF OBJECT_ID ('dbo.lab_test_SAS') IS NOT NULL DROP TABLE 	dbo.lab_test_SAS; 
 GO 
IF OBJECT_ID ('dbo.lab_test4_SAS') IS NOT NULL DROP TABLE 	dbo.lab_test4_SAS; 
 GO 
IF OBJECT_ID ('dbo.LAB100') IS NOT NULL TRUNCATE TABLE dbo.LAB100; 
 GO 
IF OBJECT_ID ('dbo.LABTEST_RESULTS_VAL_COMMENT1') IS NOT NULL DROP TABLE 	dbo.LABTEST_RESULTS_VAL_COMMENT1; 
 GO 
IF OBJECT_ID ('dbo.LABTEST_RESULTS_VAL1') IS NOT NULL DROP TABLE 	dbo.LABTEST_RESULTS_VAL1; 
 GO 
IF OBJECT_ID ('dbo.LDF_DATAMART_COLUMN_REF') IS NOT NULL truncate table dbo.LDF_DATAMART_COLUMN_REF; 
 GO 
IF OBJECT_ID ('dbo.LDF_VACCINE_PREVENT_DISEASES') IS NOT NULL truncate table dbo.LDF_VACCINE_PREVENT_DISEASES; 
 GO 
IF OBJECT_ID ('dbo.MORBIDITY_REPORT_EVENT') IS NOT NULL truncate table dbo.MORBIDITY_REPORT_EVENT; 
 GO 
IF OBJECT_ID ('dbo.tmp_morb_Rpt_User_Comment') IS NOT NULL DROP TABLE 	dbo.tmp_morb_Rpt_User_Comment; 
 GO 
IF OBJECT_ID ('dbo.morb_Rpt_User_Comment') IS NOT NULL TRUNCATE TABLE 	dbo.morb_Rpt_User_Comment; 
 GO 
 
IF OBJECT_ID ('dbo.MORBIDITY_REPORT') IS NOT NULL delete from  dbo.MORBIDITY_REPORT; 
 GO 
IF OBJECT_ID ('dbo.NBS_PAGE') IS NOT NULL truncate table dbo.NBS_PAGE; 
 GO 
IF OBJECT_ID ('dbo.Phc_keys') IS NOT NULL truncate table dbo.Phc_keys; 
 GO 
IF OBJECT_ID ('dbo.PHC_UIDS') IS NOT NULL truncate table dbo.PHC_UIDS; 
 GO 
IF OBJECT_ID ('dbo.RESULT_COMMENT_GROUP') IS NOT NULL delete from  dbo.RESULT_COMMENT_GROUP; 
 GO 
IF OBJECT_ID ('dbo.S_CASE_MANAGEMENT') IS NOT NULL truncate table dbo.S_CASE_MANAGEMENT; 
 GO 
IF OBJECT_ID ('dbo.STD_HIV_DATAMART') IS NOT NULL truncate table dbo.STD_HIV_DATAMART; 
 GO 
IF OBJECT_ID ('dbo.SUMM_DATAMART') IS NOT NULL truncate table dbo.SUMM_DATAMART; 
 GO 
IF OBJECT_ID ('dbo.TEST_RESULT_GROUPING') IS NOT NULL delete from  dbo.TEST_RESULT_GROUPING; 
 GO 
IF OBJECT_ID ('dbo.TEST1') IS NOT NULL DROP TABLE 	dbo.TEST1; 
 GO 
IF OBJECT_ID ('dbo.TMP_BothTable') IS NOT NULL DROP TABLE 	dbo.TMP_BothTable; 
 GO 
IF OBJECT_ID ('dbo.TMP_CASE_LAB_DATAMART_MODIFIED') IS NOT NULL DROP TABLE 	dbo.TMP_CASE_LAB_DATAMART_MODIFIED; 
 GO 
IF OBJECT_ID ('dbo.TMP_D_LAB_TEST_N') IS NOT NULL DROP TABLE 	dbo.TMP_D_LAB_TEST_N; 
 GO 
IF OBJECT_ID ('dbo.tmp_DELETEDMORBS') IS NOT NULL DROP TABLE 	dbo.tmp_DELETEDMORBS; 
 GO 
IF OBJECT_ID ('dbo.TMP_F_VACCINATION') IS NOT NULL DROP TABLE 	dbo.TMP_F_VACCINATION; 
 GO 
IF OBJECT_ID ('dbo.TMP_filter_participants') IS NOT NULL DROP TABLE 	dbo.TMP_filter_participants; 
 GO 
IF OBJECT_ID ('dbo.tmp_L_LAB_TEST_N') IS NOT NULL DROP TABLE 	dbo.tmp_L_LAB_TEST_N; 
 GO 
IF OBJECT_ID ('dbo.tmp_LAB_ENTITY1') IS NOT NULL DROP TABLE 	dbo.tmp_LAB_ENTITY1; 
 GO 
IF OBJECT_ID ('dbo.tmp_LAB_ENTITY2') IS NOT NULL DROP TABLE 	dbo.tmp_LAB_ENTITY2; 
 GO 
IF OBJECT_ID ('dbo.tmp_LAB_ORDER_ENTITY') IS NOT NULL DROP TABLE 	dbo.tmp_LAB_ORDER_ENTITY; 
 GO 
IF OBJECT_ID ('dbo.tmp_lab_order_entity_invkeys') IS NOT NULL DROP TABLE 	dbo.tmp_lab_order_entity_invkeys; 
 GO 
IF OBJECT_ID ('dbo.tmp_LAB_ORDER_ENTITY_KEY') IS NOT NULL DROP TABLE 	dbo.tmp_LAB_ORDER_ENTITY_KEY; 
 GO 
IF OBJECT_ID ('dbo.tmp_LAB_ORDER_ENTITY1') IS NOT NULL DROP TABLE 	dbo.tmp_LAB_ORDER_ENTITY1; 
 GO 
IF OBJECT_ID ('dbo.tmp_LAB_ORDER_ENTITY11') IS NOT NULL DROP TABLE 	dbo.tmp_LAB_ORDER_ENTITY11; 
 GO 
IF OBJECT_ID ('dbo.tmp_lab_order_entity11_invkeys') IS NOT NULL DROP TABLE 	dbo.tmp_lab_order_entity11_invkeys; 
 GO 
IF OBJECT_ID ('dbo.tmp_lab_REPORTING_ORG') IS NOT NULL DROP TABLE 	dbo.tmp_lab_REPORTING_ORG; 
 GO 
IF OBJECT_ID ('dbo.tmp_LAB_RESULT_COMMENT') IS NOT NULL DROP TABLE 	dbo.tmp_LAB_RESULT_COMMENT; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_RESULT_VAL') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_RESULT_VAL; 
 GO 
IF OBJECT_ID ('dbo.TMP_Lab_Result_Val_Final') IS NOT NULL DROP TABLE 	dbo.TMP_Lab_Result_Val_Final; 
 GO 
IF OBJECT_ID ('dbo.tmp_LAB_RESULT_VALMODIFIED') IS NOT NULL DROP TABLE 	dbo.tmp_LAB_RESULT_VALMODIFIED; 
 GO 
IF OBJECT_ID ('dbo.tmp_LAB_RESULTS_ORDER_CONTACT1') IS NOT NULL DROP TABLE 	dbo.tmp_LAB_RESULTS_ORDER_CONTACT1; 
 GO 
IF OBJECT_ID ('dbo.tmp_LAB_RESULTS_ORDER_CONTACT2') IS NOT NULL DROP TABLE 	dbo.tmp_LAB_RESULTS_ORDER_CONTACT2; 
 GO 
IF OBJECT_ID ('dbo.TMP_Lab_Rpt_User_Comment') IS NOT NULL DROP TABLE 	dbo.TMP_Lab_Rpt_User_Comment; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST_final') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST_final; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST_final_root_ordered_test_pntr') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST_final_root_ordered_test_pntr; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST_mat_init') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST_mat_init; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST_oth') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST_oth; 
 GO 
IF OBJECT_ID ('dbo.TMP_Lab_Test_Result') IS NOT NULL DROP TABLE 	dbo.TMP_Lab_Test_Result; 
 GO 
IF OBJECT_ID ('dbo.TMP_Lab_Test_Result1') IS NOT NULL DROP TABLE 	dbo.TMP_Lab_Test_Result1; 
 GO 
IF OBJECT_ID ('dbo.TMP_Lab_Test_Result2') IS NOT NULL DROP TABLE 	dbo.TMP_Lab_Test_Result2; 
 GO 
IF OBJECT_ID ('dbo.TMP_Lab_Test_Result3') IS NOT NULL DROP TABLE 	dbo.TMP_Lab_Test_Result3; 
 GO 
IF OBJECT_ID ('dbo.TMP_lab_test_resultInit') IS NOT NULL DROP TABLE 	dbo.TMP_lab_test_resultInit; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST1') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST1; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST1_final') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST1_final; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST1_final_order') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST1_final_order; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST1_final_orderuid') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST1_final_orderuid; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST1_final_result') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST1_final_result; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST1_final_testuid') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST1_final_testuid; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST1_testuid') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST1_testuid; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST1_TMP') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST1_TMP; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST1_uid') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST1_uid; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST1_uid2') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST1_uid2; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST2') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST2; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST3') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST3; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TEST4') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TEST4; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TESTinit') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TESTinit; 
 GO 
IF OBJECT_ID ('dbo.TMP_LAB_TESTinit_a') IS NOT NULL DROP TABLE 	dbo.TMP_LAB_TESTinit_a; 
 GO 
IF OBJECT_ID ('dbo.TMP_LabReportMorb') IS NOT NULL DROP TABLE 	dbo.TMP_LabReportMorb; 
 GO 
IF OBJECT_ID ('dbo.TMP_LABTEST_LABTESTRESULT') IS NOT NULL DROP TABLE 	dbo.TMP_LABTEST_LABTESTRESULT; 
 GO 
IF OBJECT_ID ('dbo.tmp_LABTEST_LOINC') IS NOT NULL DROP TABLE 	dbo.tmp_LABTEST_LOINC; 
 GO 
IF OBJECT_ID ('dbo.TMP_LABTEST_ORDER') IS NOT NULL DROP TABLE 	dbo.TMP_LABTEST_ORDER; 
 GO 
IF OBJECT_ID ('dbo.tmp_LABTEST_ORDER1') IS NOT NULL DROP TABLE 	dbo.tmp_LABTEST_ORDER1; 
 GO 
IF OBJECT_ID ('dbo.TMP_LABTEST_RESULT') IS NOT NULL DROP TABLE 	dbo.TMP_LABTEST_RESULT; 
 GO 
IF OBJECT_ID ('dbo.tmp_LABTEST_RESULTS_VAL') IS NOT NULL DROP TABLE 	dbo.tmp_LABTEST_RESULTS_VAL; 
 GO 
IF OBJECT_ID ('dbo.tmp_LABTEST_RESULTS_VAL_COMMENT') IS NOT NULL DROP TABLE 	dbo.tmp_LABTEST_RESULTS_VAL_COMMENT; 
 GO 
IF OBJECT_ID ('dbo.TMP_LABTEST_RESULTS_VAL_COMMENT1') IS NOT NULL DROP TABLE 	dbo.TMP_LABTEST_RESULTS_VAL_COMMENT1; 
 GO 
IF OBJECT_ID ('dbo.tmp_LABTEST_RESULTS_VAL1') IS NOT NULL DROP TABLE 	dbo.tmp_LABTEST_RESULTS_VAL1; 
 GO 
IF OBJECT_ID ('dbo.TMP_LABTEST_UPDATED') IS NOT NULL DROP TABLE 	dbo.TMP_LABTEST_UPDATED; 
 GO 
IF OBJECT_ID ('dbo.tmp_labtests') IS NOT NULL DROP TABLE 	dbo.tmp_labtests; 
 GO 
IF OBJECT_ID ('dbo.tmp_LABTESTS2') IS NOT NULL DROP TABLE 	dbo.tmp_LABTESTS2; 
 GO 
IF OBJECT_ID ('dbo.tmp_LABTESTS3') IS NOT NULL DROP TABLE 	dbo.tmp_LABTESTS3; 
 GO 
IF OBJECT_ID ('dbo.tmp_LABTESTS4') IS NOT NULL DROP TABLE 	dbo.tmp_LABTESTS4; 
 GO 
IF OBJECT_ID ('dbo.tmp_LABTESTSINIT') IS NOT NULL DROP TABLE 	dbo.tmp_LABTESTSINIT; 
 GO 
IF OBJECT_ID ('dbo.TMP_Merge_Order') IS NOT NULL DROP TABLE 	dbo.TMP_Merge_Order; 
 GO 
IF OBJECT_ID ('dbo.TMP_merged_provider') IS NOT NULL DROP TABLE 	dbo.TMP_merged_provider; 
 GO 
IF OBJECT_ID ('dbo.tmp_MISSING_LOINC_MAP') IS NOT NULL DROP TABLE 	dbo.tmp_MISSING_LOINC_MAP; 
 GO 
IF OBJECT_ID ('dbo.tmp_MISSING_SNOMED_MAP') IS NOT NULL DROP TABLE 	dbo.tmp_MISSING_SNOMED_MAP; 
 GO 
IF OBJECT_ID ('dbo.TMP_Morb_OID') IS NOT NULL DROP TABLE 	dbo.TMP_Morb_OID; 
 GO 
IF OBJECT_ID ('dbo.tmp_Morb_Root') IS NOT NULL DROP TABLE 	dbo.tmp_Morb_Root; 
 GO 
IF OBJECT_ID ('dbo.tmp_MorbFrmQ') IS NOT NULL DROP TABLE 	dbo.tmp_MorbFrmQ; 
 GO 
IF OBJECT_ID ('dbo.tmp_MorbFrmQCoded') IS NOT NULL DROP TABLE 	dbo.tmp_MorbFrmQCoded; 
 GO 
IF OBJECT_ID ('dbo.tmp_MorbFrmQCoded2') IS NOT NULL DROP TABLE 	dbo.tmp_MorbFrmQCoded2; 
 GO 
IF OBJECT_ID ('dbo.tmp_MorbFrmQDate') IS NOT NULL DROP TABLE 	dbo.tmp_MorbFrmQDate; 
 GO 
IF OBJECT_ID ('dbo.tmp_MorbFrmQDate2') IS NOT NULL DROP TABLE 	dbo.tmp_MorbFrmQDate2; 
 GO 
IF OBJECT_ID ('dbo.tmp_MorbFrmQTxt') IS NOT NULL DROP TABLE 	dbo.tmp_MorbFrmQTxt; 
 GO 
IF OBJECT_ID ('dbo.tmp_MorbFrmQTxt2') IS NOT NULL DROP TABLE 	dbo.tmp_MorbFrmQTxt2; 
 GO 
IF OBJECT_ID ('dbo.tmp_Morbidity_Report') IS NOT NULL DROP TABLE 	dbo.tmp_Morbidity_Report; 
 GO 
IF OBJECT_ID ('dbo.tmp_MORBIDITY_REPORT_Event_Final') IS NOT NULL DROP TABLE 	dbo.tmp_MORBIDITY_REPORT_Event_Final; 
 GO 
IF OBJECT_ID ('dbo.TMP_New_Lab_Result_Comment') IS NOT NULL DROP TABLE 	dbo.TMP_New_Lab_Result_Comment; 
 GO 
IF OBJECT_ID ('dbo.TMP_New_Lab_Result_Comment_FINAL') IS NOT NULL DROP TABLE 	dbo.TMP_New_Lab_Result_Comment_FINAL; 
 GO 
IF OBJECT_ID ('dbo.TMP_New_Lab_Result_Comment_grouped') IS NOT NULL DROP TABLE 	dbo.TMP_New_Lab_Result_Comment_grouped; 
 GO 
IF OBJECT_ID ('dbo.TMP_New_Lab_Result_Val') IS NOT NULL DROP TABLE 	dbo.TMP_New_Lab_Result_Val; 
 GO 
IF OBJECT_ID ('dbo.TMP_OBS_REASON') IS NOT NULL DROP TABLE 	dbo.TMP_OBS_REASON; 
 GO 
IF OBJECT_ID ('dbo.TMP_OBS_REASON_FINAL') IS NOT NULL DROP TABLE 	dbo.TMP_OBS_REASON_FINAL; 
 GO 
IF OBJECT_ID ('dbo.TMP_order_test') IS NOT NULL DROP TABLE 	dbo.TMP_order_test; 
 GO 
IF OBJECT_ID ('dbo.tmp_ORDERING_ORG') IS NOT NULL DROP TABLE 	dbo.tmp_ORDERING_ORG; 
 GO 
IF OBJECT_ID ('dbo.TMP_participants') IS NOT NULL DROP TABLE 	dbo.TMP_participants; 
 GO 
IF OBJECT_ID ('dbo.tmp_PERSON_ORDER_PROVIDER') IS NOT NULL DROP TABLE 	dbo.tmp_PERSON_ORDER_PROVIDER; 
 GO 
IF OBJECT_ID ('dbo.TMP_R_Order_to_Result') IS NOT NULL DROP TABLE 	dbo.TMP_R_Order_to_Result; 
 GO 
IF OBJECT_ID ('dbo.TMP_R_Result_to_R_Order') IS NOT NULL DROP TABLE 	dbo.TMP_R_Result_to_R_Order; 
 GO 
IF OBJECT_ID ('dbo.TMP_R_Result_to_R_Order_to_Order') IS NOT NULL DROP TABLE 	dbo.TMP_R_Result_to_R_Order_to_Order; 
 GO 
IF OBJECT_ID ('dbo.tmp_REPORTING_ORG') IS NOT NULL DROP TABLE 	dbo.tmp_REPORTING_ORG; 
 GO 
IF OBJECT_ID ('dbo.TMP_Result_And_R_Result') IS NOT NULL DROP TABLE 	dbo.TMP_Result_And_R_Result; 
 GO 
IF OBJECT_ID ('dbo.tmp_Result_Comment_Group') IS NOT NULL DROP TABLE 	dbo.tmp_Result_Comment_Group; 
 GO 
IF OBJECT_ID ('dbo.TMP_Result_to_Order') IS NOT NULL DROP TABLE 	dbo.TMP_Result_to_Order; 
 GO 
IF OBJECT_ID ('dbo.TMP_s_edx_document') IS NOT NULL DROP TABLE 	dbo.TMP_s_edx_document; 
 GO 
IF OBJECT_ID ('dbo.TMP_s_edx_document1') IS NOT NULL DROP TABLE 	dbo.TMP_s_edx_document1; 
 GO 
IF OBJECT_ID ('dbo.TMP_S_INV_SUMM_DATAMART_INIT') IS NOT NULL DROP TABLE 	dbo.TMP_S_INV_SUMM_DATAMART_INIT; 
 GO 
IF OBJECT_ID ('dbo.tmp_SAS_Morbidity_Report') IS NOT NULL DROP TABLE 	dbo.tmp_SAS_Morbidity_Report; 
 GO 
IF OBJECT_ID ('dbo.tmp_SAS_up_MORBIDITY_RPT_EVNT_lst') IS NOT NULL DROP TABLE 	dbo.tmp_SAS_up_MORBIDITY_RPT_EVNT_lst; 
 GO 
IF OBJECT_ID ('dbo.tmp_SAS_updt_MORBIDITY_REPORT_list') IS NOT NULL DROP TABLE 	dbo.tmp_SAS_updt_MORBIDITY_REPORT_list; 
 GO 
IF OBJECT_ID ('dbo.TMP_TEST_RESULT_GROUPING') IS NOT NULL DROP TABLE 	dbo.TMP_TEST_RESULT_GROUPING; 
 GO 
IF OBJECT_ID ('dbo.TMP_updated_LAB_RPT_USER_COMMENT') IS NOT NULL DROP TABLE 	dbo.TMP_updated_LAB_RPT_USER_COMMENT; 
 GO 
IF OBJECT_ID ('dbo.TMP_updated_LAB_TEST_list') IS NOT NULL DROP TABLE 	dbo.TMP_updated_LAB_TEST_list; 
 GO 
IF OBJECT_ID ('dbo.TMP_updated_LAB_TEST_result_list') IS NOT NULL DROP TABLE 	dbo.TMP_updated_LAB_TEST_result_list; 
 GO 
IF OBJECT_ID ('dbo.TMP_updated_observation_List') IS NOT NULL DROP TABLE 	dbo.TMP_updated_observation_List; 
 GO 
IF OBJECT_ID ('dbo.TMP_updated_participant') IS NOT NULL DROP TABLE 	dbo.TMP_updated_participant; 
 GO 
IF OBJECT_ID ('dbo.TMP_updt_Lab_Result_Comment_list') IS NOT NULL DROP TABLE 	dbo.TMP_updt_Lab_Result_Comment_list; 
 GO 
IF OBJECT_ID ('dbo.TMP_updt_Lab_Result_Val_list') IS NOT NULL DROP TABLE 	dbo.TMP_updt_Lab_Result_Val_list; 
 GO 
IF OBJECT_ID ('dbo.tmp_UPDT_MORB_RPT_USER_COMMENT_LIST') IS NOT NULL DROP TABLE 	dbo.tmp_UPDT_MORB_RPT_USER_COMMENT_LIST; 
 GO 
IF OBJECT_ID ('dbo.tmp_updt_MORBIDITY_REPORT_Event_list') IS NOT NULL DROP TABLE 	dbo.tmp_updt_MORBIDITY_REPORT_Event_list; 
 GO 
IF OBJECT_ID ('dbo.tmp_updt_MORBIDITY_REPORT_list') IS NOT NULL DROP TABLE 	dbo.tmp_updt_MORBIDITY_REPORT_list; 
 GO 
IF OBJECT_ID ('dbo.TMP_updT_Result_Comment_Grp_LIST') IS NOT NULL DROP TABLE 	dbo.TMP_updT_Result_Comment_Grp_LIST; 
 GO 
IF OBJECT_ID ('dbo.TMP_updt_Test_Result_Grouping_LIST') IS NOT NULL DROP TABLE 	dbo.TMP_updt_Test_Result_Grouping_LIST; 
 GO 
IF OBJECT_ID ('dbo.VAR_DATAMART') IS NOT NULL TRUNCATE TABLE 	dbo.VAR_DATAMART; 
 GO


 IF OBJECT_ID ('dbo.CONFIRMATION_METHOD') IS NOT NULL delete from dbo.CONFIRMATION_METHOD; 
 GO 

IF OBJECT_ID('F_S_INV_CASE') IS NOT NULL
    DROP TABLE F_S_INV_CASE;
GO
IF OBJECT_ID('L_INV_ADMINISTRATIVE') IS NOT NULL
    DROP TABLE L_INV_ADMINISTRATIVE;
GO
IF OBJECT_ID('L_INV_CLINICAL') IS NOT NULL
    DROP TABLE L_INV_CLINICAL;
GO
IF OBJECT_ID('L_INV_COMPLICATION') IS NOT NULL
    DROP TABLE L_INV_COMPLICATION;
GO
IF OBJECT_ID('L_INV_CONTACT') IS NOT NULL
    DROP TABLE L_INV_CONTACT;
GO
IF OBJECT_ID('L_INV_DEATH') IS NOT NULL
    DROP TABLE L_INV_DEATH;
GO
IF OBJECT_ID('L_INV_EPIDEMIOLOGY') IS NOT NULL
    DROP TABLE L_INV_EPIDEMIOLOGY;
GO
IF OBJECT_ID('L_INV_HIV') IS NOT NULL
    DROP TABLE L_INV_HIV;
GO
IF OBJECT_ID('L_INV_ISOLATE_TRACKING') IS NOT NULL
    DROP TABLE L_INV_ISOLATE_TRACKING;
GO
IF OBJECT_ID('L_INV_LAB_FINDING') IS NOT NULL
    DROP TABLE L_INV_LAB_FINDING;
GO
IF OBJECT_ID('L_INV_MEDICAL_HISTORY') IS NOT NULL
    DROP TABLE L_INV_MEDICAL_HISTORY;
GO
IF OBJECT_ID('L_INV_MOTHER') IS NOT NULL
    DROP TABLE L_INV_MOTHER;
GO
IF OBJECT_ID('L_INV_OTHER') IS NOT NULL
    DROP TABLE L_INV_OTHER;
GO
IF OBJECT_ID('L_INV_PATIENT_OBS') IS NOT NULL
    DROP TABLE L_INV_PATIENT_OBS;
GO
IF OBJECT_ID('L_INV_PREGNANCY_BIRTH') IS NOT NULL
    DROP TABLE L_INV_PREGNANCY_BIRTH;
GO
IF OBJECT_ID('L_INV_RESIDENCY') IS NOT NULL
    DROP TABLE L_INV_RESIDENCY;
GO
IF OBJECT_ID('L_INV_RISK_FACTOR') IS NOT NULL
    DROP TABLE L_INV_RISK_FACTOR;
GO
IF OBJECT_ID('L_INV_SOCIAL_HISTORY') IS NOT NULL
    DROP TABLE L_INV_SOCIAL_HISTORY;
GO
IF OBJECT_ID('L_INV_STD') IS NOT NULL
    DROP TABLE L_INV_STD;
GO
IF OBJECT_ID('L_INV_SYMPTOM') IS NOT NULL
    DROP TABLE L_INV_SYMPTOM;
GO
IF OBJECT_ID('L_INV_TRAVEL') IS NOT NULL
    DROP TABLE L_INV_TRAVEL;
GO
IF OBJECT_ID('L_INV_TREATMENT') IS NOT NULL
    DROP TABLE L_INV_TREATMENT;
GO
IF OBJECT_ID('L_INV_UNDER_CONDITION') IS NOT NULL
    DROP TABLE L_INV_UNDER_CONDITION;
GO
IF OBJECT_ID('L_INV_VACCINATION') IS NOT NULL
    DROP TABLE L_INV_VACCINATION;
GO
IF OBJECT_ID('F_PAGE_CASE') IS NOT NULL
    DROP TABLE F_PAGE_CASE;
GO
IF OBJECT_ID('D_INV_HIV') IS NOT NULL
    DROP TABLE D_INV_HIV;
GO
IF OBJECT_ID('D_INV_EPIDEMIOLOGY') IS NOT NULL
    DROP TABLE D_INV_EPIDEMIOLOGY;
GO
IF OBJECT_ID('S_INV_EPIDEMIOLOGY') IS NOT NULL
    DROP TABLE S_INV_EPIDEMIOLOGY;
GO
IF OBJECT_ID('D_STD_LAB_INV') IS NOT NULL
    DROP TABLE D_STD_LAB_INV;
GO
IF OBJECT_ID('D_INV_ADMINISTRATIVE') IS NOT NULL
    DROP TABLE D_INV_ADMINISTRATIVE;
GO
IF OBJECT_ID('S_INV_ADMINISTRATIVE') IS NOT NULL
    DROP TABLE S_INV_ADMINISTRATIVE;
GO
IF OBJECT_ID('D_INV_CLINICAL') IS NOT NULL
    DROP TABLE D_INV_CLINICAL;
GO
IF OBJECT_ID('S_INV_CLINICAL') IS NOT NULL
    DROP TABLE S_INV_CLINICAL;
GO
IF OBJECT_ID('D_INV_LAB_FINDING') IS NOT NULL
    DROP TABLE D_INV_LAB_FINDING;
GO
IF OBJECT_ID('S_INV_LAB_FINDING') IS NOT NULL
    DROP TABLE S_INV_LAB_FINDING;
GO
IF OBJECT_ID('D_INV_RISK_FACTOR') IS NOT NULL
    DROP TABLE D_INV_RISK_FACTOR;
GO
IF OBJECT_ID('S_INV_RISK_FACTOR') IS NOT NULL
    DROP TABLE S_INV_RISK_FACTOR;
GO
IF OBJECT_ID('D_INVESTIGATION_REPEAT') IS NOT NULL
    DROP TABLE D_INVESTIGATION_REPEAT;
GO
IF OBJECT_ID('S_INVESTIGATION_REPEAT') IS NOT NULL
    DROP TABLE S_INVESTIGATION_REPEAT;
GO
IF OBJECT_ID('D_INV_VACCINATION') IS NOT NULL
    DROP TABLE D_INV_VACCINATION;
GO
IF OBJECT_ID('S_INV_VACCINATION') IS NOT NULL
    DROP TABLE S_INV_VACCINATION;
GO
IF OBJECT_ID('D_INV_TRAVEL') IS NOT NULL
    DROP TABLE D_INV_TRAVEL;
GO
IF OBJECT_ID('S_INV_TRAVEL') IS NOT NULL
    DROP TABLE S_INV_TRAVEL;
GO
IF OBJECT_ID('L_INVESTIGATION_REPEAT') IS NOT NULL
    DROP TABLE L_INVESTIGATION_REPEAT;
GO
IF OBJECT_ID('D_INV_MEDICAL_HISTORY') IS NOT NULL
    DROP TABLE D_INV_MEDICAL_HISTORY;
GO
IF OBJECT_ID('S_INV_MEDICAL_HISTORY') IS NOT NULL
    DROP TABLE S_INV_MEDICAL_HISTORY;
GO
IF OBJECT_ID('D_INV_COMPLICATION') IS NOT NULL
    DROP TABLE D_INV_COMPLICATION;
GO
IF OBJECT_ID('S_INV_COMPLICATION') IS NOT NULL
    DROP TABLE S_INV_COMPLICATION;
GO
IF OBJECT_ID('D_INV_TREATMENT') IS NOT NULL
    DROP TABLE D_INV_TREATMENT;
GO
IF OBJECT_ID('S_INV_TREATMENT') IS NOT NULL
    DROP TABLE S_INV_TREATMENT;
GO
IF OBJECT_ID('D_INV_SYMPTOM') IS NOT NULL
    DROP TABLE D_INV_SYMPTOM;
GO
IF OBJECT_ID('S_INV_SYMPTOM') IS NOT NULL
    DROP TABLE S_INV_SYMPTOM;
GO
IF OBJECT_ID('D_INV_PREGNANCY_BIRTH') IS NOT NULL
    DROP TABLE D_INV_PREGNANCY_BIRTH;
GO
IF OBJECT_ID('S_INV_PREGNANCY_BIRTH') IS NOT NULL
    DROP TABLE S_INV_PREGNANCY_BIRTH;
GO
IF OBJECT_ID('D_INV_MOTHER') IS NOT NULL
    DROP TABLE D_INV_MOTHER;
GO
IF OBJECT_ID('S_INV_MOTHER') IS NOT NULL
    DROP TABLE S_INV_MOTHER;
GO
IF OBJECT_ID('D_INV_PATIENT_OBS') IS NOT NULL
    DROP TABLE D_INV_PATIENT_OBS;
GO
IF OBJECT_ID('S_INV_PATIENT_OBS') IS NOT NULL
    DROP TABLE S_INV_PATIENT_OBS;
GO
IF OBJECT_ID('D_INV_CONTACT') IS NOT NULL
    DROP TABLE D_INV_CONTACT;
GO
IF OBJECT_ID('D_INV_RESIDENCY') IS NOT NULL
    DROP TABLE D_INV_RESIDENCY;
GO
IF OBJECT_ID('D_INV_DEATH') IS NOT NULL
    DROP TABLE D_INV_DEATH;
GO
IF OBJECT_ID('D_INV_HIV') IS NOT NULL
    DROP TABLE D_INV_HIV;
GO
IF OBJECT_ID('D_INV_ISOLATE_TRACKING') IS NOT NULL
    DROP TABLE D_INV_ISOLATE_TRACKING;
GO
IF OBJECT_ID('D_INV_OTHER') IS NOT NULL
    DROP TABLE D_INV_OTHER;
GO
IF OBJECT_ID('D_INV_SOCIAL_HISTORY') IS NOT NULL
    DROP TABLE D_INV_SOCIAL_HISTORY;
GO
IF OBJECT_ID('D_INV_STD') IS NOT NULL
    DROP TABLE D_INV_STD;
GO
IF OBJECT_ID('D_INV_UNDER_CONDITION') IS NOT NULL
    DROP TABLE D_INV_UNDER_CONDITION;
GO
IF OBJECT_ID('S_INV_CONTACT') IS NOT NULL
    DROP TABLE S_INV_CONTACT;
GO
IF OBJECT_ID('S_INV_RESIDENCY') IS NOT NULL
    DROP TABLE S_INV_RESIDENCY;
GO

IF OBJECT_ID('rdb.dbo.D_INV_ADMINISTRATIVE', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_ADMINISTRATIVE]
        ([D_INV_ADMINISTRATIVE_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid]      [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_CLINICAL', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_CLINICAL]
        ([D_INV_CLINICAL_KEY]  [FLOAT] NULL, 
         [nbs_case_answer_uid] [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_COMPLICATION', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_COMPLICATION]
        ([D_INV_COMPLICATION_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid]    [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_CONTACT', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_CONTACT]
        ([D_INV_CONTACT_KEY]   [FLOAT] NULL, 
         [nbs_case_answer_uid] [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_DEATH', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_DEATH]
        ([D_INV_DEATH_KEY]     [FLOAT] NULL, 
         [nbs_case_answer_uid] [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_EPIDEMIOLOGY', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_EPIDEMIOLOGY]
        ([D_INV_EPIDEMIOLOGY_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid]    [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_HIV', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_HIV]
        ([D_INV_HIV_KEY]       [FLOAT] NULL, 
         [nbs_case_answer_uid] [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_ISOLATE_TRACKING', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_ISOLATE_TRACKING]
        ([D_INV_ISOLATE_TRACKING_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid]        [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_LAB_FINDING', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_LAB_FINDING]
        ([D_INV_LAB_FINDING_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid]   [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_MEDICAL_HISTORY', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_MEDICAL_HISTORY]
        ([D_INV_MEDICAL_HISTORY_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid]       [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_MOTHER', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_MOTHER]
        ([D_INV_MOTHER_KEY]    [FLOAT] NULL, 
         [nbs_case_answer_uid] [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_OTHER', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_OTHER]
        ([D_INV_OTHER_KEY]     [FLOAT] NULL, 
         [nbs_case_answer_uid] [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_PATIENT_OBS', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_PATIENT_OBS]
        ([D_INV_PATIENT_OBS_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid]   [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_PREGNANCY_BIRTH', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_PREGNANCY_BIRTH]
        ([D_INV_PREGNANCY_BIRTH_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid]       [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_RESIDENCY', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_RESIDENCY]
        ([D_INV_RESIDENCY_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid] [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_RISK_FACTOR', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_RISK_FACTOR]
        ([D_INV_RISK_FACTOR_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid]   [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_SOCIAL_HISTORY', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_SOCIAL_HISTORY]
        ([D_INV_SOCIAL_HISTORY_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid]      [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_SYMPTOM', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_SYMPTOM]
        ([D_INV_SYMPTOM_KEY]   [FLOAT] NULL, 
         [nbs_case_answer_uid] [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_TRAVEL', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_TRAVEL]
        ([D_INV_TRAVEL_KEY]    [FLOAT] NULL, 
         [nbs_case_answer_uid] [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_TREATMENT', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_TREATMENT]
        ([D_INV_TREATMENT_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid] [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_UNDER_CONDITION', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_UNDER_CONDITION]
        ([D_INV_UNDER_CONDITION_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid]       [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.D_INV_VACCINATION', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[D_INV_VACCINATION]
        ([D_INV_VACCINATION_KEY] [FLOAT] NULL, 
         [nbs_case_answer_uid]   [NUMERIC](21, 0) NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('F_STD_PAGE_CASE') IS NOT NULL
    DROP TABLE F_STD_PAGE_CASE;
GO
IF OBJECT_ID('S_INV_DEATH') IS NOT NULL
    DROP TABLE S_INV_DEATH;
GO
IF OBJECT_ID('S_INV_HIV') IS NOT NULL
    DROP TABLE S_INV_HIV;
GO
IF OBJECT_ID('S_INV_ISOLATE_TRACKING') IS NOT NULL
    DROP TABLE S_INV_ISOLATE_TRACKING;
GO
IF OBJECT_ID('S_INV_OTHER') IS NOT NULL
    DROP TABLE S_INV_OTHER;
GO
IF OBJECT_ID('S_INV_SOCIAL_HISTORY') IS NOT NULL
    DROP TABLE S_INV_SOCIAL_HISTORY;
GO
IF OBJECT_ID('S_INV_STD') IS NOT NULL
    DROP TABLE S_INV_STD;
GO
IF OBJECT_ID('S_INV_UNDER_CONDITION') IS NOT NULL
    DROP TABLE S_INV_UNDER_CONDITION;
GO
IF OBJECT_ID('D_INVESTIGATION_REPEAT_INC') IS NOT NULL
    DROP TABLE D_INVESTIGATION_REPEAT_INC;
IF OBJECT_ID('ENTITY_KEYSTORE_INC') IS NOT NULL
    DROP TABLE ENTITY_KEYSTORE_INC;
IF OBJECT_ID('F_PAGE_CASE_TEMP_INC') IS NOT NULL
    DROP TABLE F_PAGE_CASE_TEMP_INC;
IF OBJECT_ID('F_STD_PAGE_CASE_TEMP_INC') IS NOT NULL
    DROP TABLE F_STD_PAGE_CASE_TEMP_INC;
IF OBJECT_ID('L_INV_ADMINISTRATIVE_INC') IS NOT NULL
    DROP TABLE L_INV_ADMINISTRATIVE_INC;
IF OBJECT_ID('L_INV_CLINICAL_INC') IS NOT NULL
    DROP TABLE L_INV_CLINICAL_INC;
IF OBJECT_ID('L_INV_COMPLICATION_INC') IS NOT NULL
    DROP TABLE L_INV_COMPLICATION_INC;
IF OBJECT_ID('L_INV_CONTACT_INC') IS NOT NULL
    DROP TABLE L_INV_CONTACT_INC;
IF OBJECT_ID('L_INV_DEATH_INC') IS NOT NULL
    DROP TABLE L_INV_DEATH_INC;
IF OBJECT_ID('L_INV_EPIDEMIOLOGY_INC') IS NOT NULL
    DROP TABLE L_INV_EPIDEMIOLOGY_INC;
IF OBJECT_ID('L_INV_HIV_INC') IS NOT NULL
    DROP TABLE L_INV_HIV_INC;
IF OBJECT_ID('L_INV_ISOLATE_TRACKING_INC') IS NOT NULL
    DROP TABLE L_INV_ISOLATE_TRACKING_INC;
IF OBJECT_ID('L_INV_LAB_FINDING_INC') IS NOT NULL
    DROP TABLE L_INV_LAB_FINDING_INC;
IF OBJECT_ID('L_INV_MEDICAL_HISTORY_INC') IS NOT NULL
    DROP TABLE L_INV_MEDICAL_HISTORY_INC;
IF OBJECT_ID('L_INV_MOTHER_INC') IS NOT NULL
    DROP TABLE L_INV_MOTHER_INC;
IF OBJECT_ID('L_INV_OTHER_INC') IS NOT NULL
    DROP TABLE L_INV_OTHER_INC;
IF OBJECT_ID('L_INV_PATIENT_OBS_INC') IS NOT NULL
    DROP TABLE L_INV_PATIENT_OBS_INC;
IF OBJECT_ID('L_INV_PREGNANCY_BIRTH_INC') IS NOT NULL
    DROP TABLE L_INV_PREGNANCY_BIRTH_INC;
IF OBJECT_ID('L_INV_RESIDENCY_INC') IS NOT NULL
    DROP TABLE L_INV_RESIDENCY_INC;
IF OBJECT_ID('L_INV_RISK_FACTOR_INC') IS NOT NULL
    DROP TABLE L_INV_RISK_FACTOR_INC;
IF OBJECT_ID('L_INV_SOCIAL_HISTORY_INC') IS NOT NULL
    DROP TABLE L_INV_SOCIAL_HISTORY_INC;
IF OBJECT_ID('L_INV_SYMPTOM_INC') IS NOT NULL
    DROP TABLE L_INV_SYMPTOM_INC;
IF OBJECT_ID('L_INV_TRAVEL_INC') IS NOT NULL
    DROP TABLE L_INV_TRAVEL_INC;
IF OBJECT_ID('L_INV_TREATMENT_INC') IS NOT NULL
    DROP TABLE L_INV_TREATMENT_INC;
IF OBJECT_ID('L_INV_UNDER_CONDITION_INC') IS NOT NULL
    DROP TABLE L_INV_UNDER_CONDITION_INC;
IF OBJECT_ID('L_INV_VACCINATION_INC') IS NOT NULL
    DROP TABLE L_INV_VACCINATION_INC;
IF OBJECT_ID('L_INVESTIGATION_REPEAT_INC') IS NOT NULL
    DROP TABLE L_INVESTIGATION_REPEAT_INC;
IF OBJECT_ID('S_INV_ADMINISTRATIVE_INC') IS NOT NULL
    DROP TABLE S_INV_ADMINISTRATIVE_INC;
IF OBJECT_ID('S_INV_CLINICAL_INC') IS NOT NULL
    DROP TABLE S_INV_CLINICAL_INC;
IF OBJECT_ID('S_INV_COMPLICATION_INC') IS NOT NULL
    DROP TABLE S_INV_COMPLICATION_INC;
IF OBJECT_ID('S_INV_CONTACT_INC') IS NOT NULL
    DROP TABLE S_INV_CONTACT_INC;
IF OBJECT_ID('S_INV_DEATH_INC') IS NOT NULL
    DROP TABLE S_INV_DEATH_INC;
IF OBJECT_ID('S_INV_EPIDEMIOLOGY_INC') IS NOT NULL
    DROP TABLE S_INV_EPIDEMIOLOGY_INC;
IF OBJECT_ID('S_INV_HIV_INC') IS NOT NULL
    DROP TABLE S_INV_HIV_INC;
IF OBJECT_ID('S_INV_ISOLATE_TRACKING_INC') IS NOT NULL
    DROP TABLE S_INV_ISOLATE_TRACKING_INC;
IF OBJECT_ID('S_INV_LAB_FINDING_INC') IS NOT NULL
    DROP TABLE S_INV_LAB_FINDING_INC;
IF OBJECT_ID('S_INV_MEDICAL_HISTORY_INC') IS NOT NULL
    DROP TABLE S_INV_MEDICAL_HISTORY_INC;
IF OBJECT_ID('S_INV_MOTHER_INC') IS NOT NULL
    DROP TABLE S_INV_MOTHER_INC;
IF OBJECT_ID('S_INV_OTHER_INC') IS NOT NULL
    DROP TABLE S_INV_OTHER_INC;
IF OBJECT_ID('S_INV_PATIENT_OBS_INC') IS NOT NULL
    DROP TABLE S_INV_PATIENT_OBS_INC;
IF OBJECT_ID('S_INV_PREGNANCY_BIRTH_INC') IS NOT NULL
    DROP TABLE S_INV_PREGNANCY_BIRTH_INC;
IF OBJECT_ID('S_INV_RESIDENCY_INC') IS NOT NULL
    DROP TABLE S_INV_RESIDENCY_INC;
IF OBJECT_ID('S_INV_RISK_FACTOR_INC') IS NOT NULL
    DROP TABLE S_INV_RISK_FACTOR_INC;
IF OBJECT_ID('S_INV_SOCIAL_HISTORY_INC') IS NOT NULL
    DROP TABLE S_INV_SOCIAL_HISTORY_INC;
IF OBJECT_ID('S_INV_SYMPTOM_INC') IS NOT NULL
    DROP TABLE S_INV_SYMPTOM_INC;
IF OBJECT_ID('S_INV_TRAVEL_INC') IS NOT NULL
    DROP TABLE S_INV_TRAVEL_INC;
IF OBJECT_ID('S_INV_TREATMENT_INC') IS NOT NULL
    DROP TABLE S_INV_TREATMENT_INC;
IF OBJECT_ID('S_INV_UNDER_CONDITION_INC') IS NOT NULL
    DROP TABLE S_INV_UNDER_CONDITION_INC;
IF OBJECT_ID('S_INV_VACCINATION_INC') IS NOT NULL
    DROP TABLE S_INV_VACCINATION_INC;
IF OBJECT_ID('S_INVESTIGATION_REPEAT_INC') IS NOT NULL
    DROP TABLE S_INVESTIGATION_REPEAT_INC;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_COUNTY_TABLE_DESC_REPT;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_REPT_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_COUNTY_TABLE_DESC_REPT_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_COUNTY_TABLE_REPT;
END;
IF OBJECT_ID('rdb.dbo.CODED_DATA_REPT_OUT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_DATA_REPT_OUT;
END;
IF OBJECT_ID('rdb.dbo.CODED_METADATA_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_METADATA_REPT;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_TABLE_DESC_REPT;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_REPT_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_TABLE_DESC_REPT_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_TABLE_MERGED_REPT;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTH_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_TABLE_OTH_REPT;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_TABLE_REPT;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_TABLE_SNTEMP_REPT;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_REPT;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_REPT;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_TABLE_SNTEMP_TRANS_REPT;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_TABLE_TEMP_REPT;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.DATE_DATA_REPT;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_REPT_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.DATE_DATA_REPT_out;
END;
IF OBJECT_ID('rdb.dbo.DATE_METADATA_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.DATE_METADATA_REPT;
END;
IF OBJECT_ID('rdb.dbo.NUMERIC_BASE_DATA_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.NUMERIC_BASE_DATA_REPT;
END;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_MERGED_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.NUMERIC_DATA_MERGED_REPT;
END;
IF OBJECT_ID('rdb.dbo.numeric_DATA_REPT_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.numeric_DATA_REPT_out;
END;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_TRANS_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.NUMERIC_DATA_TRANS_REPT;
END;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_TRANS1_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.NUMERIC_DATA_TRANS1_REPT;
END;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA1_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.NUMERIC_DATA1_REPT;
END;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA2_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.NUMERIC_DATA2_REPT;
END;
IF OBJECT_ID('rdb.dbo.NUMERIC_METADATA_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.NUMERIC_METADATA_REPT;
END;
IF OBJECT_ID('rdb.dbo.TEXT_DATA_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.TEXT_DATA_REPT;
END;
IF OBJECT_ID('rdb.dbo.TEXT_DATA_REPT_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.TEXT_DATA_REPT_out;
END;
IF OBJECT_ID('rdb.dbo.TEXT_METADATA_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.TEXT_METADATA_REPT;
END;
IF OBJECT_ID('rdb.dbo.L_INVESTIGATION_REPEAT_INC', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.L_INVESTIGATION_REPEAT_INC;
END;
IF OBJECT_ID('rdb.dbo.F_STD_PAGE_CASE_TEMP_INC', 'U') IS NOT NULL
    DROP TABLE rdb.dbo.F_STD_PAGE_CASE_TEMP_INC;
IF OBJECT_ID('rdb.dbo.F_PAGE_CASE_TEMP_INC', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.F_PAGE_CASE_TEMP_INC;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_ADMINISTRATIVE_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.RDB_UI_METADATA_INV_ADMINISTRATIVE_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_TABLE_INV_ADMINISTRATIVE;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.RDB_UI_METADATA_INV_ADMINISTRATIVE;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE rdb.dbo.CODED_TABLE_INV_CLINICAL;
END;
IF OBJECT_ID('rdb.dbo.PHC_CASE_UIDS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[PHC_CASE_UIDS];
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[text_data_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.text_data_INV_ADMINISTRATIVE_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[text_data_INV_ADMINISTRATIVE_out];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_OTHER_EMPTY_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_OTHER_NONEMPTY_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_OTHER_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_STD_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_SNTEMP_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_SNTEMP_TRANS_A_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_SNTEMP_TRANS_CODE_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_TEMP_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_ADMINISTRATIVE_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_DESC_INV_ADMINISTRATIVE_TEMP];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_DESC_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_COUNTY_TABLE_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_ADMINISTRATIVE_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_COUNTY_TABLE_DESC_INV_ADMINISTRATIVE_TEMP];
END;;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_COUNTY_TABLE_DESC_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_MERGED_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[DATE_DATA_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.PAGE_DATE_TABLE_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[PAGE_DATE_TABLE_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_ADMINISTRATIVE_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[DATE_DATA_INV_ADMINISTRATIVE_out];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_BASE_DATA_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_BASE_DATA_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_2_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_2_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_MERGED_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_MERGED_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_TRANS_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_TRANS_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_TRANS1_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_TRANS1_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.CODED_DATA_INV_ADMINISTRATIVE_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_DATA_INV_ADMINISTRATIVE_out];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_PIVOT_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_PIVOT_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_OUT_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_OUT_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.Stageing_key_metadata_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[Stageing_key_metadata_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.STAGING_KEY_INV_ADMINISTRATIVE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[STAGING_KEY_INV_ADMINISTRATIVE];
END;;
IF OBJECT_ID('rdb.dbo.STAGING_KEY_INV_ADMINISTRATIVE_FINAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[STAGING_KEY_INV_ADMINISTRATIVE_FINAL];
END;;
IF OBJECT_ID('rdb.dbo.text_data_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[text_data_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.text_data_INV_CLINICAL_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[text_data_INV_CLINICAL_out];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_OTHER_EMPTY_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_OTHER_NONEMPTY_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_OTHER_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_STD_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_SNTEMP_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_SNTEMP_TRANS_A_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_SNTEMP_TRANS_CODE_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_TEMP_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_CLINICAL_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_DESC_INV_CLINICAL_TEMP];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_DESC_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_COUNTY_TABLE_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_CLINICAL_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_COUNTY_TABLE_DESC_INV_CLINICAL_TEMP];
END;;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_COUNTY_TABLE_DESC_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_MERGED_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[DATE_DATA_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.PAGE_DATE_TABLE_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[PAGE_DATE_TABLE_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_CLINICAL_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[DATE_DATA_INV_CLINICAL_out];
END;;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_CLINICAL_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[RDB_UI_METADATA_INV_CLINICAL_TEMP];
END;;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[RDB_UI_METADATA_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_BASE_DATA_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_BASE_DATA_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_2_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_2_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_MERGED_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_MERGED_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_TRANS_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_TRANS_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_TRANS1_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_TRANS1_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.CODED_DATA_INV_CLINICAL_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_DATA_INV_CLINICAL_out];
END;;
IF OBJECT_ID('rdb.dbo.Stageing_key_metadata_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[Stageing_key_metadata_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.STAGING_KEY_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[STAGING_KEY_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.STAGING_KEY_INV_CLINICAL_FINAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[STAGING_KEY_INV_CLINICAL_FINAL];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_OUT_INV_CLINICAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_OUT_INV_CLINICAL];
END;;
IF OBJECT_ID('rdb.dbo.text_data_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[text_data_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.text_data_INV_COMPLICATION_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[text_data_INV_COMPLICATION_out];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_OTHER_EMPTY_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_OTHER_NONEMPTY_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_OTHER_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_STD_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_SNTEMP_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_SNTEMP_TRANS_A_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_SNTEMP_TRANS_CODE_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_TEMP_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_COMPLICATION_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_DESC_INV_COMPLICATION_TEMP];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_DESC_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_COUNTY_TABLE_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_COMPLICATION_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_COUNTY_TABLE_DESC_INV_COMPLICATION_TEMP];
END;;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_COUNTY_TABLE_DESC_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_MERGED_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[DATE_DATA_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.PAGE_DATE_TABLE_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[PAGE_DATE_TABLE_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_COMPLICATION_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[RDB_UI_METADATA_INV_COMPLICATION_TEMP];
END;;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[RDB_UI_METADATA_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_BASE_DATA_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_BASE_DATA_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_2_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_2_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_MERGED_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_MERGED_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_TRANS_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_TRANS_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_TRANS1_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_TRANS1_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.CODED_DATA_INV_COMPLICATION_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_DATA_INV_COMPLICATION_out];
END;;
IF OBJECT_ID('rdb.dbo.Stageing_key_metadata_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[Stageing_key_metadata_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.STAGING_KEY_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[STAGING_KEY_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.STAGING_KEY_INV_COMPLICATION_FINAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[STAGING_KEY_INV_COMPLICATION_FINAL];
END;;
IF OBJECT_ID('rdb.dbo.date_data_INV_COMPLICATION_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[date_data_INV_COMPLICATION_out];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_OUT_INV_COMPLICATION', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_OUT_INV_COMPLICATION];
END;;
IF OBJECT_ID('rdb.dbo.text_data_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[text_data_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.text_data_INV_CONTACT_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[text_data_INV_CONTACT_out];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_OTHER_EMPTY_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_OTHER_NONEMPTY_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_OTHER_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_STD_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_SNTEMP_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_SNTEMP_TRANS_A_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_SNTEMP_TRANS_CODE_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_TEMP_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_CONTACT_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_DESC_INV_CONTACT_TEMP];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_DESC_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_COUNTY_TABLE_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_CONTACT_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_COUNTY_TABLE_DESC_INV_CONTACT_TEMP];
END;;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_COUNTY_TABLE_DESC_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_TABLE_MERGED_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[DATE_DATA_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.PAGE_DATE_TABLE_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[PAGE_DATE_TABLE_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_CONTACT_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[DATE_DATA_INV_CONTACT_out];
END;;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_CONTACT_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[RDB_UI_METADATA_INV_CONTACT_TEMP];
END;;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[RDB_UI_METADATA_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_BASE_DATA_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_BASE_DATA_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_2_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_2_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_MERGED_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_MERGED_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_TRANS_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_TRANS_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_TRANS1_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_TRANS1_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.CODED_DATA_INV_CONTACT_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[CODED_DATA_INV_CONTACT_out];
END;;
IF OBJECT_ID('rdb.dbo.Stageing_key_metadata_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[Stageing_key_metadata_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.STAGING_KEY_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[STAGING_KEY_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.STAGING_KEY_INV_CONTACT_FINAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[STAGING_KEY_INV_CONTACT_FINAL];
END;;
IF OBJECT_ID('rdb.dbo.NUMERIC_DATA_OUT_INV_CONTACT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NUMERIC_DATA_OUT_INV_CONTACT];
END;;
IF OBJECT_ID('rdb.dbo.phc_uids_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[phc_uids_REPT];
END;;
IF OBJECT_ID('rdb.dbo.NBS_CASE_ANSWER_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[NBS_CASE_ANSWER_REPT];
END;;
IF OBJECT_ID('rdb.dbo.rdb_ui_metadata_rept_temp', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[rdb_ui_metadata_rept_temp];
END;;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[RDB_UI_METADATA_REPT];
END;;
IF OBJECT_ID('rdb.dbo.PAGE_DATE_TABLE_REPT', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[PAGE_DATE_TABLE_REPT];
END;;
IF OBJECT_ID('rdb.dbo.STAGING_KEY_REPT_FINAL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[STAGING_KEY_REPT_FINAL];
END;;
IF OBJECT_ID('rdb.dbo.PHC_UIDS_ALL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[PHC_UIDS_ALL];
END;;
IF OBJECT_ID('rdb.dbo.PHC_CASE_UIDS_ALL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[PHC_CASE_UIDS_ALL];
END;;
IF OBJECT_ID('rdb.dbo.F_S_STD_HIV_CASE', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[F_S_STD_HIV_CASE];
END;;
IF OBJECT_ID('rdb.dbo.ENTITY_KEYSTORE_STD', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[ENTITY_KEYSTORE_STD];
END;;
IF OBJECT_ID('rdb.dbo.DIMENSION_KEYS_PAGECASEID', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[DIMENSION_KEYS_PAGECASEID];
END;;
IF OBJECT_ID('rdb.dbo.DIMENSIONAL_KEYS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE [dbo].[DIMENSIONAL_KEYS];
END;;

--------------
IF OBJECT_ID('rdb.dbo.text_data_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_DEATH_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_DEATH_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_DEATH_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_DEATH_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_DEATH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_DEATH;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_EPIDEMIOLOGY_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_EPIDEMIOLOGY_out;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_EPIDEMIOLOGY_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_EPIDEMIOLOGY_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_EPIDEMIOLOGY_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_EPIDEMIOLOGY_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_EPIDEMIOLOGY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_EPIDEMIOLOGY;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_HIV_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_HIV_out;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_HIV_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_HIV_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_HIV_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_HIV_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_HIV', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_HIV;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_ISOLATE_TRACKING_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_ISOLATE_TRACKING_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_ISOLATE_TRACKING_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_ISOLATE_TRACKING_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_ISOLATE_TRACKING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_ISOLATE_TRACKING;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_LAB_FINDING_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_LAB_FINDING_out;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_LAB_FINDING_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_LAB_FINDING_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_LAB_FINDING_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_LAB_FINDING_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_LAB_FINDING_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_LAB_FINDING_TEMP;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_LAB_FINDING', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_LAB_FINDING;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_MEDICAL_HISTORY_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_MEDICAL_HISTORY_out;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_MEDICAL_HISTORY_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_MEDICAL_HISTORY_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_MEDICAL_HISTORY_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_MEDICAL_HISTORY_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_MEDICAL_HISTORY_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_MEDICAL_HISTORY_TEMP;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_MEDICAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_MEDICAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_MOTHER_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_MOTHER_out;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_MOTHER_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_MOTHER_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_MOTHER_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_MOTHER_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_MOTHER_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_MOTHER_TEMP;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_MOTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_MOTHER;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_OTHER_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_OTHER_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_OTHER_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_OTHER_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_OTHER_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_OTHER_TEMP;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_OTHER', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_OTHER;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_PATIENT_OBS_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_PATIENT_OBS_out;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_PATIENT_OBS_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_PATIENT_OBS_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_PATIENT_OBS_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_PATIENT_OBS_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_PATIENT_OBS_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_PATIENT_OBS_TEMP;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_PATIENT_OBS', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_PATIENT_OBS;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_PREGNANCY_BIRTH_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_PREGNANCY_BIRTH_out;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_PREGNANCY_BIRTH_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_PREGNANCY_BIRTH_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_PREGNANCY_BIRTH_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_PREGNANCY_BIRTH_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_PREGNANCY_BIRTH_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_PREGNANCY_BIRTH_TEMP;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_PREGNANCY_BIRTH', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_PREGNANCY_BIRTH;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_RESIDENCY_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_RESIDENCY_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_RESIDENCY_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_RESIDENCY_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_RESIDENCY_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_RESIDENCY_TEMP;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_RESIDENCY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_RESIDENCY;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_RISK_FACTOR_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_RISK_FACTOR_out;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_RISK_FACTOR_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_RISK_FACTOR_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_RISK_FACTOR_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_RISK_FACTOR_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_RISK_FACTOR_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_RISK_FACTOR_TEMP;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_RISK_FACTOR', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_RISK_FACTOR;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_SOCIAL_HISTORY_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_SOCIAL_HISTORY_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_SOCIAL_HISTORY_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_SOCIAL_HISTORY_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_SOCIAL_HISTORY_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_SOCIAL_HISTORY_TEMP;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_SOCIAL_HISTORY', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_SOCIAL_HISTORY;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_SYMPTOM_out', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_SYMPTOM_out;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_STD_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_STD_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_TEMP_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_TEMP_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_SYMPTOM_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_SYMPTOM_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_DESC_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_DESC_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_SYMPTOM_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_SYMPTOM_TEMP;
END;
IF OBJECT_ID('rdb.dbo.CODED_COUNTY_TABLE_DESC_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_MERGED_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_MERGED_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_SYMPTOM_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_SYMPTOM_TEMP;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.DATE_DATA_INV_SYMPTOM', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.DATE_DATA_INV_SYMPTOM;
END;
IF OBJECT_ID('rdb.dbo.text_data_INV_TRAVEL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.text_data_INV_TRAVEL;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_EMPTY_INV_TRAVEL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_TRAVEL;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_NONEMPTY_INV_TRAVEL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_TRAVEL;
END;
IF OBJECT_ID('rdb.dbo.CODED_TABLE_OTHER_INV_TRAVEL', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.CODED_TABLE_OTHER_INV_TRAVEL;
END;
IF OBJECT_ID('rdb.dbo.RDB_UI_METADATA_INV_DEATH_TEMP', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.RDB_UI_METADATA_INV_DEATH_TEMP;
END;
IF OBJECT_ID('rdb.dbo.[RDB_UI_METADATA_INV_EPIDEMIOLOGY]', 'U') IS NOT NULL
    BEGIN
        DROP TABLE dbo.[RDB_UI_METADATA_INV_EPIDEMIOLOGY];
END;


 IF OBJECT_ID('text_data_INV_DEATH_out') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.text_data_INV_DEATH_out

 End 
 IF OBJECT_ID('CODED_TABLE_INV_DEATH') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_INV_DEATH

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_DEATH') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_DEATH

 End 
 IF OBJECT_ID('CODED_TABLE_INV_EPIDEMIOLOGY') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_INV_EPIDEMIOLOGY

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_EPIDEMIOLOGY_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_EPIDEMIOLOGY_TEMP

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_EPIDEMIOLOGY') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_EPIDEMIOLOGY

 End 
 IF OBJECT_ID('CODED_TABLE_INV_HIV') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_INV_HIV

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_HIV_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_HIV_TEMP

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_HIV') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_HIV

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_ISOLATE_TRACKING_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_ISOLATE_TRACKING_TEMP

 End 
 IF OBJECT_ID('CODED_TABLE_STD_INV_TRAVEL') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_STD_INV_TRAVEL

 End 
 IF OBJECT_ID('CODED_TABLE_SNTEMP_INV_TRAVEL') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_TRAVEL

 End 
 IF OBJECT_ID('CODED_TABLE_SNTEMP_TRANS_A_INV_TRAVEL') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_TRAVEL

 End 
 IF OBJECT_ID('CODED_TABLE_SNTEMP_TRANS_CODE_INV_TRAVEL') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_TRAVEL

 End 
 IF OBJECT_ID('CODED_TABLE_TEMP_INV_TRAVEL') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_TEMP_INV_TRAVEL

 End 
 IF OBJECT_ID('CODED_TABLE_INV_TRAVEL') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_INV_TRAVEL

 End 
 IF OBJECT_ID('CODED_TABLE_DESC_INV_TRAVEL_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_DESC_INV_TRAVEL_TEMP

 End 
 IF OBJECT_ID('CODED_TABLE_DESC_INV_TRAVEL') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_DESC_INV_TRAVEL

 End 
 IF OBJECT_ID('CODED_COUNTY_TABLE_INV_TRAVEL') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_COUNTY_TABLE_INV_TRAVEL

 End 
 IF OBJECT_ID('CODED_COUNTY_TABLE_DESC_INV_TRAVEL_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_TRAVEL_TEMP

 End 
 IF OBJECT_ID('CODED_COUNTY_TABLE_DESC_INV_TRAVEL') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_TRAVEL

 End 
 IF OBJECT_ID('CODED_TABLE_MERGED_INV_TRAVEL') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_MERGED_INV_TRAVEL

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_TRAVEL_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_TRAVEL_TEMP

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_TRAVEL') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_TRAVEL

 End 
 IF OBJECT_ID('DATE_DATA_INV_TRAVEL') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.DATE_DATA_INV_TRAVEL

 End 
 IF OBJECT_ID('text_data_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.text_data_INV_TREATMENT

 End 
 IF OBJECT_ID('text_data_INV_TREATMENT_out') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.text_data_INV_TREATMENT_out

 End 
 IF OBJECT_ID('CODED_TABLE_OTHER_EMPTY_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_TREATMENT

 End 
 IF OBJECT_ID('CODED_TABLE_OTHER_NONEMPTY_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_TREATMENT

 End 
 IF OBJECT_ID('CODED_TABLE_OTHER_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_OTHER_INV_TREATMENT

 End 
 IF OBJECT_ID('CODED_TABLE_STD_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_STD_INV_TREATMENT

 End 
 IF OBJECT_ID('CODED_TABLE_SNTEMP_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_TREATMENT

 End 
 IF OBJECT_ID('CODED_TABLE_SNTEMP_TRANS_A_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_TREATMENT

 End 
 IF OBJECT_ID('CODED_TABLE_SNTEMP_TRANS_CODE_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_TREATMENT

 End 
 IF OBJECT_ID('CODED_TABLE_TEMP_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_TEMP_INV_TREATMENT
End 
 
 IF OBJECT_ID('CODED_TABLE_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_INV_TREATMENT

 End 
 IF OBJECT_ID('CODED_TABLE_DESC_INV_TREATMENT_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_DESC_INV_TREATMENT_TEMP

 End 
 IF OBJECT_ID('CODED_TABLE_DESC_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_DESC_INV_TREATMENT

 End 
 IF OBJECT_ID('CODED_COUNTY_TABLE_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_COUNTY_TABLE_INV_TREATMENT

 End 
 IF OBJECT_ID('CODED_COUNTY_TABLE_DESC_INV_TREATMENT_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_TREATMENT_TEMP

 End 
 IF OBJECT_ID('CODED_COUNTY_TABLE_DESC_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_TREATMENT

 End 
 IF OBJECT_ID('CODED_TABLE_MERGED_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_MERGED_INV_TREATMENT

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_TREATMENT_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_TREATMENT_TEMP

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_TREATMENT

 End 
 IF OBJECT_ID('DATE_DATA_INV_TREATMENT') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.DATE_DATA_INV_TREATMENT

 End 
 IF OBJECT_ID('text_data_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.text_data_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_TABLE_OTHER_EMPTY_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_TABLE_OTHER_NONEMPTY_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_TABLE_OTHER_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_OTHER_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_TABLE_STD_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_STD_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_TABLE_SNTEMP_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_TABLE_SNTEMP_TRANS_A_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_TABLE_SNTEMP_TRANS_CODE_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_TABLE_TEMP_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_TEMP_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_TABLE_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_TABLE_DESC_INV_UNDER_CONDITION_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_DESC_INV_UNDER_CONDITION_TEMP

 End 
 IF OBJECT_ID('CODED_TABLE_DESC_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_DESC_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_COUNTY_TABLE_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_COUNTY_TABLE_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_COUNTY_TABLE_DESC_INV_UNDER_CONDITION_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_UNDER_CONDITION_TEMP

 End 
 IF OBJECT_ID('CODED_COUNTY_TABLE_DESC_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('CODED_TABLE_MERGED_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_MERGED_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_UNDER_CONDITION_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_UNDER_CONDITION_TEMP

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('DATE_DATA_INV_UNDER_CONDITION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.DATE_DATA_INV_UNDER_CONDITION

 End 
 IF OBJECT_ID('text_data_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.text_data_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_TABLE_OTHER_EMPTY_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_OTHER_EMPTY_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_TABLE_OTHER_NONEMPTY_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_OTHER_NONEMPTY_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_TABLE_OTHER_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_OTHER_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_TABLE_STD_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_STD_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_TABLE_SNTEMP_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_SNTEMP_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_TABLE_SNTEMP_TRANS_A_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_A_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_TABLE_SNTEMP_TRANS_CODE_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_SNTEMP_TRANS_CODE_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_TABLE_TEMP_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_TEMP_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_TABLE_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_TABLE_DESC_INV_VACCINATION_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_DESC_INV_VACCINATION_TEMP

 End 
 IF OBJECT_ID('CODED_TABLE_DESC_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_DESC_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_COUNTY_TABLE_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_COUNTY_TABLE_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_COUNTY_TABLE_DESC_INV_VACCINATION_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_VACCINATION_TEMP

 End 
 IF OBJECT_ID('CODED_COUNTY_TABLE_DESC_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_COUNTY_TABLE_DESC_INV_VACCINATION

 End 
 IF OBJECT_ID('CODED_TABLE_MERGED_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.CODED_TABLE_MERGED_INV_VACCINATION

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_VACCINATION_TEMP') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_VACCINATION_TEMP

 End 
 IF OBJECT_ID('RDB_UI_METADATA_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.RDB_UI_METADATA_INV_VACCINATION

 End 
 IF OBJECT_ID('DATE_DATA_INV_VACCINATION') IS NOT NULL	

	 BEGIN 
		DROP TABLE dbo.DATE_DATA_INV_VACCINATION
  End 
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_ADMINISTRATIVE', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_ADMINISTRATIVE]
        ([PAGE_CASE_UID]            [NUMERIC](20, 0) NULL, 
         [D_INV_ADMINISTRATIVE_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_CLINICAL', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_CLINICAL]
        ([PAGE_CASE_UID]      [NUMERIC](20, 0) NULL, 
         [D_INV_CLINICAL_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_COMPLICATION', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_COMPLICATION]
        ([PAGE_CASE_UID]          [NUMERIC](20, 0) NULL, 
         [D_INV_COMPLICATION_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_CONTACT', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_CONTACT]
        ([PAGE_CASE_UID]     [NUMERIC](20, 0) NULL, 
         [D_INV_CONTACT_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_DEATH', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_DEATH]
        ([PAGE_CASE_UID]   [NUMERIC](20, 0) NULL, 
         [D_INV_DEATH_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_EPIDEMIOLOGY', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_EPIDEMIOLOGY]
        ([PAGE_CASE_UID]          [NUMERIC](20, 0) NULL, 
         [D_INV_EPIDEMIOLOGY_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_HIV', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_HIV]
        ([PAGE_CASE_UID] [NUMERIC](20, 0) NULL, 
         [D_INV_HIV_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_ISOLATE_TRACKING', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_ISOLATE_TRACKING]
        ([PAGE_CASE_UID]              [NUMERIC](20, 0) NULL, 
         [D_INV_ISOLATE_TRACKING_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_LAB_FINDING', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_LAB_FINDING]
        ([PAGE_CASE_UID]         [NUMERIC](20, 0) NULL, 
         [D_INV_LAB_FINDING_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_MEDICAL_HISTORY', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_MEDICAL_HISTORY]
        ([PAGE_CASE_UID]             [NUMERIC](20, 0) NULL, 
         [D_INV_MEDICAL_HISTORY_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_MOTHER', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_MOTHER]
        ([PAGE_CASE_UID]    [NUMERIC](20, 0) NULL, 
         [D_INV_MOTHER_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_OTHER', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_OTHER]
        ([PAGE_CASE_UID]   [NUMERIC](20, 0) NULL, 
         [D_INV_OTHER_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_PATIENT_OBS', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_PATIENT_OBS]
        ([PAGE_CASE_UID]         [NUMERIC](20, 0) NULL, 
         [D_INV_PATIENT_OBS_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_PREGNANCY_BIRTH', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_PREGNANCY_BIRTH]
        ([PAGE_CASE_UID]             [NUMERIC](20, 0) NULL, 
         [D_INV_PREGNANCY_BIRTH_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_RESIDENCY', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_RESIDENCY]
        ([PAGE_CASE_UID]       [NUMERIC](20, 0) NULL, 
         [D_INV_RESIDENCY_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_RISK_FACTOR', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_RISK_FACTOR]
        ([PAGE_CASE_UID]         [NUMERIC](20, 0) NULL, 
         [D_INV_RISK_FACTOR_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_SOCIAL_HISTORY', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_SOCIAL_HISTORY]
        ([PAGE_CASE_UID]            [NUMERIC](20, 0) NULL, 
         [D_INV_SOCIAL_HISTORY_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_SYMPTOM', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_SYMPTOM]
        ([PAGE_CASE_UID]     [NUMERIC](20, 0) NULL, 
         [D_INV_SYMPTOM_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_TRAVEL', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_TRAVEL]
        ([PAGE_CASE_UID]    [NUMERIC](20, 0) NULL, 
         [D_INV_TRAVEL_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_TREATMENT', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_TREATMENT]
        ([PAGE_CASE_UID]       [NUMERIC](20, 0) NULL, 
         [D_INV_TREATMENT_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_UNDER_CONDITION', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_UNDER_CONDITION]
        ([PAGE_CASE_UID]             [NUMERIC](20, 0) NULL, 
         [D_INV_UNDER_CONDITION_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_INV_VACCINATION', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_INV_VACCINATION]
        ([PAGE_CASE_UID]         [NUMERIC](20, 0) NULL, 
         [D_INV_VACCINATION_KEY] [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('rdb.dbo.LOOKUP_TABLE_N_REPT', 'U') IS NULL
    BEGIN
        CREATE TABLE [dbo].[LOOKUP_TABLE_N_REPT]
        ([PAGE_CASE_UID] [NUMERIC](20, 0) NULL, 
         [D_REPT_KEY]    [INT] IDENTITY(1, 1) NOT NULL
        )
        ON [PRIMARY];
END;
IF OBJECT_ID('job_batch_rebuild_log') IS NULL
    BEGIN
        CREATE TABLE [dbo].[job_batch_rebuild_log]
        ([record_id]        [INT] IDENTITY(1, 1) NOT NULL, 
         [batch_id]         [BIGINT] NULL, 
         [batch_start_dttm] [DATETIME2](7) NULL, 
         [batch_end_dttm]   [DATETIME2](7) NULL, 
         [Status_Type]      [NVARCHAR](500) NULL, 
         [Msg_Description1] [NVARCHAR](500) NULL, 
         [Msg_Description2] [NVARCHAR](500) NULL, 
         [create_dttm]      [DATETIME2](7) NULL, 
         [update_dttm]      [DATETIME2](7) NULL, 
         [type_code]        [VARCHAR](100) NOT NULL, 
         [type_description] [VARCHAR](100) NOT NULL, 
         CONSTRAINT [pk_job_batch_rebuild_log] PRIMARY KEY CLUSTERED([record_id] ASC)
         WITH(PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
        )
        ON [PRIMARY];
        ALTER TABLE [dbo].[job_batch_rebuild_log]
        ADD DEFAULT(GETDATE()) FOR [create_dttm];
        ALTER TABLE [dbo].[job_batch_rebuild_log]
        ADD DEFAULT(GETDATE()) FOR [update_dttm];
END;
DECLARE @batch_id BIGINT, @batch_start_time DATETIME, @typeCode VARCHAR(100), @typeDescription VARCHAR(100), @count INT;
SELECT @batch_id = CAST((format(GETDATE(), 'yyMMddHHmmss')) AS BIGINT);
SET @batch_start_time = '01/01/2000';
SET @typeCode = 'PB_DIMENSIONS';
SET @typeDescription = 'Rebuild page builder dimensions';
SET @count =
(
    SELECT COUNT(*)
    FROM rdb..job_batch_rebuild_log
    WHERE Status_Type = 'start'
          AND type_code = 'PB_DIMENSIONS'
);
IF(@count = 0)
    BEGIN
        INSERT INTO [dbo].[job_batch_rebuild_log]
        ([batch_id], 
         [batch_start_dttm], 
         [batch_end_dttm], 
         [Status_Type], 
         [type_code], 
         [type_description]
        )
        VALUES
        (@batch_id, 
         @batch_start_time, 
         NULL, 
         'start', 
         @typeCode, 
         @typeDescription
        );
END;

SET @typeCode = 'PB_RPT_DIMENSION';
SET @typeDescription = 'Rebuild page builder Repeating Questions dimension';
SET @count =
(
    SELECT COUNT(*)
    FROM rdb..job_batch_rebuild_log
    WHERE Status_Type = 'start'
          AND type_code = 'PB_RPT_DIMENSION'
);
IF(@count = 0)
    BEGIN
        INSERT INTO [dbo].[job_batch_rebuild_log]
        ([batch_id], 
         [batch_start_dttm], 
         [batch_end_dttm], 
         [Status_Type], 
         [type_code], 
         [type_description]
        )
        VALUES
        (@batch_id, 
         @batch_start_time, 
         NULL, 
         'start', 
         @typeCode, 
         @typeDescription
        );
END;

/*delete any incomplete entries from job_flow_log and job_batch_log*/
DELETE FROM rdb..job_flow_log
WHERE Status_Type = 'error'
      AND batch_id IS NULL;

 
DELETE FROM rdb..job_flow_log WHERE batch_id IN
(
    SELECT batch_id
    FROM rdb..job_batch_log
    WHERE status_type <> 'complete'
          AND type_code = 'MasterETL'
);

DELETE FROM rdb..job_batch_log
WHERE status_type <> 'complete'
      AND type_code = 'MasterETL';

IF OBJECT_ID ('job_batch_log') IS NOT NULL 

begin

DELETE FROM  rdb..job_flow_log where [batch_id] in (select batch_id from rdb..job_batch_log where type_code='MasterETL');
DELETE FROM  rdb..job_batch_log where type_code='MasterETL';
INSERT INTO [dbo].[job_batch_log]
           ([batch_id]
           ,[batch_start_dttm]
           ,[batch_end_dttm]
           ,[Status_Type]
		   ,[type_code]
		   ,[type_description]
           )
     VALUES
           (1
           ,'01/01/1990'
           ,'01/01/1990'
           ,'complete'
		   ,'MasterETL'
		   ,'MasterETL Process'
           )
end
GO

IF OBJECT_ID('rdb.dbo.GENERIC_CASE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.GENERIC_CASE	;     END;
IF OBJECT_ID('rdb.dbo.CRS_CASE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.CRS_CASE	;     END;
IF OBJECT_ID('rdb.dbo.Measles_CASE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.Measles_CASE	;     END;
IF OBJECT_ID('rdb.dbo.RUBELLA_CASE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.RUBELLA_CASE	;     END;
IF OBJECT_ID('rdb.dbo.HEPATITIS_CASE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.HEPATITIS_CASE	;     END;
IF OBJECT_ID('rdb.dbo.Bmird_CASE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.Bmird_CASE	;     END;
IF OBJECT_ID('rdb.dbo.Pertussis_CASE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.Pertussis_CASE	;     END;
IF OBJECT_ID('rdb.dbo.Case_Count', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.Case_Count	;     END;
IF OBJECT_ID('rdb.dbo.HEP_MULTI_VALUE_FIELD', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.HEP_MULTI_VALUE_FIELD	;     END;
IF OBJECT_ID('rdb.dbo.HEP_MULTI_VALUE_FIELD_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.HEP_MULTI_VALUE_FIELD_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.ANTIMICROBIAL', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.ANTIMICROBIAL	;     END;
IF OBJECT_ID('rdb.dbo.ANTIMICROBIAL_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.ANTIMICROBIAL_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.BMIRD_MULTI_VALUE_FIELD', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.BMIRD_MULTI_VALUE_FIELD	;     END;
IF OBJECT_ID('rdb.dbo.BMIRD_MULTI_VALUE_FIELD_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.BMIRD_MULTI_VALUE_FIELD_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.PERTUSSIS_SUSPECTED_SOURCE_FLD', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.PERTUSSIS_SUSPECTED_SOURCE_FLD	;     END;
IF OBJECT_ID('rdb.dbo.PERTUSSIS_SUSPECTED_SOURCE_GRP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.PERTUSSIS_SUSPECTED_SOURCE_GRP	;     END;
IF OBJECT_ID('rdb.dbo.PERTUSSIS_TREATMENT_FIELD', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.PERTUSSIS_TREATMENT_FIELD	;     END;
IF OBJECT_ID('rdb.dbo.PERTUSSIS_TREATMENT_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.PERTUSSIS_TREATMENT_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.GEOCODING_LOCATION', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.GEOCODING_LOCATION	;     END;
IF OBJECT_ID('rdb.dbo.S_TB_PAM', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_TB_PAM	;     END;
IF OBJECT_ID('rdb.dbo.S_TB_HIV', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_TB_HIV	;     END;
IF OBJECT_ID('rdb.dbo.S_TB_PAM_ACT_ENTITY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_TB_PAM_ACT_ENTITY	;     END;
IF OBJECT_ID('rdb.dbo.L_TB_PAM', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_TB_PAM	;     END;
IF OBJECT_ID('rdb.dbo.L_TB_HIV', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_TB_HIV	;     END;
IF OBJECT_ID('rdb.dbo.F_S_TB_PAM', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.F_S_TB_PAM	;     END;
IF OBJECT_ID('rdb.dbo.F_TB_PAM', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.F_TB_PAM	;     END;
IF OBJECT_ID('rdb.dbo.D_TB_PAM', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_TB_PAM	;     END;
IF OBJECT_ID('rdb.dbo.D_TB_HIV', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_TB_HIV	;     END;
IF OBJECT_ID('rdb.dbo.S_MOVE_STATE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_MOVE_STATE	;     END;
IF OBJECT_ID('rdb.dbo.L_MOVE_STATE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_MOVE_STATE	;     END;
IF OBJECT_ID('rdb.dbo.D_MOVE_STATE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_MOVE_STATE	;     END;
IF OBJECT_ID('rdb.dbo.D_MOVE_STATE_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_MOVE_STATE_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.S_HC_PROV_TY_3', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_HC_PROV_TY_3	;     END;
IF OBJECT_ID('rdb.dbo.L_HC_PROV_TY_3', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_HC_PROV_TY_3	;     END;
IF OBJECT_ID('rdb.dbo.D_HC_PROV_TY_3', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_HC_PROV_TY_3	;     END;
IF OBJECT_ID('rdb.dbo.D_HC_PROV_TY_3_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_HC_PROV_TY_3_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.S_DISEASE_SITE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_DISEASE_SITE	;     END;
IF OBJECT_ID('rdb.dbo.L_DISEASE_SITE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_DISEASE_SITE	;     END;
IF OBJECT_ID('rdb.dbo.D_DISEASE_SITE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_DISEASE_SITE	;     END;
IF OBJECT_ID('rdb.dbo.D_DISEASE_SITE_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_DISEASE_SITE_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.S_ADDL_RISK', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_ADDL_RISK	;     END;
IF OBJECT_ID('rdb.dbo.L_ADDL_RISK', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_ADDL_RISK	;     END;
IF OBJECT_ID('rdb.dbo.D_ADDL_RISK', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_ADDL_RISK	;     END;
IF OBJECT_ID('rdb.dbo.D_ADDL_RISK_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_ADDL_RISK_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.S_MOVE_CNTY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_MOVE_CNTY	;     END;
IF OBJECT_ID('rdb.dbo.L_MOVE_CNTY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_MOVE_CNTY	;     END;
IF OBJECT_ID('rdb.dbo.D_MOVE_CNTY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_MOVE_CNTY	;     END;
IF OBJECT_ID('rdb.dbo.D_MOVE_CNTY_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_MOVE_CNTY_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.S_GT_12_REAS', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_GT_12_REAS	;     END;
IF OBJECT_ID('rdb.dbo.L_GT_12_REAS', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_GT_12_REAS	;     END;
IF OBJECT_ID('rdb.dbo.D_GT_12_REAS', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_GT_12_REAS	;     END;
IF OBJECT_ID('rdb.dbo.D_GT_12_REAS_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_GT_12_REAS_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.S_MOVE_CNTRY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_MOVE_CNTRY	;     END;
IF OBJECT_ID('rdb.dbo.L_MOVE_CNTRY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_MOVE_CNTRY	;     END;
IF OBJECT_ID('rdb.dbo.D_MOVE_CNTRY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_MOVE_CNTRY	;     END;
IF OBJECT_ID('rdb.dbo.D_MOVE_CNTRY_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_MOVE_CNTRY_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.S_MOVED_WHERE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_MOVED_WHERE	;     END;
IF OBJECT_ID('rdb.dbo.L_MOVED_WHERE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_MOVED_WHERE	;     END;
IF OBJECT_ID('rdb.dbo.D_MOVED_WHERE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_MOVED_WHERE	;     END;
IF OBJECT_ID('rdb.dbo.D_MOVED_WHERE_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_MOVED_WHERE_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.S_SMR_EXAM_TY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_SMR_EXAM_TY	;     END;
IF OBJECT_ID('rdb.dbo.L_SMR_EXAM_TY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_SMR_EXAM_TY	;     END;
IF OBJECT_ID('rdb.dbo.D_SMR_EXAM_TY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_SMR_EXAM_TY	;     END;
IF OBJECT_ID('rdb.dbo.D_SMR_EXAM_TY_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_SMR_EXAM_TY_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.S_OUT_OF_CNTRY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_OUT_OF_CNTRY	;     END;
IF OBJECT_ID('rdb.dbo.L_OUT_OF_CNTRY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_OUT_OF_CNTRY	;     END;
IF OBJECT_ID('rdb.dbo.D_OUT_OF_CNTRY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_OUT_OF_CNTRY	;     END;
IF OBJECT_ID('rdb.dbo.D_OUT_OF_CNTRY_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_OUT_OF_CNTRY_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.S_VAR_PAM', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_VAR_PAM	;     END;
IF OBJECT_ID('rdb.dbo.S_VAR_PAM_ACT_ENTITY', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_VAR_PAM_ACT_ENTITY	;     END;
IF OBJECT_ID('rdb.dbo.L_VAR_PAM', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_VAR_PAM	;     END;
IF OBJECT_ID('rdb.dbo.F_VAR_PAM', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.F_VAR_PAM	;     END;
IF OBJECT_ID('rdb.dbo.F_S_VAR_PAM', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.F_S_VAR_PAM	;     END;
IF OBJECT_ID('rdb.dbo.D_VAR_PAM', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_VAR_PAM	;     END;
IF OBJECT_ID('rdb.dbo.S_RASH_LOC_GEN', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_RASH_LOC_GEN	;     END;
IF OBJECT_ID('rdb.dbo.L_RASH_LOC_GEN', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_RASH_LOC_GEN	;     END;
IF OBJECT_ID('rdb.dbo.D_RASH_LOC_GEN', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_RASH_LOC_GEN	;     END;
IF OBJECT_ID('rdb.dbo.D_RASH_LOC_GEN_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_RASH_LOC_GEN_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.S_PCR_SOURCE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.S_PCR_SOURCE	;     END;
IF OBJECT_ID('rdb.dbo.L_PCR_SOURCE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.L_PCR_SOURCE	;     END;
IF OBJECT_ID('rdb.dbo.D_PCR_SOURCE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_PCR_SOURCE	;     END;
IF OBJECT_ID('rdb.dbo.D_PCR_SOURCE_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.D_PCR_SOURCE_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.user_profile', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.user_profile	;     END;
IF OBJECT_ID('rdb.dbo.SUMMARY_REPORT_CASE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.SUMMARY_REPORT_CASE	;     END;
IF OBJECT_ID('rdb.dbo.SUMMARY_CASE_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.SUMMARY_CASE_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.CODE_VAL_GENERAL', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.CODE_VAL_GENERAL	;     END;
IF OBJECT_ID('rdb.dbo.CODESET', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.CODESET	;     END;
IF OBJECT_ID('rdb.dbo.PATIENT_LDF_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.PATIENT_LDF_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.PROVIDER_LDF_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.PROVIDER_LDF_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.ORGANIZATION_LDF_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.ORGANIZATION_LDF_GROUP	;     END;
IF OBJECT_ID('rdb.dbo.LDF_DATA', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.LDF_DATA	;     END;

IF OBJECT_ID('rdb.dbo.S_PATIENT', 'U') IS NOT NULL	 BEGIN 	TRUNCATE TABLE   rdb.dbo.S_PATIENT	END
IF OBJECT_ID('rdb.dbo.S_PROVIDER', 'U') IS NOT NULL	 BEGIN 	TRUNCATE TABLE   rdb.dbo.S_PROVIDER	END
IF OBJECT_ID('rdb.dbo.S_ORGANIZATION', 'U') IS NOT NULL	 BEGIN 	TRUNCATE TABLE   rdb.dbo.S_ORGANIZATION	END
IF OBJECT_ID('rdb.dbo.S_INVESTIGATION', 'U') IS NOT NULL	 BEGIN 	TRUNCATE TABLE   rdb.dbo.S_CONFIRMATION_METHOD_GROUP	END
IF OBJECT_ID('rdb.dbo.S_CONFIRMATION_METHOD_GROUP', 'U') IS NOT NULL	 BEGIN 	TRUNCATE TABLE   rdb.dbo.S_CONFIRMATION_METHOD_GROUP	END
IF OBJECT_ID('rdb.dbo.S_CONTACT_RECORD', 'U') IS NOT NULL	 BEGIN 	TRUNCATE TABLE   rdb.dbo.S_CONTACT_RECORD	END
IF OBJECT_ID('rdb.dbo.S_INTERVIEW', 'U') IS NOT NULL	 BEGIN 	TRUNCATE TABLE   rdb.dbo.S_INTERVIEW	END
IF OBJECT_ID('rdb.dbo.S_INTERVIEW_NOTE', 'U') IS NOT NULL	 BEGIN 	TRUNCATE TABLE   rdb.dbo.S_INTERVIEW_NOTE	END
IF OBJECT_ID('rdb.dbo.S_VACCINATION', 'U') IS NOT NULL	 BEGIN 	TRUNCATE TABLE   rdb.dbo.S_VACCINATION	END

IF OBJECT_ID('rdb.dbo.S_VACCINATION', 'U') IS NOT NULL	 BEGIN 	TRUNCATE TABLE   rdb.dbo.S_VACCINATION	END
go
IF OBJECT_ID('rdb.dbo.NOTIFICATION_EVENT', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.NOTIFICATION_EVENT	END
IF OBJECT_ID('rdb.dbo.NOTIFICATION', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.NOTIFICATION	END
IF OBJECT_ID('rdb.dbo.LDF_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.LDF_GROUP	END
IF OBJECT_ID('rdb.dbo.LAB_RESULT_CONDITION', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.LAB_RESULT_CONDITION	END
IF OBJECT_ID('rdb.dbo.LAB_RESULT_GROUP', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.LAB_RESULT_GROUP	END
IF OBJECT_ID('rdb.dbo.TREATMENT_EVENT', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.TREATMENT_EVENT	END
IF OBJECT_ID('rdb.dbo.TREATMENT', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.TREATMENT	END
IF OBJECT_ID('rdb.dbo.CONDITION', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.CONDITION	END
IF OBJECT_ID('rdb.dbo.RDB_DATE', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.RDB_DATE	END
IF OBJECT_ID('rdb.dbo.SR100', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.SR100	END
IF OBJECT_ID('rdb.dbo.MORBIDITY_REPORT_DATAMART', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.MORBIDITY_REPORT_DATAMART	END
IF OBJECT_ID('rdb.dbo.TB_DATAMART', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.TB_DATAMART	END
IF OBJECT_ID('rdb.dbo.TB_HIV_DATAMART', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.TB_HIV_DATAMART	END
IF OBJECT_ID('rdb.dbo.CASE_LAB_DATAMART', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.CASE_LAB_DATAMART	END
IF OBJECT_ID('rdb.dbo.BMIRD_STREP_PNEUMO_DATAMART', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.BMIRD_STREP_PNEUMO_DATAMART	END
IF OBJECT_ID('rdb.dbo.EVENT_METRIC', 'U') IS NOT NULL	 BEGIN 	DROP TABLE   rdb.dbo.EVENT_METRIC	END


IF OBJECT_ID('REJECTED_NND','V') IS NOT NULL 
	DROP VIEW REJECTED_NND;
GO
IF OBJECT_ID('ORG_LINE_LIST','V') IS NOT NULL 
	DROP VIEW ORG_LINE_LIST; 
GO
IF OBJECT_ID('LAB_TEST_REPORT','V') IS NOT NULL 
	DROP VIEW LAB_TEST_REPORT; 
GO



IF OBJECT_ID ('dbo.D_ORGANIZATION') IS NOT NULL truncate table dbo.D_ORGANIZATION;
go

IF OBJECT_ID ('dbo.D_PATIENT') IS NOT NULL truncate table dbo.D_PATIENT;
go

IF OBJECT_ID ('dbo.D_PROVIDER') IS NOT NULL truncate table dbo.D_PROVIDER;
go

IF OBJECT_ID ('dbo.INVESTIGATION') IS NOT NULL delete from dbo.INVESTIGATION;
go

IF OBJECT_ID ('dbo.L_PATIENT') IS NOT NULL delete from dbo.L_PATIENT; 
 GO 



CREATE TABLE dbo.RDB_DATE (
       DATE_MM_DD_YYYY      datetime NULL,
       DAY_OF_WEEK          varchar(10) NULL,
       DAY_NBR_IN_CLNDR_MON numeric(4) NULL,
       DAY_NBR_IN_CLNDR_YR  numeric(4) NULL,
       WK_NBR_IN_CLNDR_MON  numeric(4) NULL,
       WK_NBR_IN_CLNDR_YR   numeric(4) NULL,
       CLNDR_MON_NAME       varchar(20) NULL,
       CLNDR_MON_IN_YR      numeric(4) NULL,
       CLNDR_QRTR           numeric(4) NULL,
       CLNDR_YR             numeric NULL,
       DATE_KEY             BIGINT NOT NULL
)
go


ALTER TABLE dbo.RDB_DATE
       ADD PRIMARY KEY (DATE_KEY)
go


CREATE TABLE DBO.CODE_VAL_GENERAL (
       CODE_VAL             VARCHAR(50) NULL,
       CODE_DESC            VARCHAR(300) NULL,
       CODE_SYS_CD          VARCHAR(50) NULL,
       CODE_SYS_CD_DESC     VARCHAR(50) NULL,
       CODE_EFF_DT          DATETIME NULL,
       CODE_END_DT          DATETIME NULL,
       CD                   VARCHAR(20) NOT NULL,
       CODE_KEY             BIGINT NOT NULL
)
GO


ALTER TABLE DBO.CODE_VAL_GENERAL
       ADD PRIMARY KEY (CD, CODE_KEY)
GO
CREATE TABLE DBO.CODESET (
       CD                   VARCHAR(20) NOT NULL,
       TBL_NM               VARCHAR(32) NULL,
       COL_NM               VARCHAR(32) NULL,
       CD_SYS_VER           VARCHAR(20) NULL,
       DATA_TYPE            VARCHAR(20) NULL,
       DATA_LENGTH          NUMERIC(4) NULL,
       CODE_SET_NM          VARCHAR(256) NULL,
       CD_DESC              VARCHAR(300) NULL
)
GO


ALTER TABLE DBO.CODESET
       ADD PRIMARY KEY (CD)
GO


CREATE TABLE DBO.CONDITION (
       CONDITION_CD         VARCHAR(50) NULL,
       CONDITION_DESC       VARCHAR(300) NULL,
       CONDITION_SHORT_NM   VARCHAR(50) NULL,
       CONDITION_CD_EFF_DT  DATETIME NULL,
       CONDITION_CD_END_DT  DATETIME NULL,
       NND_IND              VARCHAR(50) NULL,
       CONDITION_KEY        BIGINT NOT NULL,
       DISEASE_GRP_CD       VARCHAR(50) NULL,
       DISEASE_GRP_DESC     VARCHAR(50) NULL,
       PROGRAM_AREA_CD      VARCHAR(20) NULL,
       PROGRAM_AREA_DESC    VARCHAR(100) NULL,
       CONDITION_CD_SYS_CD_NM VARCHAR(100) NULL,
       ASSIGNING_AUTHORITY_CD VARCHAR(199) NULL,
       ASSIGNING_AUTHORITY_DESC VARCHAR(100) NULL,
       CONDITION_CD_SYS_CD  VARCHAR(50) NULL
)
GO


ALTER TABLE DBO.CONDITION
       ADD PRIMARY KEY (CONDITION_KEY)
GO


DECLARE @sql nvarchar(max) = N'';

;WITH x AS 
(
  SELECT DISTINCT 
      QUOTENAME(OBJECT_SCHEMA_NAME(parent_object_id)) + '.' 
    + QUOTENAME(OBJECT_NAME(parent_object_id))  as obj,
	 name AS FK_name

  FROM sys.foreign_keys
  where OBJECT_NAME(parent_object_id) = 'LAB_RPT_USER_COMMENT'
)
SELECT @sql += N'ALTER TABLE ' + obj + N' DROP CONSTRAINT ' + FK_name+ '  ;
' FROM x;

EXEC sys.sp_executesql @sql;

go

 IF OBJECT_ID ('dbo.LAB_TEST') IS NOT NULL truncate table dbo.LAB_TEST; 
 GO

 ALTER TABLE [dbo].[LAB_RPT_USER_COMMENT]  WITH CHECK ADD FOREIGN KEY([LAB_TEST_KEY])
REFERENCES [dbo].[LAB_TEST] ([LAB_TEST_KEY])
GO




CREATE TABLE DBO.LDF_DATA (
       LDF_DATA_KEY         BIGINT NOT NULL,
       LDF_GROUP_KEY        BIGINT NULL,
       LDF_COLUMN_TYPE      VARCHAR(300) NULL,
       CONDITION_CD         VARCHAR(10) NULL,
       CONDITION_DESC_TXT   VARCHAR(100) NULL,
       CDC_NATIONAL_ID      VARCHAR(50) NULL,
       CLASS_CD             VARCHAR(20) NULL,
       CODE_SET_NM          VARCHAR(256) NULL,
       BUSINESS_OBJ_NM      VARCHAR(50) NULL,
       DISPLAY_ORDER_NUMBER INT,
       FIELD_SIZE           VARCHAR(10) NULL,
       LDF_VALUE            VARCHAR(100) NULL,
       IMPORT_VERSION_NBR   BIGINT,
       LABEL_TXT 	    VARCHAR(300) NULL,
       LDF_OID		    VARCHAR(50) NULL,
       NND_IND		    VARCHAR(1) NULL,
       RECORD_STATUS_CD VARCHAR(8) NOT NULL
       CONSTRAINT CHK_LDFDATA_RECORD_STATUS CHECK(RECORD_STATUS_CD IN('ACTIVE' ,'INACTIVE'))  	
)
GO


ALTER TABLE DBO.LDF_DATA
       ADD PRIMARY KEY (LDF_DATA_KEY)
GO


CREATE TABLE DBO.LDF_GROUP (
		LDF_GROUP_KEY        BIGINT NOT NULL,
 		BUSINESS_OBJECT_UID  BIGINT NULL
)
GO


ALTER TABLE DBO.LDF_GROUP
       ADD PRIMARY KEY (LDF_GROUP_KEY)
GO

CREATE TABLE DBO.ORGANIZATION_LDF_GROUP (
       ORGANIZATION_KEY     BIGINT NOT NULL,
       LDF_GROUP_KEY        BIGINT NOT NULL,
       RECORD_STATUS_CD VARCHAR(8) NOT NULL 
       CONSTRAINT CHK_ORGLDF_RECORD_STATUS CHECK(RECORD_STATUS_CD IN('ACTIVE' ,'INACTIVE'))  	

)
GO 


ALTER TABLE DBO.ORGANIZATION_LDF_GROUP
       ADD PRIMARY KEY (ORGANIZATION_KEY, LDF_GROUP_KEY)
GO

ALTER TABLE DBO.ORGANIZATION_LDF_GROUP
       ADD  FOREIGN KEY (ORGANIZATION_KEY)
                             REFERENCES D_ORGANIZATION
GO

CREATE TABLE DBO.PATIENT_LDF_GROUP (
       PATIENT_KEY           BIGINT NOT NULL,
       LDF_GROUP_KEY        BIGINT NOT NULL,
       RECORD_STATUS_CD VARCHAR(8) NOT NULL
       CONSTRAINT CHK_PATLDFGRP_RECORD_STATUS CHECK(RECORD_STATUS_CD IN('ACTIVE' ,'INACTIVE'))  	
)
GO


ALTER TABLE DBO.PATIENT_LDF_GROUP
       ADD PRIMARY KEY (PATIENT_KEY, LDF_GROUP_KEY)
GO

ALTER TABLE DBO.PATIENT_LDF_GROUP
       ADD   FOREIGN KEY (PATIENT_KEY)
                             REFERENCES D_PATIENT  
GO

CREATE TABLE DBO.PROVIDER_LDF_GROUP (
       PROVIDER_KEY           BIGINT NOT NULL,
       LDF_GROUP_KEY        BIGINT NOT NULL,
       RECORD_STATUS_CD VARCHAR(8) NOT NULL
       CONSTRAINT CHK_PROVLDFGRP_RECORD_STATUS CHECK(RECORD_STATUS_CD IN('ACTIVE' ,'INACTIVE'))  	
)
GO


ALTER TABLE DBO.PROVIDER_LDF_GROUP
       ADD PRIMARY KEY (PROVIDER_KEY, LDF_GROUP_KEY)
GO

ALTER TABLE DBO.PROVIDER_LDF_GROUP
       ADD   FOREIGN KEY (PROVIDER_KEY)
                             REFERENCES D_PROVIDER
GO


CREATE TABLE dbo.ANTIMICROBIAL (
       ANTIMICROBIAL_GRP_KEY BIGINT NOT NULL,
       ANTIMICROBIAL_AGENT_TESTED_IND varchar(50) NULL,
       SUSCEPTABILITY_METHOD varchar(50) NULL,
       S_I_R_U_RESULT       varchar(50) NULL,
       MIC_SIGN             varchar(50) NULL,
       MIC_VALUE            numeric NULL,
       ANTIMICROBIAL_KEY    BIGINT NOT NULL
)
go


ALTER TABLE dbo.ANTIMICROBIAL
       ADD PRIMARY KEY (ANTIMICROBIAL_GRP_KEY, ANTIMICROBIAL_KEY)
go


CREATE TABLE dbo.ANTIMICROBIAL_GROUP (
       ANTIMICROBIAL_GRP_KEY BIGINT NOT NULL
)
go


ALTER TABLE dbo.ANTIMICROBIAL_GROUP
       ADD PRIMARY KEY (ANTIMICROBIAL_GRP_KEY)
go


CREATE TABLE dbo.BMIRD_CASE (
       INVESTIGATOR_KEY     BIGINT NOT NULL,
       PHYSICIAN_KEY        BIGINT NOT NULL,
       PATIENT_KEY          BIGINT NOT NULL,
       REPORTER_KEY         BIGINT NOT NULL,
       NURSING_HOME_KEY     BIGINT NOT NULL,
       DAYCARE_FACILITY_KEY BIGINT NOT NULL,
       TRANSFERED_IND       VARCHAR(50) NULL,
       INV_ASSIGNED_DT_KEY  BIGINT NOT NULL,
       BIRTH_WEIGHT_IN_GRAMS numeric NULL,
       BIRTH_WEIGHT_POUNDS  numeric NULL,
       WEIGHT_IN_POUNDS  numeric NULL,
       WEIGHT_IN_OUNCES  numeric NULL,
       WEIGHT_IN_KILOGRAM  numeric NULL,
       WEIGHT_UNKNOWN  VARCHAR(50) NULL,
       HEIGHT_IN_FEET  numeric NULL,
       HEIGHT_IN_INCHES  numeric NULL,
       HEIGHT_IN_CENTIMETERS  numeric NULL,
       HEIGHT_UNKNOWN VARCHAR(50) NULL,
       OTH_STREP_PNEUMO1_CULT_SITES  VARCHAR(50) NULL,
       OTH_STREP_PNEUMO2_CULT_SITES  VARCHAR(50) NULL,
       IHC_SPECIMEN_1 VARCHAR(50) NULL,
       IHC_SPECIMEN_2 VARCHAR(50) NULL,
       IHC_SPECIMEN_3 VARCHAR(50) NULL,
       SAMPLE_COLLECTION_DT DATETIME NULL,
       CONJ_MENING_VACC VARCHAR(50) NULL,
       TREATMENT_HOSPITAL_NM VARCHAR(100) NULL,
       TREATMENT_HOSPITAL_KEY BIGINT NULL,
       OTH_TYPE_OF_INSURANCE    VARCHAR(50) NULL,
       BIRTH_WEIGHT_OUNCES  numeric NULL,
       PREGNANT_IND         VARCHAR(50) NULL,
       OUTCOME_OF_FETUS     VARCHAR(50) NULL,
       UNDER_1_MONTH_IND    VARCHAR(50) NULL,
       GESTATIONAL_AGE      numeric NULL,
       BACTERIAL_SPECIES_ISOLATED VARCHAR(50) NULL,
       FIRST_POSITIVE_CULTURE_DT DATETIME NULL,
       UNDERLYING_CONDITION_IND VARCHAR(50) NULL,
       PATIENT_YR_IN_COLLEGE VARCHAR(50) NULL,
       CULTURE_SEROTYPE     VARCHAR(50) NULL,
       PATIENT_STATUS_IN_COLLEGE VARCHAR(50) NULL,
       PATIENT_CURR_LIVING_SITUATION VARCHAR(50) NULL,
       HIB_VACC_RECEIVED_IND VARCHAR(50) NULL,
       CULTURE_SEROGROUP    VARCHAR(50) NULL,
       ATTENDING_COLLEGE_IND VARCHAR(50) NULL,
       OXACILLIN_ZONE_SIZE  numeric NULL,
       OXACILLIN_INTERPRETATION VARCHAR(50) NULL,
       PNEUVACC_RECEIVED_IND VARCHAR(50) NULL,
       PNEUCONJ_RECEIVED_IND VARCHAR(50) NULL,
       FIRST_ADDITIONAL_SPECIMEN_DT DATETIME NULL,
       SECOND_ADDITIONAL_SPECIMEN_DT DATETIME NULL,
       PATIENT_HAD_SURGERY_IND VARCHAR(50) NULL,
       SURGERY_DT           DATETIME NULL,
       PATIENT_HAVE_BABY_IND VARCHAR(50) NULL,
       BABY_DELIVERY_DT     DATETIME NULL,
       IDENT_THRU_AUDIT_IND VARCHAR(50) NULL,
       SAME_PATHOGEN_RECURRENT_IND VARCHAR(50) NULL,
       OTHER_SPECIES_ISOLATE_SITE VARCHAR(2000) NULL,
       OTHER_CASE_IDENT_METHOD VARCHAR(2000) NULL,
       OTHER_HOUSING_OPTION VARCHAR(2000) NULL,
       PATIENT_CURR_ATTEND_SCHOOL_NM VARCHAR(100) NULL,
       POLYSAC_MENINGOC_VACC_IND VARCHAR(50) NULL,
       FAMILY_MEDICAL_INSURANCE_TYPE VARCHAR(50) NULL,
       HIB_CONTACT_IN_LAST_2_MON_IND VARCHAR(50) NULL,
       TYPE_HIB_CONTACT_IN_LAST_2_MON VARCHAR(2000) NULL,
       PRETERM_BIRTH_WK_NBR numeric NULL,
       IMMUNOSUPRESSION_HIV_STATUS VARCHAR(2000) NULL,
       ACUTE_SERUM_AVAILABLE_IND VARCHAR(50) NULL,
       ACUTE_SERUM_AVAILABLE_DT DATETIME NULL,
       CONVALESNT_SERUM_AVAILABLE_IND VARCHAR(50) NULL,
       CONVALESNT_SERUM_AVAILABLE_DT DATETIME NULL,
       BIRTH_OUTSIDE_HSPTL_IND VARCHAR(50) NULL,
       BIRTH_OUTSIDE_HSPTL_LOCATION VARCHAR(50) NULL,
       BABY_HSPTL_DISCHARGE_DTTIME DATETIME NULL,
       BABY_SAME_HSPTL_READMIT_IND VARCHAR(50) NULL,
       BABY_SAME_HSPTL_READMIT_DTTIME DATETIME NULL,
       FRM_HOME_TO_DIF_HSPTL_IND VARCHAR(50) NULL,
       FRM_HOME_TO_DIF_HSPTL_DTTIME DATETIME NULL,
       MOTHER_LAST_NM       VARCHAR(50) NULL,
       MOTHER_FIRST_NM      VARCHAR(50) NULL,
       MOTHER_HOSPTL_ADMISSION_DTTIME DATETIME NULL,
       MOTHER_PATIENT_CHART_NBR VARCHAR(2000) NULL,
       MOTHER_PENICILLIN_ALLERGY_IND VARCHAR(50) NULL,
       MEMBRANE_RUPTURE_DTTIME DATETIME NULL,
       MEMBRANE_RUPTURE_GE_18HRS_IND VARCHAR(50) NULL,
       RUPTURE_BEFORE_LABOR_ONSET VARCHAR(50) NULL,
       MEMBRANE_RUPTURE_TYPE VARCHAR(50) NULL,
       DELIVERY_TYPE        VARCHAR(50) NULL,
       MOTHER_INTRAPARTUM_FEVER_IND VARCHAR(50) NULL,
       FIRST_INTRAPARTUM_FEVER_DTTIME DATETIME NULL,
       RECEIVED_PRENATAL_CARE_IND VARCHAR(50) NULL,
       PRENATAL_CARE_IN_LABOR_CHART VARCHAR(50) NULL,
       PRENATAL_CARE_VISIT_NBR numeric NULL,
       FIRST_PRENATAL_CARE_VISIT_DT DATETIME NULL,
       LAST_PRENATAL_CARE_VISIT_DT DATETIME NULL,
       LAST_PRENATAL_CARE_VISIT_EGA numeric NULL,
       GBS_BACTERIURIA_IN_PREGNANCY VARCHAR(50) NULL,
       PREVIOUS_BIRTH_WITH_GBS_IND VARCHAR(50) NULL,
       GBS_CULTURED_BEFORE_ADMISSION VARCHAR(50) NULL,
       GBS_1ST_CULTURE_DT   DATETIME NULL,
       GBS_1ST_CULTURE_POSITIVE_IND VARCHAR(50) NULL,
       GBS_2ND_CULTURE_DT   DATETIME NULL,
       GBS_2ND_CULTURE_POSITIVE_IND VARCHAR(50) NULL,
       GBS_AFTER_ADM_BEFORE_DELIVERY VARCHAR(50) NULL,
       AFTER_ADM_GBS_CULTURE_DT DATETIME NULL,
       GBS_CULTURE_DELIVERY_AVAILABLE VARCHAR(50) NULL,
       INTRAPARTUM_ANTIBIOTICS_GIVEN VARCHAR(50) NULL,
       FIRST_ANTIBIOTICS_GIVEN_DTTIME DATETIME NULL,
       INTRAPARTUMANTIBIOTICSINTERVAL VARCHAR(20) NULL,
       INTRAPARTUM_ANTIBIOTICS_REASON VARCHAR(50) NULL,
       BABY_BIRTH_TIME      VARCHAR(20) NULL,
       NEISERRIA_2NDARY_CASE_IND VARCHAR(50) NULL,
       NEISERRIA_2ND_CASE_CONTRACT VARCHAR(50) NULL,
       OTHER_2NDARY_CASE_TYPE VARCHAR(2000) NULL,
       NEISERRIA_RESIST_TO_RIFAMPIN VARCHAR(50) NULL,
       NEISERRIA_RESIST_TO_SULFA VARCHAR(50) NULL,
       FIRST_HSPTL_DISCHARGE_TIME VARCHAR(2000) NULL,
       FIRST_HSPTL_READMISSION_TIME VARCHAR(2000) NULL,
       SECOND_HSPTL_ADMISSION_TIME VARCHAR(2000) NULL,
       ABCCASE              VARCHAR(50) NULL,
       HSPTL_MATERNAL_ADMISSION_TIME VARCHAR(2000) NULL,
       MEMBRANE_RUPTURE_TIME VARCHAR(2000) NULL,
       INTRAPARTUM_FEVER_RECORD_TIME VARCHAR(2000) NULL,
       ANTIBIOTICS_1ST_ADMIN_TIME VARCHAR(2000) NULL,
       BMIRD_MULTI_VAL_GRP_KEY BIGINT NOT NULL,
       OTHER_PRIOR_ILLNESS  VARCHAR(2000) NULL,
       OTHER_MALIGNANCY     VARCHAR(2000) NULL,
       ORGAN_TRANSPLANT     VARCHAR(2000) NULL,
       DAYCARE_IND          VARCHAR(50) NULL,
       NURSING_HOME_IND     VARCHAR(50) NULL,
       TYPES_OF_OTHER_INFECTION VARCHAR(2000) NULL,
       BACTERIAL_OTHER_SPECIED VARCHAR(2000) NULL,
       STERILE_SITE_OTHER   VARCHAR(2000) NULL,
       UNDERLYING_CONDITIONS_OTHER VARCHAR(2000) NULL,
       CULTURE_SEROGROUP_OTHER VARCHAR(2000) NULL,
       PERSISTENT_DISEASE_IND VARCHAR(50) NULL,
       GBS_CULTURE_POSITIVE_IND VARCHAR(50) NULL,
       ANTIMICROBIAL_GRP_KEY BIGINT NOT NULL,       
       BACTERIAL_OTHER_ISOLATED VARCHAR(50) NULL,
       INVESTIGATION_KEY    BIGINT NOT NULL,
       ADT_HSPTL_KEY        BIGINT NOT NULL,
       RPT_SRC_ORG_KEY      BIGINT NOT NULL,
       CONDITION_KEY        BIGINT NOT NULL,
       FAMILY_MED_INSURANCE_TYPE_OTHE VARCHAR(2000) NULL,
       LDF_GROUP_KEY        BIGINT NOT NULL,
       PRIOR_STATE_CASE_ID  VARCHAR(2000) NULL,
       BIRTH_CNTRY_CD       VARCHAR(50) NULL,
       INITIAL_HSPTL_NAME   VARCHAR(100) NULL,
       BIRTH_HSPTL_NAME     VARCHAR(100) NULL,
       FROM_HOME_HSPTL_NAME VARCHAR(100) NULL,
       CULTURE_IDENT_ORG_NAME VARCHAR(100) NULL,
       TRANSFER_FRM_HSPTL_NAME VARCHAR(100) NULL,
       CASE_REPORT_STATUS   VARCHAR(50) NULL,
       TRANSFER_FRM_HSPTL_ID VARCHAR(100) NULL,
       BIRTH_HSPTL_ID       VARCHAR(100) NULL,
       DIF_HSPTL_ID         VARCHAR(100) NULL,
       ABC_STATE_CASE_ID    VARCHAR(199) NULL,
       INV_PATIENT_CHART_NBR VARCHAR(2000) NULL,
       OTHSPEC1             VARCHAR(100) NULL,
       OTHSPEC2             VARCHAR(100) NULL,
       INTBODYSITE          VARCHAR(100) NULL,
       OTHILL2              VARCHAR(100) NULL,
       OTHILL3              VARCHAR(100) NULL,
       OTHNONSTER           VARCHAR(100) NULL,
       OTHSEROTYPE          VARCHAR(100) NULL,
       HINFAGE              VARCHAR(100) NULL,
       ABCSINVLN            VARCHAR(100) NULL,
       ABCSINVFN            VARCHAR(100) NULL,
       ABCSINVEMAIL         VARCHAR(100) NULL,
       ABCSINVTELE          VARCHAR(100) NULL,
       ABCSINVEXT           VARCHAR(100) NULL,
       GEOCODING_LOCATION_KEY BIGINT

);
CREATE TABLE dbo.PERTUSSIS_CASE (
       RPT_SRC_ORG_KEY      BIGINT NOT NULL,
       REPORTER_KEY         BIGINT NOT NULL,
       PHYSICIAN_KEY        BIGINT NOT NULL,
       INVESTIGATOR_KEY     BIGINT NOT NULL,
       INV_ASSIGNED_DT_KEY  BIGINT NOT NULL,
       PATIENT_KEY          BIGINT NOT NULL,
       COUGH_ONSET_DT       datetime NULL,
       PAROXYSMAL_COUGH_IND varchar(50) NULL,
       WHOOP_IND            varchar(50) NULL,
       POST_TUSSIVE_VOMITING_IND varchar(50) NULL,
       COUGH_IND            varchar(50) NULL,
       APNEA_IND            varchar(50) NULL,
       FINAL_INTERVIEW_DT   datetime NULL,
       COUGH_AT_FINAL_INTERVIEW_IND varchar(50) NULL,
       COUGH_DURATION_DAYS  numeric NULL,
       PNEUMONIA_XRAY_RESULT varchar(50) NULL,
       GENERIZED_FOCAL_SEIZURE_IND varchar(50) NULL,
       ACUTE_ENCEPHALOPATHY_IND varchar(50) NULL,
       ANTIBIOTICS_GIVEN_IND varchar(50) NULL,
       LAB_TESTING_DONE_IND varchar(50) NULL,
       CULTURE_DT           datetime NULL,
       BORDETELLA_PRT_CULTURE_RESULT varchar(50) NULL,
       SEROLOGY_1_DT        datetime NULL,
       SEROLOGY_1_RESULT    varchar(50) NULL,
       SEROLOGY_2_DT        datetime NULL,
       SEROLOGY_2_RESULT    varchar(50) NULL,
       PCR_SPECIMEN_DT      datetime NULL,
       PCR_RESULT           varchar(50) NULL,
       EVER_RECEIVED_VACCINE_IND varchar(50) NULL,
       BEFORE_ILLNESS_LAST_VACCINE_DT datetime NULL,
       VACCINE_GIVEN_DOSE_NBR varchar(50) NULL,
       LESS_THAN_3_DOSES_REASON varchar(50) NULL,
       EPI_LINK_TO_OTHER_CASE_IND varchar(50) NULL,
       EPI_LINKED_TO_CASE_ID varchar(50) NULL,
       TRANSMISSION_SETTING varchar(20) NULL,
       SPREAD_BEYOND_XMISSION_SETTING varchar(50) NULL,
       SPREAD_SETTING_OUTSIDE_HOUSE varchar(50) NULL,
       SPREAD_SETTING_OUT_HOUSE_OTHER varchar(2000) NULL,
       ONE_OR_MORE_SUSPECT_SRC_IND varchar(50) NULL,
       SUSPECT_INFECTION_SRC_NBR numeric NULL,
       CONTACT_TO_RECEIVE_PROPHYLAXIS numeric NULL,
       OTHER_LAB_TEST_DONE_IND varchar(50) NULL,
       OTHER_LAB_TEST_DESC  varchar(2000) NULL,
       OTHER_LAB_TEST_DT    datetime NULL,
       OTHER_LAB_TEST_RESULT varchar(2000) NULL,
       BORDETELLA_CULTURE_TAKEN_IND varchar(50) NULL,
       BORDETELLA_SEROLOGY_1_DONE_IND varchar(50) NULL,
       BORDETELLA_SEROLOGY_2_DONE_IND varchar(50) NULL,
       BORDETELLA_PCR_TAKEN_IND varchar(50) NULL,
       SPECIMEN_TO_CDC_GENOTYPING_IND varchar(50) NULL,
       SPECIMEN_TO_CDC_GENOTYPING_DT datetime NULL,
       SPECIMENTO_CDC_GENOTYPING_TYPE varchar(2000) NULL,
       NOT_PERTUSSIS_VACCINED_REASON varchar(50) NULL,
       DOSES_NBR_2WEEKS_BEFORE_SICK varchar(50) NULL,
       ADT_HSPTL_KEY        BIGINT NOT NULL,
       INVESTIGATION_KEY    BIGINT NOT NULL,
       CONDITION_KEY        BIGINT NOT NULL,
       SEROLOGY_LAB1_NM     varchar(2000) NULL,
       SEROLOGY_LAB2_NM     varchar(2000) NULL,
       PCR_LAB              varchar(50) NULL,
       PCR_LAB_NM           varchar(2000) NULL,
       PERTUSSIS_SUSPECT_SRC_GRP_KEY BIGINT NOT NULL,
       PERTUSSIS_TREATMENT_GRP_KEY BIGINT NOT NULL,
       SEROLOGY_LAB1        varchar(50) NULL,
       SEROLOGY_LAB2        varchar(50) NULL,
       LDF_GROUP_KEY        BIGINT NOT NULL,
       BIRTH_WEIGHT_IN_GRAMS numeric NULL,
       BIRTH_WEIGHT_POUNDS  numeric NULL,
       BIRTH_WEIGHT_OUNCES  numeric NULL,
       BIRTH_WEIGHT_UNKNOWN  varchar(50) NULL,       
       MOTHERS_AGE   numeric NULL,
       PATIENT_LESS_THAN_12MONTHS varchar(50) NULL,
       GEOCODING_LOCATION_KEY BIGINT
)
go


ALTER TABLE dbo.PERTUSSIS_CASE
       ADD PRIMARY KEY ( RPT_SRC_ORG_KEY, 
              REPORTER_KEY, PHYSICIAN_KEY, INVESTIGATOR_KEY, 
              INV_ASSIGNED_DT_KEY, PATIENT_KEY, ADT_HSPTL_KEY, 
              INVESTIGATION_KEY, CONDITION_KEY, 
              PERTUSSIS_SUSPECT_SRC_GRP_KEY, 
              PERTUSSIS_TREATMENT_GRP_KEY, LDF_GROUP_KEY)
go


CREATE TABLE dbo.PERTUSSIS_SUSPECTED_SOURCE_FLD (
       SOURCE_AGE           numeric NULL,
       SOURCE_AGE_UNIT      varchar(50) NULL,
       SOURCE_GENDER        varchar(50) NULL,
       SOURCE_RELATION      varchar(50) NULL,
       SOURCE_RELATION_OTHER varchar(2000) NULL,
       SOURCE_VACC_DOSE_NUMBER varchar(50) NULL,
       SOURCE_COUGH_ONSET_DT datetime NULL,
       PERTUSSIS_SUSPECT_SRC_FLD_KEY BIGINT NOT NULL,
       PERTUSSIS_SUSPECT_SRC_GRP_KEY BIGINT NOT NULL
)
go


ALTER TABLE dbo.PERTUSSIS_SUSPECTED_SOURCE_FLD
       ADD PRIMARY KEY (PERTUSSIS_SUSPECT_SRC_FLD_KEY, 
              PERTUSSIS_SUSPECT_SRC_GRP_KEY)
go


CREATE TABLE dbo.PERTUSSIS_SUSPECTED_SOURCE_GRP (
       PERTUSSIS_SUSPECT_SRC_GRP_KEY BIGINT NOT NULL
)
go


ALTER TABLE dbo.PERTUSSIS_SUSPECTED_SOURCE_GRP
       ADD PRIMARY KEY (PERTUSSIS_SUSPECT_SRC_GRP_KEY)
go


CREATE TABLE dbo.PERTUSSIS_TREATMENT_FIELD (
       ANTIBIOTICS_RECEIVED_DESC varchar(50) NULL,
       PERTUSSIS_TREATMENT_FLD_KEY BIGINT NOT NULL,
       ANTIBIOTICS_START_DT datetime NULL,
       ANTIBIOTICS_TAKEN_DAY_NBR numeric(4) NULL,
       PERTUSSIS_TREATMENT_GRP_KEY BIGINT NOT NULL
)
go


ALTER TABLE dbo.PERTUSSIS_TREATMENT_FIELD
       ADD PRIMARY KEY (PERTUSSIS_TREATMENT_FLD_KEY, 
              PERTUSSIS_TREATMENT_GRP_KEY)
go


CREATE TABLE dbo.PERTUSSIS_TREATMENT_GROUP (
       PERTUSSIS_TREATMENT_GRP_KEY BIGINT NOT NULL
)
go


ALTER TABLE dbo.PERTUSSIS_TREATMENT_GROUP
       ADD PRIMARY KEY (PERTUSSIS_TREATMENT_GRP_KEY)
go



ALTER TABLE dbo.BMIRD_CASE
       ADD CONSTRAINT PK_BMIRD_CASE PRIMARY KEY  CLUSTERED (
	 INVESTIGATOR_KEY,
       PHYSICIAN_KEY,
       PATIENT_KEY,
       REPORTER_KEY,
       NURSING_HOME_KEY,
       DAYCARE_FACILITY_KEY,
       INV_ASSIGNED_DT_KEY,
       BMIRD_MULTI_VAL_GRP_KEY,       
       ANTIMICROBIAL_GRP_KEY,
       INVESTIGATION_KEY ,
       ADT_HSPTL_KEY  ,
       RPT_SRC_ORG_KEY ,
       CONDITION_KEY ,
       LDF_GROUP_KEY );


CREATE TABLE dbo.BMIRD_MULTI_VALUE_FIELD (
       BMIRD_MULTI_VAL_FIELD_KEY BIGINT NOT NULL,
       TYPES_OF_INFECTIONS  VARCHAR(50) NULL,
       UNDERLYING_CONDITION_NM VARCHAR(50) NULL,
       NON_STERILE_SITE     VARCHAR(50) NULL,
       STREP_PNEUMO_2_CULTURE_SITES VARCHAR(50) NULL,
       STREP_PNEUMO_1_CULTURE_SITES VARCHAR(50) NULL,
       GBS_2ND_CULTURE_SITES VARCHAR(50) NULL,
       GBS_1ST_CULTURE_SITES VARCHAR(50) NULL,
       PAST_SIGNIFICANT_MEDICAL_HIST VARCHAR(50) NULL,
       STERILE_SITE         VARCHAR(50) NULL,
       AFTER_ADM_GBS_CULTURE_SITES VARCHAR(50) NULL,
       BMIRD_MULTI_VAL_GRP_KEY BIGINT NOT NULL,
       OTHER_PRIOR_CONDITION_IND VARCHAR(50) NULL,
       HOW_WAS_CASE_IDENTIFIED VARCHAR(50) NULL,
       OTHERBUG2            VARCHAR(20) NULL,
       PCR_SOURCE VARCHAR(50) NULL,
       TYPE_OF_INSURANCE    VARCHAR(50) NULL

);


ALTER TABLE dbo.BMIRD_MULTI_VALUE_FIELD
       ADD PRIMARY KEY (BMIRD_MULTI_VAL_FIELD_KEY, 
              BMIRD_MULTI_VAL_GRP_KEY)
go


CREATE TABLE dbo.BMIRD_MULTI_VALUE_FIELD_GROUP (
       BMIRD_MULTI_VAL_GRP_KEY BIGINT NOT NULL
)
go


ALTER TABLE dbo.BMIRD_MULTI_VALUE_FIELD_GROUP
       ADD PRIMARY KEY (BMIRD_MULTI_VAL_GRP_KEY)
go


CREATE TABLE dbo.CASE_COUNT (
       CASE_COUNT           numeric NULL,
       INVESTIGATOR_KEY     BIGINT NOT NULL,
       REPORTER_KEY         BIGINT NOT NULL,
       PHYSICIAN_KEY        BIGINT NOT NULL,
       RPT_SRC_ORG_KEY      BIGINT NOT NULL,
       INV_ASSIGNED_DT_KEY  BIGINT NOT NULL,
       PATIENT_KEY          BIGINT NOT NULL,
       INVESTIGATION_KEY    BIGINT NOT NULL,
       INVESTIGATION_COUNT  BIGINT NULL,
       CONDITION_KEY        BIGINT NOT NULL,
       ADT_HSPTL_KEY        BIGINT NULL,
       INV_START_DT_KEY		BIGINT NOT NULL,
       DIAGNOSIS_DT_KEY		BIGINT NOT NULL,
       INV_RPT_DT_KEY		BIGINT NOT NULL,
        GEOCODING_LOCATION_KEY BIGINT
)
go


ALTER TABLE dbo.CASE_COUNT
       ADD PRIMARY KEY (INV_ASSIGNED_DT_KEY, INVESTIGATOR_KEY, 
              REPORTER_KEY, PHYSICIAN_KEY,  
              RPT_SRC_ORG_KEY, PATIENT_KEY, INVESTIGATION_KEY, 
              CONDITION_KEY)
go


CREATE TABLE dbo.CRS_CASE (
       AT_PREGNANCY_18YOUNGR_CHILDNBR numeric NULL,
       AUTOPSY_PERFORMED_IND varchar(50) NULL,
       BIRTH_DELIVERED_IN_US_NBR numeric NULL,
       BIRTH_STATE          varchar(50) NULL,
       BIRTH_WEIGHT         numeric NULL,
       BIRTH_WEIGHT_UNIT    varchar(50) NULL,
       BY_WHOM_NOT_MD_DIAGNSD_RUBELLA varchar(2000) NULL,
       CHILD_18YOUNGR_RUBELLA_VACCD varchar(50) NULL,
       CHILD_AGE_AT_DIAGNOSIS_UNIT varchar(50) NULL,
       CHILD_AGE_AT_THIS_DIAGNOSIS numeric NULL,
       CHILD_CONGNITAL_HEART_DISEASE varchar(50) NULL,
       CHILD_DERMAL_ERYTHROPOISESIS varchar(50) NULL,
       CHILD_CONGNITAL_GLAUCOMA varchar(50) NULL,
       CHILD_JAUNDICE       varchar(50) NULL,
       CHILD_LOW_PLATELETS  varchar(50) NULL,
       CHILD_MENINGOENCEPHALITIS varchar(50) NULL,
       CHILD_MICROENCEPHALY varchar(50) NULL,
       CHILD_OTHER_ABNORMALITIES varchar(50) NULL,
       CHILD_PURPURA        varchar(50) NULL,
       CHILD_RADIOLUCENT_BONE varchar(50) NULL,
       CHILD_CATARACTS      varchar(50) NULL,
       CHILD_ENLARGED_LIVER varchar(50) NULL,
       CHILD_ENLARGED_SPLEEN varchar(50) NULL,
       CHILD_HEARING_LOSS   varchar(50) NULL,
       CHILD_MENTAL_RETARDATION varchar(50) NULL,
       CHILD_OTHER_ABNORMALITIES_1 varchar(2000) NULL,
       CHILD_OTHER_ABNORMALITIES_2 varchar(2000) NULL,
       CHILD_OTHER_ABNORMALITIES_3 varchar(2000) NULL,
       CHILD_OTHER_ABNORMALITIES_4 varchar(2000) NULL,
       CHILD_PATENT_DUCTUS_ARTERIOSUS varchar(50) NULL,
       CHILD_PIGMENTARY_RETINOPATHY varchar(50) NULL,
       CHILD_PULMONIC_STENOSIS varchar(50) NULL,
       CHILD_RUBELLA_LAB_TEST_DONE varchar(50) NULL,
       REASON_NOT_A_CRS_CASE varchar(50) NULL,
       DEATH_CERTIFICATE_2NDARY_CAUSE varchar(2000) NULL,
       DEATH_CERTIFICATE_PRIMARY_CAUS varchar(2000) NULL,
       DIFFERENCE_BETWEEN_TEST_1_2 varchar(50) NULL,
       FAMILYPLAND_PRIOR_CONCEPTION varchar(50) NULL,
       FINAL_ANATOMICAL_DEATH_CAUSE varchar(2000) NULL,
       PRENATAL_FIRST_VISIT_DT datetime NULL,
       GESTATIONAL_AGE_IN_WK_AT_BIRTH numeric NULL,
       HEALTH_PROVIDER_LAST_EVAL_DT datetime NULL,
       IGM_EIA_1_METHOD_USED varchar(50) NULL,
       IGM_EIA_2_METHOD_USED varchar(50) NULL,
       IGM_EIA_NONCAPTURE_RESULT varchar(50) NULL,
       IGM_EIA_OTHER_TST_RESULT_VAL varchar(2000) NULL,
       IGM_EIA_TEST_1_RESULT_VAL varchar(2000) NULL,
       IGM_EIA_TEST_2_RESULT_VAL varchar(2000) NULL,
       INFANT_DEATH_FRM_CRS varchar(50) NULL,
       MATERNAL_ILL_CLINICAL_FEATURE varchar(2000) NULL,
       MOTHER_AGE_AT_GIVEN_BIRTH numeric NULL,
       MOTHER_ARTHRALGIA_ARTHRITIS varchar(2000) NULL,
       MOTHER_BIRTH_CNTRY   varchar(50) NULL,
       MOTHER_EXPOSD_TO_RUBELLA_CASE varchar(50) NULL,
       MOTHER_GIVEN_PRIOR_BIRTH_IN_US varchar(50) NULL,
       MOTHER_HAD_FEVER     varchar(50) NULL,
       MOTHER_HAD_LYMPHADENOPATHY varchar(50) NULL,
       MOTHER_HAS_MACULOPAPULAR_RASH varchar(50) NULL,
       MOTHER_IMMUNIZED_IND varchar(50) NULL,
       MOTHER_KNOW_EXPOSED_AT_WHERE varchar(50) NULL,
       MOTHER_LIVING_IN_US_YRS numeric NULL,
       MOTHER_OCCUPATION_ATCONCEPTION varchar(2000) NULL,
       MOTHER_OTHER_VACC_INFO_SRC varchar(2000) NULL,
       MOTHER_RASH_ONSET_DT datetime NULL,
       MOTHER_RELATIONTO_RUBELLA_CASE varchar(50) NULL,
       MOTHER_RUBELLA_CASE_EXPOSE_DT datetime NULL,
       MOTHER_TRAVEL_BACK_US_1_DT datetime NULL,
       MOTHER_TRAVEL_BACK_US_2_DT datetime NULL,
       MOTHER_TRAVEL_OUT_US_1_DT datetime NULL,
       MOTHER_TRAVEL_OUT_US_2_DT datetime NULL,
       MOTHER_TRAVEL_1_TO_CNTRY varchar(50) NULL,
       MOTHER_TRAVEL_2_TO_CNTRY varchar(50) NULL,
       MOTHER_UNK_EXPOSURE_TRAVEL_IND varchar(50) NULL,
       MOTHER_IS_A_RPTD_RUBELLA_CASE varchar(50) NULL,
       MOTHERRUBELLA_IMMUNIZE_INFOSRC varchar(50) NULL,
       OTHER_CONGNITAL_HEART_DISS_IND varchar(50) NULL,
       OTHER_CONGNITALHEART_DISS_DESC varchar(2000) NULL,
       OTHER_RELATIONSHIP   varchar(2000) NULL,
       OTHER_RUBELLA_LAB_TEST_DESC varchar(2000) NULL,
       OTHER_RUBELLA_LAB_TEST_DONE varchar(50) NULL,
       OTHER_RUBELLA_LAB_TEST_DT datetime NULL,
       OTHER_RUBELLA_LAB_TEST_RESULT varchar(2000) NULL,
       OTHER_RUBELLA_SPECIMEN_TYPE varchar(2000) NULL,
       OTHER_RUBELLA_TEST_RESULT_VAL varchar(2000) NULL,
       PREGNANCY_MO_RUBELLA_SYMPTM_UP numeric NULL,
       PRENATAL_CARE_THIS_PREGNANCY varchar(50) NULL,
       PREVIOUS_PREGNANCY_NBR numeric NULL,
       RT_PCR_DT            datetime NULL,
       RT_PCR_OTHER_SPECIMEN_SRC varchar(2000) NULL,
       RT_PCR_PERFORMED     varchar(50) NULL,
       RT_PCR_RESULT        varchar(50) NULL,
       RT_PCR_SRC           varchar(50) NULL,
       RT_PCR_TEST_RESULT_VAL varchar(2000) NULL,
       RUBELLA_IGG_TEST_1   varchar(50) NULL,
       RUBELLA_IGG_TEST_1_DT datetime NULL,
       RUBELLA_IGG_TEST_1_RESULT varchar(50) NULL,
       RUBELLA_IGG_TEST_2   varchar(50) NULL,
       RUBELLA_IGG_TEST_2_DT datetime NULL,
       RUBELLA_IGG_TEST_2_RESULT varchar(50) NULL,
       RUBELLA_IGG_TEST1_RESULT_VAL varchar(2000) NULL,
       RUBELLA_IGG_TEST2_RESULT_VAL varchar(2000) NULL,
       RUBELLA_IGM_EIA_CAPTURE varchar(50) NULL,
       RUBELLA_IGM_EIA_CAPTURE_DT datetime NULL,
       RUBELLA_IGM_EIA_CAPTURE_RESULT varchar(50) NULL,
       RUBELLA_IGM_EIA_NONCAPTURE_DT datetime NULL,
       RUBELLA_IGM_EIA_TESTED varchar(50) NULL,
       RUBELLA_IGM_OTHER_TEST varchar(50) NULL,
       RUBELLA_IGM_OTHER_TEST_DESC varchar(2000) NULL,
       RUBELLA_IGM_OTHER_TEST_DT datetime NULL,
       RUBELLA_IGM_OTHER_TEST_RESULT varchar(50) NULL,
       RUBELLA_LIKE_ILL_IN_PREGNANCY varchar(50) NULL,
       RUBELLA_SPECIMEN_TYPE varchar(50) NULL,
       RUBELLAVACCD_18YOUNGR_CHILDNBR numeric NULL,
       SEROLOGICAL_CONFIRMD_AT_ILL varchar(50) NULL,
       SEROLOGICAL_TST_BEFR_PREGNANCY varchar(50) NULL,
       SEROLOGICALLY_CONFIRMD_DT datetime NULL,
       SEROLOGICALLY_CONFIRMD_RESULT varchar(50) NULL,
       SPECIMEN_TO_CDC_FOR_GENOTYPING varchar(50) NULL,
       TOTAL_LIVE_BIRTH_NBR numeric NULL,
       VACCINE_SRC          varchar(50) NULL,
       VIRUS_ISOLATION_DT   datetime NULL,
       VIRUS_ISOLATION_OTHER_SRC varchar(2000) NULL,
       VIRUS_ISOLATION_PERFORMED varchar(50) NULL,
       VIRUS_ISOLATION_RESULT varchar(50) NULL,
       VIRUS_ISOLATION_SPECIMEN_SRC varchar(50) NULL,
       YR_MOTHER_PRIOR_DELIVERY_IN_US varchar(2000) NULL,
       INVESTIGATOR_KEY     BIGINT NOT NULL,
       PATIENT_KEY          BIGINT NOT NULL,
       PHYSICIAN_KEY        BIGINT NOT NULL,
       REPORTER_KEY         BIGINT NOT NULL,
       INV_ASSIGNED_DT_KEY  BIGINT NOT NULL,
       PRENATAL_CARE_OBTAINED_FRM_2 varchar(50) NULL,
       PRENATAL_CARE_OBTAINED_FRM_3 varchar(50) NULL,
       PRENATAL_CARE_OBTAINED_FRM_1 varchar(50) NULL,
       RPT_SRC_ORG_KEY      BIGINT NOT NULL,
       ADT_HSPTL_KEY        BIGINT NOT NULL,
       MOTHER_RUBELLA_ACQUIRED_PLACE varchar(50) NULL,
       MOTHER_RUBELLA_ACQUIRED_CNTRY varchar(50) NULL,
       MOTHER_RUBELLA_ACQUIRED_CITY varchar(2000) NULL,
       MOTHER_RUBELLA_ACQUIRED_STATE varchar(50) NULL,
       MOTHER_RUBELLA_ACQUIRED_CNTY varchar(50) NULL,
       INVESTIGATION_KEY    BIGINT NOT NULL,
       CONDITION_KEY        BIGINT NOT NULL,
       SENT_FOR_GENOTYPING_DT datetime NULL,
       DIAGNOSED_BY_PHYSICIAN_IND varchar(50) NULL,
       MOTHER_RUBELLA_LAB_TEST_IND varchar(50) NULL,
       MOTHER_VACCINATED_DT datetime NULL,
       LDF_GROUP_KEY        BIGINT NOT NULL,
       GENOTYPE_SEQUENCED_CRS varchar(50) NULL,
       GENOTYPE_ID_CRS varchar(50) NULL,
       GENOTYPE_OTHER_ID_CRS varchar(50) NULL,
       GEOCODING_LOCATION_KEY BIGINT

)
go


ALTER TABLE dbo.CRS_CASE
       ADD PRIMARY KEY (INVESTIGATOR_KEY, 
              PATIENT_KEY, REPORTER_KEY, PHYSICIAN_KEY, 
              INV_ASSIGNED_DT_KEY, ADT_HSPTL_KEY, RPT_SRC_ORG_KEY, 
              INVESTIGATION_KEY, CONDITION_KEY, LDF_GROUP_KEY)
go



CREATE TABLE dbo.GENERIC_CASE (
       INVESTIGATOR_KEY     BIGINT NOT NULL,
       PHYSICIAN_KEY        BIGINT NOT NULL,
       REPORTER_KEY         BIGINT NOT NULL,
       INV_ASSIGNED_DT_KEY  BIGINT NOT NULL,
       ILLNESS_DURATION     varchar(20) NULL,
       ILLNESS_DURATION_UNIT varchar(20) NULL,
       PATIENT_AGE_AT_ONSET numeric NULL,
       PATIENT_KEY          BIGINT NOT NULL,
       PATIENT_AGE_AT_ONSET_UNIT varchar(20) NULL,
       FOOD_HANDLR_IND      varchar(50) NULL,
       DAYCARE_ASSOCIATION_IND varchar(50) NULL,
       DETECTION_METHOD     varchar(20) NULL,
       DETECTION_METHOD_OTHER varchar(100) NULL,
       ADT_HSPTL_KEY        BIGINT NOT NULL,
       PATIENT_PREGNANCY_STATUS varchar(50) NULL,
       PELVIC_INFLAMMATORY_DISS_IND varchar(50) NULL,
       RPT_SRC_ORG_KEY      BIGINT NOT NULL,
       INVESTIGATION_KEY    BIGINT NOT NULL,
       CONDITION_KEY        BIGINT NOT NULL,
       LDF_GROUP_KEY        BIGINT NOT NULL,
       GEOCODING_LOCATION_KEY BIGINT
)
go


ALTER TABLE dbo.GENERIC_CASE
       ADD PRIMARY KEY (INVESTIGATOR_KEY, PHYSICIAN_KEY, REPORTER_KEY, 
              INV_ASSIGNED_DT_KEY, PATIENT_KEY, RPT_SRC_ORG_KEY, 
              ADT_HSPTL_KEY, INVESTIGATION_KEY, CONDITION_KEY, 
              LDF_GROUP_KEY)
go


CREATE TABLE dbo.HEP_MULTI_VALUE_FIELD (
       HEP_MULTI_VAL_GRP_KEY BIGINT NOT NULL,
       HEP_MULTI_VAL_DATA_KEY BIGINT NOT NULL,
       REASON_FOR_TESTING   varchar(50) NULL,
       DISEASE_DIAGNOSIS    varchar(50) NULL,
       CNTRY_TRAVELD_OUT_USA_CAN varchar(50) NULL,
       CNTRY_NPP_TRAVELD_OUT_USA_CAN varchar(50) NULL,
       HEP_B_CONTACT_TYPE   varchar(50) NULL,
       TATTOOED_IN6WKMON_LOCATION varchar(50) NULL,
       PIERCING_IN6WKMON_LOCATION varchar(50) NULL,
       HEPB_INCARCERATION_FACILITY_TY varchar(50) NULL,
       HEP_C_CONTACT_TYPE   varchar(50) NULL,
       HEP_A_CONTACT_TYPE   varchar(50) NULL
)
go


ALTER TABLE dbo.HEP_MULTI_VALUE_FIELD
       ADD PRIMARY KEY (HEP_MULTI_VAL_GRP_KEY, HEP_MULTI_VAL_DATA_KEY)
go


CREATE TABLE dbo.HEP_MULTI_VALUE_FIELD_GROUP (
       HEP_MULTI_VAL_GRP_KEY BIGINT NOT NULL
)
go


ALTER TABLE dbo.HEP_MULTI_VALUE_FIELD_GROUP
       ADD PRIMARY KEY (HEP_MULTI_VAL_GRP_KEY)
go


CREATE TABLE dbo.HEPATITIS_CASE (
       REPORTER_KEY         BIGINT NOT NULL,
       INVESTIGATOR_KEY     BIGINT NOT NULL,
       PHYSICIAN_KEY        BIGINT NOT NULL,
       PATIENT_KEY          BIGINT NOT NULL,
       ALT_RESULT_DT        DATETIME    NULL,
       INV_ASSIGNED_DT_KEY  BIGINT NOT NULL,
       AST_RESULT_DT         DATETIME    NULL,
       RPT_SRC_ORG_KEY      BIGINT NOT NULL,
       PATIENT_SYMPTOMATIC_IND varchar(50) NULL,
       PATIENT_JUNDICED_IND varchar(50) NULL,
       PATIENT_PREGNANT_IND varchar(50) NULL,
       PATIENT_PREGNANCY_DUE_DT datetime NULL,
       HEP_A_TOTAL_ANTIBODY varchar(50) NULL,
       HEP_A_IGM_ANTIBODY   varchar(50) NULL,
       HEP_B_SURFACE_ANTIGEN varchar(50) NULL,
       HEP_B_TOTAL_ANTIBODY varchar(50) NULL,
       HEP_B_IGM_ANTIBODY   varchar(50) NULL,
       HEP_C_TOTAL_ANTIBODY varchar(50) NULL,
       HEP_D_TOTAL_ANTIBODY varchar(50) NULL,
       HEP_E_TOTAL_ANTIBODY varchar(50) NULL,
       ANTIHCV_SIGNAL_TO_CUTOFF_RATIO varchar(2000) NULL,
       ANTIHCV_SUPPLEMENTAL_ASSAY varchar(50) NULL,
       HCV_RNA              varchar(50) NULL,
       ALT_SGPT_RESULT      numeric NULL,
       ALT_SGPT_RESULT_UPPER_LIMIT numeric NULL,
       AST_SGOT_RESULT      numeric NULL,
       AST_SGOT_RESULT_UPPER_LIMIT numeric NULL,
       HEP_A_EPLINK_IND     varchar(50) NULL,
       HEP_A_CONTACTED_IND  varchar(50) NULL,
       D_N_P_EMPLOYEE_IND   varchar(50) NULL,
       D_N_P_HOUSEHOLD_CONTACT_IND varchar(50) NULL,
       HEP_A_KEYENT_IN_CHILDCARE_IND varchar(50) NULL,
       HEPA_MALE_SEX_PARTNER_NBR varchar(50) NULL,
       HEPA_FEMALE_SEX_PARTNER_NBR varchar(50) NULL,
       STREET_DRUG_INJECTED_IN_2_6_WK varchar(50) NULL,
       STREET_DRUG_USED_IN_2_6_WK varchar(50) NULL,
       TRAVEL_OUT_USA_CAN_IND varchar(50) NULL,
       HOUSEHOLD_NPP_OUT_USA_CAN varchar(50) NULL,
       PART_OF_AN_OUTBRK_IND varchar(50) NULL,
       ASSOCIATED_OUTBRK_TYPE varchar(50) NULL,
       FOODBORNE_OUTBRK_FOOD_ITEM varchar(2000) NULL,
       FOODHANDLER_2_WK_PRIOR_ONSET varchar(50) NULL,
       HEP_A_VACC_RECEIVED_IND varchar(50) NULL,
       HEP_A_VACC_RECEIVED_DOSE varchar(50) NULL,
       HEP_A_VACC_LAST_RECEIVED_YR numeric NULL,
       IMMUNE_GLOBULIN_RECEIVED_IND varchar(50) NULL,
       GLOBULIN_LAST_RECEIVED_YR datetime NULL,
       HEP_B_CONTACTED_IND  varchar(50) NULL,
       HEP_B_OTHER_CONTACT_TYPE varchar(2000) NULL,
       HEPB_STD_TREATED_IND varchar(50) NULL,
       HEPB_STD_LAST_TREATMENT_YR numeric NULL,
       STREET_DRUG_INJECTED_IN6WKMON varchar(50) NULL,
       HEMODIALYSIS_IN_LAST_6WKMON varchar(50) NULL,
       BLOOD_CONTAMINATION_IN6WKMON varchar(50) NULL,
       HEPB_BLOOD_RECEIVED_IN6WKMON varchar(50) NULL,
       HEPB_BLOOD_RECEIVED_DT datetime NULL,
       BLOOD_EXPOSURE_IN_LAST6WKMON varchar(50) NULL,
       BLOOD_EXPOSURE_IN6WKMON_OTHER varchar(2000) NULL,
       HEPB_MED_DEN_EMPLOYEE_IN6WKMON varchar(50) NULL,
       HEPB_MED_DEN_BLOOD_CONTACT_FRQ varchar(50) NULL,
       HEPB_PUB_SAFETY_WORKER_IN6WKMO varchar(50) NULL,
       HEPB_PUBSAFETY_BLOODCONTACTFRQ varchar(50) NULL,
       TATTOOED_IN6WKMON_BEFORE_ONSET varchar(50) NULL,
       TATTOOED_IN6WKMONOTHERLOCATION varchar(2000) NULL,
       PIERCING_IN6WKMON_BEFORE_ONSET varchar(50) NULL,
       PIERCING_IN6WKMONOTHERLOCATION varchar(2000) NULL,
       DEN_WORK_OR_SURGERY_IN6WKMON varchar(50) NULL,
       NON_ORAL_SURGERY_IN6WKMON varchar(50) NULL,
       HSPTLIZD_IN6WKMON_BEFORE_ONSET varchar(50) NULL,
       LONGTERMCARE_RESIDENT_IN6WKMON varchar(50) NULL,
       B_INCARCERATED24PLUSHRSIN6WKMO varchar(50) NULL,
       STREET_DRUG_USED_IN6WKMON varchar(50) NULL,
       B_INCARCERATED_6PLUS_MON_IND varchar(50) NULL,
       B_LAST6PLUSMON_INCARCERATE_YR numeric(4) NULL,
       BLAST6PLUSMO_INCARCERATEPERIOD numeric(4) NULL,
       B_LAST_INCARCERATE_PERIOD_UNIT varchar(50) NULL,
       HEP_B_VACC_RECEIVED_IND varchar(50) NULL,
       HEP_B_VACC_SHOT_RECEIVED_NBR varchar(50) NULL,
       HEP_B_VACC_LAST_RECEIVED_YR numeric(4) NULL,
       ANTI_HBSAG_TESTED_IND varchar(50) NULL,
       ANTI_HBS_POSITIVE_REACTIVE_IND varchar(50) NULL,
       HEP_C_CONTACTED_IND  varchar(50) NULL,
       MED_DEN_EMPLOYEE_IN_2WK6MO varchar(50) NULL,
       PUBLIC_SAFETY_WORKER_IN_2WK6MO varchar(50) NULL,
       TATTOOED_IN2WK6MO_BEFORE_ONSET varchar(50) NULL,
       TATTOOED_IN2WK6MO_LOCATION varchar(50) NULL,
       PIERCING_IN2WK6MO_BEFORE_ONSET varchar(50) NULL,
       PIERCING_IN2WK6MO_LOCATION varchar(50) NULL,
       STREET_DRUG_INJECTED_IN_2WK6MO varchar(50) NULL,
       STREET_DRUG_USED_IN_2WK6MO varchar(50) NULL,
       HEMODIALYSIS_IN_LAST_2WK6MO varchar(50) NULL,
       BLOOD_CONTAMINATION_IN_2WK6MO varchar(50) NULL,
       HEPC_BLOOD_RECEIVED_IN_2WK6MO varchar(50) NULL,
       BLOOD_EXPOSURE_IN_LAST2WK6MO varchar(50) NULL,
       BLOOD_EXPOSURE_IN2WK6MO_OTHER varchar(2000) NULL,
       DEN_WORK_OR_SURGERY_IN2WK6MO varchar(50) NULL,
       NON_ORAL_SURGERY_IN2WK6MO varchar(50) NULL,
       HSPTLIZD_IN2WK6MO_BEFORE_ONSET varchar(50) NULL,
       LONGTERMCARE_RESIDENT_IN2WK6MO varchar(50) NULL,
       INCARCERATED_24PLUSHRSIN2WK6MO varchar(50) NULL,
       BLOOD_TRANSFUSION_BEFORE_1992 varchar(50) NULL,
       ORGAN_TRANSPLANT_BEFORE_1992 varchar(50) NULL,
       CLOT_FACTOR_CONCERN_BEFORE1987 varchar(50) NULL,
       LONGTERM_HEMODIALYSIS_IND varchar(50) NULL,
       EVER_INJECT_NONPRESCRIBED_DRUG varchar(50) NULL,
       LIFETIME_SEX_PARTNER_NBR numeric(15,5) NULL,
       EVER_INCARCERATED_IND varchar(50) NULL,
       HEPATITIS_CONTACTED_IND varchar(50) NULL,
       HEPATITIS_CONTACT_TYPE varchar(50) NULL,
       PATIENT_MOTHER_BORN_OUT_USA varchar(50) NULL,
       MOTHER_HBSAG_POSITIVE_IND varchar(50) NULL,
       MOTHR_HBSAG_POSTV_POSTDELIVERY varchar(50) NULL,
       MOTHER_HBSAG_POSITIVE_DT datetime NULL,
       HEP_B_VACC_DOSE_CHILD_RECEIVED varchar(50) NULL,
       HEPB_1STVACC_CHILD_RECEIVED_DT datetime NULL,
       HEPB_2NDVACC_CHILD_RECEIVED_DT datetime NULL,
       HEPB_3RDVACC_CHILD_RECEIVED_DT datetime NULL,
       CHILD_RECEIVED_HBIG_IND varchar(50) NULL,
       CHILD_RECEIVED_HBIG_DT datetime NULL,
       OUTPATIENT_IV_INFUSION_IN6WKMO varchar(50) NULL,
       OUTPATIENT_IV_INFUSIONIN2WK6MO varchar(50) NULL,
       HEP_MULTI_VAL_GRP_KEY BIGINT NOT NULL,
       OTHER_REASON_FOR_TESTING varchar(2000) NULL,
       ADT_HSPTL_KEY        BIGINT NOT NULL,
       HEPATITIS_OTHER_CONTACT_TYPE varchar(2000) NULL,
       HEPA_OTHER_CONTACT_TYPE varchar(2000) NULL,
       PIERCING_IN2WK6MO_OTHER_LOCAT varchar(2000) NULL,
       TATTOOED_IN2WK6MOOTHERLOCATION varchar(2000) NULL,
       HEP_C_OTHER_CONTACT_TYPE varchar(2000) NULL,
       HEPC_FEMALE_SEX_PARTNER_NBR varchar(50) NULL,
       HEPC_MALE_SEX_PARTNER_NBR varchar(50) NULL,
       HEPC_MED_DEN_BLOOD_CONTACT_FRQ varchar(50) NULL,
       C_LAST6PLUSMON_INCARCERATE_YR numeric NULL,
       CLAST6PLUSMO_INCARCERATEPERIOD numeric NULL,
       C_LAST_INCARCERATE_PERIOD_UNIT varchar(50) NULL,
       C_INCARCERATED_6PLUS_MON_IND varchar(50) NULL,
       HEPC_INCARCERATE_FACILITY_TYPE varchar(50) NULL,
       HEPC_BLOOD_RECEIVED_DT datetime NULL,
       HEPC_PUBSAFETY_BLOODCONTACTFRQ varchar(50) NULL,
       HEPB_FEMALE_SEX_PARTNER_NBR varchar(50) NULL,
       HEPB_MALE_SEX_PARTNER_NBR varchar(50) NULL,
       HEPC_STD_TREATED_IND varchar(50) NULL,
       INVESTIGATION_KEY    BIGINT NOT NULL,
       CONDITION_KEY        BIGINT NOT NULL,
       HEPC_STD_LAST_TREATMENT_YR numeric NULL,
       HEPC_MED_DEN_EMPLOYEE_IND varchar(50) NULL,
       LDF_GROUP_KEY        BIGINT NOT NULL,
       HEP_B_E_ANTIGEN  varchar(50) NULL,
       HEP_B_DNA  varchar(50) NULL,
       GEOCODING_LOCATION_KEY BIGINT,
       PLACE_OF_BIRTH varchar(250) NULL

)
go


ALTER TABLE dbo.HEPATITIS_CASE
       ADD PRIMARY KEY (REPORTER_KEY, INVESTIGATOR_KEY, PHYSICIAN_KEY, 
              PATIENT_KEY, INV_ASSIGNED_DT_KEY, 
              RPT_SRC_ORG_KEY, 
              HEP_MULTI_VAL_GRP_KEY, ADT_HSPTL_KEY, INVESTIGATION_KEY, 
              CONDITION_KEY, LDF_GROUP_KEY)
go


CREATE TABLE dbo.MEASLES_CASE (
       INV_RPT_DT_KEY       BIGINT NOT NULL,
       INV_ASSIGNED_DT_KEY  BIGINT NOT NULL,
       INVESTIGATOR_KEY     BIGINT NOT NULL,
       PATIENT_KEY          BIGINT NOT NULL,
       PHYSICIAN_KEY        BIGINT NOT NULL,
       RPT_SRC_ORG_KEY      BIGINT NOT NULL,
       REPORTER_KEY         BIGINT NOT NULL,
       PATIENT_HAVE_RASH_IND varchar(50) NULL,
       RASH_ONSET_DT        datetime NULL,
       RASH_LAST_DAY_NBR    numeric NULL,
       PATIENT_HAVE_FEVER_IND varchar(50) NULL,
       RASH_GENERALIZED_IND varchar(50) NULL,
       HIGHEST_TEMPERATURE_MEASURED numeric NULL,
       HIGHEST_TEMPERATURE_UNIT varchar(50) NULL,
       COUGH_IND            varchar(50) NULL,
       CROUP_IND            varchar(50) NULL,
       CORYZA_IND           varchar(50) NULL,
       CONJUNCTIVITIS_IND   varchar(50) NULL,
       OTTIS_MEDIA_IND      varchar(50) NULL,
       DIARRHEA_IND         varchar(50) NULL,
       PNEUMONIA_IND        varchar(50) NULL,
       ENCEPHALITIS_IND     varchar(50) NULL,
       THROMBOCYTOPENIA_IND varchar(50) NULL,
       OTHER_COMPLICATION_IND varchar(50) NULL,
       OTHER_COMPLICATIONS  varchar(2000) NULL,
       IGM_SPECIMEN_TAKEN_DT datetime NULL,
       IGM_TEST_RESULT      varchar(50) NULL,
       IGG_ACUTE_SPECIMEN_TAKEN_DT datetime NULL,
       IGG_CONVALESCENT_SPECIMEN_DT datetime NULL,
       IGG_TEST_RESULT      varchar(50) NULL,
       OTHER_LAB_TEST_DONE_IND varchar(50) NULL,
       OTHER_LAB_TEST_DESC  varchar(2000) NULL,
       OTHER_LAB_TEST_DT    datetime NULL,
       OTHER_LAB_TEST_RESULT varchar(2000) NULL,
       SPECIMEN_TO_CDC_GENOTYPING_IND varchar(50) NULL,
       CONTAIN_MEASLES_VACC_RECEIVD varchar(50) NULL,
       NO_MEASLES_VACC_REASON varchar(50) NULL,
       NBR_DOSE_RECEIVED_PRIOR_1BDAY numeric NULL,
       NBR_DOSE_RECEIVED_SINCE_1BDAY numeric NULL,
       TRANSMISSION_SETTING varchar(50) NULL,
       AGE_AND_SETTING_VERIFIED_IND varchar(50) NULL,
       PATIENT_RESIDE_IN_USA_IND varchar(50) NULL,
       EPI_LINKED_TOANOTHER_CASE_IND varchar(50) NULL,
       FEVER_ONSET_DT       datetime NULL,
       GENOTYPING_DT        datetime NULL,
       IGM_TESTING_PERFORMED_IND varchar(50) NULL,
       IGG_TESTING_PERFORMED_IND varchar(50) NULL,
       RASH_OCCUR_IN_18DAYS_ENTER_USA varchar(50) NULL,
       SRC_OF_INFECTION     varchar(2000) NULL,
       MEASLES_SPECIMEN_TYPE varchar(2000) NULL,
       BEFORE_B_DAY_VACCINE_REASON varchar(50) NULL,
       AFTER_B_DAY_VACCINE_REASON varchar(50) NULL,
       ADT_HSPTL_KEY        BIGINT NOT NULL,
       INVESTIGATION_KEY    BIGINT NOT NULL,
       LAB_MEASLES_TEST_DONE_IND varchar(50) NULL,
       CONDITION_KEY        BIGINT NOT NULL,
       LDF_GROUP_KEY        BIGINT NOT NULL,
       HEPATITIS_IND        varchar(50) NULL,
       CASE_TRACEABLE_IND   varchar(50) NULL,
       GENOTYPE_SEQUENCED_MEASLES varchar(50) NULL,
       GENOTYPE_ID_MEASLES varchar(50) NULL,
       GENOTYPE_OTHER_ID_MEASLES varchar(50) NULL,
       GEOCODING_LOCATION_KEY BIGINT
)
go


ALTER TABLE dbo.MEASLES_CASE
       ADD PRIMARY KEY (INV_RPT_DT_KEY, INV_ASSIGNED_DT_KEY, 
              INVESTIGATOR_KEY, PATIENT_KEY, PHYSICIAN_KEY, 
              RPT_SRC_ORG_KEY, REPORTER_KEY, ADT_HSPTL_KEY, 
              INVESTIGATION_KEY, CONDITION_KEY, 
              LDF_GROUP_KEY)
go







CREATE TABLE dbo.GEOCODING_LOCATION(
GEOCODING_LOCATION_KEY BIGINT,
	 add_time datetime ,
	 add_user_id numeric NULL, 
	 census_block_id varchar(20) NULL ,
	 city varchar(50) NULL ,
	 cnty_cd varchar(10) NULL ,
	 country varchar(50) NULL ,
	 data_type varchar(1) NULL ,
	 entity_class_cd varchar(10) NULL, 
	 entity_uid  numeric NULL ,
	 firm_name varchar(50)  NULL ,
	 geocoding_result_uid numeric NULL,
	 house_number varchar(20)  NULL ,
	 last_chg_time datetime ,
	 last_chg_user_id numeric NULL ,
	 latitude numeric NULL ,
	 location_quality_cd varchar(10) NULL ,
	 longitude numeric NULL ,
	 match_cd varchar(10) NULL ,
	 next_score_count numeric(5,2) NULL ,
	 next_score_diff numeric(5, 2) NULL ,
	 num_matches numeric(2) NULL ,
	 postal_locator_uid numeric NULL,
	 postfix_direction varchar(10) NULL ,
	 prefix_direction varchar(10) NULL ,
	 result_type varchar(1) NULL ,
	 score numeric (11, 2) NULL ,
	 segment_id varchar(20)  NULL ,
	 state varchar(2) NULL ,
	 street_addr1 varchar(100) NULL ,
	 street_addr2 varchar(100)  NULL ,
	 street_name varchar(50) NULL ,
	 street_type varchar(10) NULL ,
	 unit_number varchar(20) NULL ,
	 unit_type varchar(10) NULL ,
	 zip4_cd varchar(10) NULL ,
	 zip5_cd varchar(10) NULL ,
	 zip_cd varchar(10) NULL 
)
go

CREATE TABLE dbo.RUBELLA_CASE (
       INVESTIGATOR_KEY     BIGINT NOT NULL,
       PATIENT_KEY          BIGINT NOT NULL,
       PHYSICIAN_KEY        BIGINT NOT NULL,
       REPORTER_KEY         BIGINT NOT NULL,
       INV_ASSIGNED_DT_KEY  BIGINT NOT NULL,
       LENGTH_OF_TIME_IN_US numeric NULL,
       MACULOPAPULAR_RASH_IND varchar(50) NULL,
       PATIENT_RASH_ONSET_DT datetime NULL,
       RASH_DURATION_DAYS   numeric NULL,
       PATIENT_FEVER_IND    varchar(50) NULL,
       HIGHEST_MEASURED_TEMPERATURE numeric NULL,
       HIGHEST_TEMPERATUR_UNIT varchar(50) NULL,
       ARTHRALGIA_ARTHRITIS_SYMPTOM varchar(50) NULL,
       LYMPHADENOPATHY_IND  varchar(50) NULL,
       CONJUNCTIVITIS_IND   varchar(50) NULL,
       ENCEPHALITIS_IND     varchar(50) NULL,
       THROMBOCYTOPENIA_IND varchar(50) NULL,
       OTHER_COMPLICATIONS_IND varchar(50) NULL,
       OTHER_COMPLICATIONS_DESC varchar(2000) NULL,
       CAUSE_OF_DEATH       varchar(2000) NULL,
       HSPTL_ADMISSION_DT   datetime NULL,
       HSPTL_DISCHARGE_DT   datetime NULL,
       RUBELLA_LAB_TEST_DONE_IND varchar(50) NULL,
       RUBELLA_IGM_EIA_TEST_IND varchar(50) NULL,
       RUBELLA_IGM_EIA_TEST_DT datetime NULL,
       RUBELLA_IGM_EIA_TEST_RESULT varchar(50) NULL,
       RUBELLA_IGM_EIA_CAPTURE_IND varchar(50) NULL,
       RUBELLA_IGM_EIA_CAPTURE_DT datetime NULL,
       RUBELLA_IGM_EIA_CAPTURE_RESULT varchar(50) NULL,
       OTHER_RUBELLA_IGM_IND varchar(50) NULL,
       OTHER_RUBELLA_IGM_DESC varchar(2000) NULL,
       OTHER_RUBELLA_IGM_DT datetime NULL,
       OTHER_RUBELLA_IGM_RESULT varchar(50) NULL,
       RUBELLA_IGG_EIA_ACUTE_IND varchar(50) NULL,
       RUBELLA_IGG_EIA_ACUTE_DT datetime NULL,
       RUBELLA_IGG_EIA_CNVLSNT_IND varchar(50) NULL,
       RUBELLA_IGG_EIA_CNVLSNT_DT datetime NULL,
       IGG_EIA_ACUTE_CNVLSNT_DIFF varchar(50) NULL,
       HEMAG_INHIBIT_ACUTE_IND varchar(50) NULL,
       HEMAG_INHIBIT_ACUTE_DT datetime NULL,
       HEMAG_INHIBIT_CNVLSNT_IND varchar(50) NULL,
       HEMAG_INHIBIT_CNVLSNT_DT datetime NULL,
       HEMAGINHIBIT_ACUTECNVLSNT_DIFF varchar(50) NULL,
       CMPLMNT_FIXATION_ACUTE_IND varchar(50) NULL,
       CMPLMNT_FIXATION_ACUTE_DT datetime NULL,
       CMPLMNT_FIXATION_CNVLSNT_IND varchar(50) NULL,
       CMPLMNT_FIXATION_CNVLSNT_DT datetime NULL,
       CMPLMNT_FIX_ACUTE_CNVLSNT_DIFF varchar(50) NULL,
       RUBELLA_IGG_OTHER_TEST1_IND varchar(50) NULL,
       RUBELLA_IGG_OTHER_TEST1_DESC varchar(2000) NULL,
       RUBELLA_IGG_OTHER_TEST1_DT datetime NULL,
       RUBELLA_IGG_OTHER_TEST1_RESULT varchar(50) NULL,
       RUBELLA_IGG_OTHER_TEST2_IND varchar(50) NULL,
       RUBELLA_IGG_OTHER_TEST2_DESC varchar(2000) NULL,
       RUBELLA_IGG_OTHER_TEST2_DT datetime NULL,
       RUBELLA_IGG_OTHER_TEST2_RESULT varchar(50) NULL,
       RUBELLA_IGG_OTHER_TEST3_IND varchar(50) NULL,
       RUBELLA_IGG_OTHER_TEST3_DESC varchar(2000) NULL,
       RUBELLA_IGG_OTHER_TEST_3_DT datetime NULL,
       RUBELLA_IGG_OTHER_TEST3_RESULT varchar(50) NULL,
       VIRUS_ISOLATION_PERFORMED_IND varchar(50) NULL,
       VIRUS_ISOLATION_PERFORMED_DT datetime NULL,
       VIRUS_ISOLATION_PERFORMED_SRC varchar(50) NULL,
       VIRUS_ISOLATION_OTHER_SRC varchar(2000) NULL,
       RT_PCR_PERFORMED_IND varchar(50) NULL,
       RT_PCR_DT            datetime NULL,
       RT_PCR_SRC           varchar(50) NULL,
       RT_PCR_RESULT        varchar(50) NULL,
       RT_PCR_OTHER_SRC     varchar(2000) NULL,
       LATEX_AGGLUTINATION_TESTED_IND varchar(50) NULL,
       LATEX_AGGLUTINATION_TESTED_DT datetime NULL,
       LATEX_AGGLUTINATION_TESTRESULT varchar(50) NULL,
       IMMUNOFLUORESCENT_ASSAY_IND varchar(50) NULL,
       IMMUNOFLUORESCENT_ASSAY_DT datetime NULL,
       IMMUNOFLUORESCENT_ASSAY_SRC varchar(50) NULL,
       IMMUNOFLUORESCENT_ASSAY_RESULT varchar(50) NULL,
       IMUNOFLRESNT_ASSAY_OTHER_SRC varchar(2000) NULL,
       OTHER_RUBELLA_TEST_DONE_IND varchar(50) NULL,
       OTHER_RUBELLA_TEST_DESC varchar(2000) NULL,
       OTHER_RUBELLA_TEST_DT datetime NULL,
       OTHER_RUBELLA_TEST_RESULT varchar(2000) NULL,
       SPECIMEN_TO_CDC_GENOTYPING_IND varchar(50) NULL,
       SPECIMENTO_CDC_GENOTYPING_TYPE varchar(20) NULL,
       GENOTYPING_SPECIMEN_OTHER_TYPE varchar(2000) NULL,
       RUBELLA_VACCINE_RECEIVED_IND varchar(50) NULL,
       RUBELLA_VACCINED_NEVER_REASON varchar(50) NULL,
       ON_AFTER_1ST_DOB_DOSES_NBR numeric NULL,
       TRANSMISSION_SETTING varchar(20) NULL,
       EPI_LINKED_TO_ANOTHER_CASE_IND varchar(50) NULL,
       PREGNANCY_IND        varchar(50) NULL,
       PREGNANCY_DELIVERY_EXPECTED_DT datetime NULL,
       EXPECTED_DELIVERY_PLACE varchar(2000) NULL,
       GESTATION_WK_NBR_AT_RUBELLA numeric NULL,
       GESTATION_TRIMESTER_ST_RUBELLA varchar(50) NULL,
       PREVIOUS_RUBELLA_IMMUNITY_DOC varchar(50) NULL,
       PREVIOUSIMMUNITY_TESTINGRESULT varchar(50) NULL,
       PREVIOUS_IMMUNITY_TESTING_YR numeric NULL,
       WOMAN_AGE_AT_IMMUNITY_TESTING numeric NULL,
       RUBELLA_PRIOR_TO_PREGNANCY_IND varchar(50) NULL,
       SEROLOGICALLYCONFIRMED_RUBELLA varchar(50) NULL,
       PREVIOUS_DISS_YR     numeric NULL,
       PREVIOUS_DISS_AGE    numeric NULL,
       PREGNANCY_CURRENT_OUTCOME varchar(50) NULL,
       LIVE_BIRTH_OUTCOME   varchar(50) NULL,
       NON_LIVING_BIRTH_OUTCOME varchar(50) NULL,
       PREGNANCY_CESSATION_FETUS_WK numeric NULL,
       NON_LIVING_BIRTH_AUTOPSY_STUDY varchar(50) NULL,
       AUTOPSY_PATHOLOGY_STUDY_RESULT varchar(2000) NULL,
       RUBELLA_GENOTYPING_DT datetime NULL,
       EIA_ACUTE_TEST_RESULT_VALUE varchar(2000) NULL,
       EIA_CNVLSNT_TEST_RESULT_VALUE varchar(2000) NULL,
       HEMAG_INHIBIT_ACUTE_VALUE varchar(2000) NULL,
       HEMAG_INHIBIT_CNVLSNT_VALUE varchar(2000) NULL,
       CMPLMNT_FIXATION_ACUTE_VALUE varchar(2000) NULL,
       CMPLMNT_FIXATION_CNVLSNT_VALUE varchar(2000) NULL,
       ARTHRALGIA_ARTHRITIS_COMPLICAT varchar(50) NULL,
       IGM_EIA_1ST_TEST_RESULT_VALUE varchar(2000) NULL,
       IGM_EIA_2ND_TEST_RESULT_VALUE varchar(2000) NULL,
       OTHER_IGM_TEST_RESULT_VALUE varchar(2000) NULL,
       IGG_OTHER_TEST_1_RESULT_VALUE varchar(2000) NULL,
       IGG_OTHER_TEST_2_RESULT_VALUE varchar(2000) NULL,
       RT_PCR_TEST_RESULT_VALUE varchar(2000) NULL,
       LATEX_AGG_TEST_RESULT_VALUE varchar(2000) NULL,
       ASSAY_TEST_RESULT_VALUE varchar(2000) NULL,
       OTHER_RUBELLA_TESTRESULT_VALUE varchar(2000) NULL,
       INFECTION_SRC        varchar(2000) NULL,
       RASH_ONSET_ENTERING_USA varchar(50) NULL,
       IGM_EIA_1ST_METHOD_USED varchar(50) NULL,
       IGM_EIA_2ND_METHOD_USED varchar(50) NULL,
       IGG_OTHER_TEST_3_RESULT_VALUE varchar(2000) NULL,
       ADT_HSPTL_KEY        BIGINT NOT NULL,
       RPT_SRC_ORG_KEY      BIGINT NOT NULL,
       INVESTIGATION_KEY    BIGINT NOT NULL,
       CONDITION_KEY        BIGINT NOT NULL,
       VIRUS_ISOLATION_RESULT varchar(50) NULL,
       LDF_GROUP_KEY        BIGINT NOT NULL,
       BIRTH_COUNTRY        varchar(50) NULL,
       RUBELLA_CASE_TRACEABLE_IND varchar(50) NULL,	
       GENOTYPE_SEQUENCED_RUBELLA varchar(50) NULL,
       GENOTYPE_ID_RUBELLA varchar(50) NULL,
       GENOTYPE_OTHER_ID_RUBELLA varchar(50) NULL,
       GEOCODING_LOCATION_KEY BIGINT
)
go


ALTER TABLE dbo.RUBELLA_CASE
       ADD PRIMARY KEY (INVESTIGATOR_KEY, PATIENT_KEY, PHYSICIAN_KEY, 
              REPORTER_KEY, INV_ASSIGNED_DT_KEY, 
              ADT_HSPTL_KEY, RPT_SRC_ORG_KEY, INVESTIGATION_KEY, 
              CONDITION_KEY, LDF_GROUP_KEY)
go



ALTER TABLE dbo.ANTIMICROBIAL
       ADD FOREIGN KEY (ANTIMICROBIAL_GRP_KEY)
                             REFERENCES ANTIMICROBIAL_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (REPORTER_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (PATIENT_KEY)
                             REFERENCES D_PATIENT
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (DAYCARE_FACILITY_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (NURSING_HOME_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (BMIRD_MULTI_VAL_GRP_KEY)
                             REFERENCES BMIRD_MULTI_VALUE_FIELD_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION
                             ON DELETE NO ACTION
go



ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_CASE
       ADD FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.BMIRD_MULTI_VALUE_FIELD
       ADD FOREIGN KEY (BMIRD_MULTI_VAL_GRP_KEY)
                             REFERENCES BMIRD_MULTI_VALUE_FIELD_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CASE_COUNT
       ADD FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CASE_COUNT
       ADD FOREIGN KEY (REPORTER_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CASE_COUNT
       ADD FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CASE_COUNT
       ADD FOREIGN KEY (PATIENT_KEY)
                             REFERENCES D_PATIENT
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CASE_COUNT
       ADD FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CASE_COUNT
       ADD FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CASE_COUNT
       ADD FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE
                             ON DELETE NO ACTION
go

ALTER TABLE dbo.CASE_COUNT
       ADD FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CODE_VAL_GENERAL
       ADD FOREIGN KEY (CD)
                             REFERENCES CODESET
                             ON DELETE NO ACTION
go



ALTER TABLE dbo.CRS_CASE
       ADD FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CRS_CASE
       ADD FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CRS_CASE
       ADD FOREIGN KEY (PATIENT_KEY)
                             REFERENCES D_PATIENT
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CRS_CASE
       ADD FOREIGN KEY (REPORTER_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CRS_CASE
       ADD FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CRS_CASE
       ADD FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CRS_CASE
       ADD FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CRS_CASE
       ADD FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CRS_CASE
       ADD FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.CRS_CASE
       ADD FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.GENERIC_CASE
       ADD FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.GENERIC_CASE
       ADD FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.GENERIC_CASE
       ADD FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.GENERIC_CASE
       ADD FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.GENERIC_CASE
       ADD FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go



ALTER TABLE dbo.GENERIC_CASE
       ADD FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.GENERIC_CASE
       ADD FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.GENERIC_CASE
       ADD FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.GENERIC_CASE
       ADD FOREIGN KEY (REPORTER_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.GENERIC_CASE
       ADD FOREIGN KEY (PATIENT_KEY)
                             REFERENCES D_PATIENT
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.HEP_MULTI_VALUE_FIELD
       ADD FOREIGN KEY (HEP_MULTI_VAL_GRP_KEY)
                             REFERENCES HEP_MULTI_VALUE_FIELD_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.HEPATITIS_CASE
       ADD FOREIGN KEY (PATIENT_KEY)
                             REFERENCES D_PATIENT
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.HEPATITIS_CASE
       ADD FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.HEPATITIS_CASE
       ADD FOREIGN KEY (REPORTER_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.HEPATITIS_CASE
       ADD FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.HEPATITIS_CASE
       ADD FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go




ALTER TABLE dbo.HEPATITIS_CASE
       ADD FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.HEPATITIS_CASE
       ADD FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE
                             ON DELETE NO ACTION
go



ALTER TABLE dbo.HEPATITIS_CASE
       ADD FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.HEPATITIS_CASE
       ADD FOREIGN KEY (HEP_MULTI_VAL_GRP_KEY)
                             REFERENCES HEP_MULTI_VALUE_FIELD_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.HEPATITIS_CASE
       ADD FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.HEPATITIS_CASE
       ADD FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.MEASLES_CASE
       ADD FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.MEASLES_CASE
       ADD FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.MEASLES_CASE
       ADD FOREIGN KEY (PATIENT_KEY)
                             REFERENCES D_PATIENT
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.MEASLES_CASE
       ADD FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.MEASLES_CASE
       ADD FOREIGN KEY (REPORTER_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.MEASLES_CASE
       ADD FOREIGN KEY (INV_RPT_DT_KEY)
                             REFERENCES RDB_DATE
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.MEASLES_CASE
       ADD FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.MEASLES_CASE
       ADD FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.MEASLES_CASE
       ADD FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.MEASLES_CASE
       ADD FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.MEASLES_CASE
       ADD FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.ORGANIZATION_LDF_GROUP
       ADD FOREIGN KEY (ORGANIZATION_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.ORGANIZATION_LDF_GROUP
       ADD FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP
                             ON DELETE NO ACTION
go



ALTER TABLE dbo.PERTUSSIS_CASE
       ADD FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_CASE
       ADD FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_CASE
       ADD FOREIGN KEY (REPORTER_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_CASE
       ADD FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_CASE
       ADD FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_CASE
       ADD FOREIGN KEY (PATIENT_KEY)
                             REFERENCES D_PATIENT
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_CASE
       ADD FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_CASE
       ADD FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_CASE
       ADD FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_CASE
       ADD FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_CASE
       ADD FOREIGN KEY (PERTUSSIS_SUSPECT_SRC_GRP_KEY)
                             REFERENCES PERTUSSIS_SUSPECTED_SOURCE_GRP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_CASE
       ADD FOREIGN KEY (PERTUSSIS_TREATMENT_GRP_KEY)
                             REFERENCES PERTUSSIS_TREATMENT_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_SUSPECTED_SOURCE_FLD
       ADD FOREIGN KEY (PERTUSSIS_SUSPECT_SRC_GRP_KEY)
                             REFERENCES PERTUSSIS_SUSPECTED_SOURCE_GRP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.PERTUSSIS_TREATMENT_FIELD
       ADD FOREIGN KEY (PERTUSSIS_TREATMENT_GRP_KEY)
                             REFERENCES PERTUSSIS_TREATMENT_GROUP
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.RUBELLA_CASE
       ADD FOREIGN KEY (REPORTER_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.RUBELLA_CASE
       ADD FOREIGN KEY (PHYSICIAN_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.RUBELLA_CASE
       ADD FOREIGN KEY (INVESTIGATOR_KEY)
                             REFERENCES D_PROVIDER
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.RUBELLA_CASE
       ADD FOREIGN KEY (PATIENT_KEY)
                             REFERENCES D_PATIENT
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.RUBELLA_CASE
       ADD FOREIGN KEY (INV_ASSIGNED_DT_KEY)
                             REFERENCES RDB_DATE
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.RUBELLA_CASE
       ADD FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.RUBELLA_CASE
       ADD FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.RUBELLA_CASE
       ADD FOREIGN KEY (RPT_SRC_ORG_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.RUBELLA_CASE
       ADD FOREIGN KEY (ADT_HSPTL_KEY)
                             REFERENCES D_ORGANIZATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.RUBELLA_CASE
       ADD FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP
                             ON DELETE NO ACTION
go





ALTER TABLE dbo.HEPATITIS_CASE add  INV_PATIENT_CHART_NBR   VARCHAR(2000)
Go

IF OBJECT_ID ('USER_PROFILE') IS NOT NULL 
	DROP TABLE USER_PROFILE;
CREATE TABLE dbo.USER_PROFILE
(
NEDSS_ENTRY_ID  BIGINT    NOT NULL,
  FIRST_NM        VARCHAR(50),
  LAST_UPD_TIME   DATETIME,
  LAST_NM         VARCHAR(50),
  USER_NM VARCHAR(100),
  PROVIDER_UID   BIGINT,
  PROVIDER_QUICK_CODE VARCHAR(50),
  PROVIDER_KEY BIGINT NOT NULL
CONSTRAINT pk_user_profile PRIMARY KEY CLUSTERED (nedss_entry_id)
) on [PRIMARY]

CREATE TABLE dbo.EVENT_METRIC
(
  EVENT_TYPE                VARCHAR(50), 
  EVENT_UID                 BIGINT,   
  LOCAL_ID                  VARCHAR(50),
  LOCAL_PATIENT_ID          VARCHAR(50),
  CONDITION_CD		        VARCHAR(50), 
  CONDITION_DESC_TXT        VARCHAR(300), 
  PROG_AREA_CD              VARCHAR(20),
  PROG_AREA_DESC_TXT        VARCHAR(50), 
  PROGRAM_JURISDICTION_OID  BIGINT, 
  JURISDICTION_CD           VARCHAR(20),
  JURISDICTION_DESC_TXT     VARCHAR(255), 
  RECORD_STATUS_CD          VARCHAR(20),
  RECORD_STATUS_DESC_TXT    VARCHAR(300), 
  RECORD_STATUS_TIME        DATETIME,
  ELECTRONIC_IND	        CHAR(1),  
  STATUS_CD                 VARCHAR(20), 
  STATUS_DESC_TXT           VARCHAR(300), 
  STATUS_TIME               DATETIME, 
  ADD_TIME                  DATETIME,
  ADD_USER_ID               BIGINT,
  LAST_CHG_TIME             DATETIME,
  LAST_CHG_USER_ID          BIGINT,
  CASE_CLASS_CD			VARCHAR(20),
  CASE_CLASS_DESC_TXT		VARCHAR(300),
  INVESTIGATION_STATUS_CD	VARCHAR(20),
  INVESTIGATION_STATUS_DESC_TXT	VARCHAR(300),
  ADD_USER_NAME			VARCHAR(300),
  LAST_CHG_USER_NAME		VARCHAR(300)
  CONSTRAINT [PK_EVENT_METRIC] PRIMARY KEY  CLUSTERED
        (
                [EVENT_TYPE], [EVENT_UID]
        )  ON [PRIMARY]
)

GO
 
IF OBJECT_ID ('EVENT_METRIC_INC') IS  NULL 
CREATE TABLE dbo.EVENT_METRIC_INC
(
  EVENT_TYPE                VARCHAR(50), 
  EVENT_UID                 BIGINT,   
  LOCAL_ID                  VARCHAR(50),
  LOCAL_PATIENT_ID          VARCHAR(50),
  CONDITION_CD		        VARCHAR(50), 
  CONDITION_DESC_TXT        VARCHAR(300), 
  PROG_AREA_CD              VARCHAR(20),
  PROG_AREA_DESC_TXT        VARCHAR(50), 
  PROGRAM_JURISDICTION_OID  BIGINT, 
  JURISDICTION_CD           VARCHAR(20),
  JURISDICTION_DESC_TXT     VARCHAR(255), 
  RECORD_STATUS_CD          VARCHAR(20),
  RECORD_STATUS_DESC_TXT    VARCHAR(300), 
  RECORD_STATUS_TIME        DATETIME,
  ELECTRONIC_IND	        CHAR(1),  
  STATUS_CD                 VARCHAR(20), 
  STATUS_DESC_TXT           VARCHAR(300), 
  STATUS_TIME               DATETIME, 
  ADD_TIME                  DATETIME,
  ADD_USER_ID               BIGINT,
  LAST_CHG_TIME             DATETIME,
  LAST_CHG_USER_ID          BIGINT,
  CASE_CLASS_CD			VARCHAR(20),
  CASE_CLASS_DESC_TXT		VARCHAR(300),
  INVESTIGATION_STATUS_CD	VARCHAR(20),
  INVESTIGATION_STATUS_DESC_TXT	VARCHAR(300),
  ADD_USER_NAME			VARCHAR(300),
  LAST_CHG_USER_NAME		VARCHAR(300)
  CONSTRAINT [PK_EVENT_METRIC_INC] PRIMARY KEY  CLUSTERED
        (
                [EVENT_TYPE], [EVENT_UID]
        )  ON [PRIMARY]
)

GO


CREATE TABLE DBO.S_TB_PAM (
	TB_PAM_UID 				BIGINT NOT NULL,
	CALC_DISEASE_SITE 			VARCHAR(100)  NULL,
	LINK_STATE_CASE_NUM_1			VARCHAR(100)  NULL,
	LINK_REASON_1				VARCHAR(100)  NULL,
	LINK_STATE_CASE_NUM_2			VARCHAR(100)  NULL,
	LINK_REASON_2				VARCHAR(100)  NULL,
	COUNT_STATUS				VARCHAR(100)  NULL,
	COUNTRY_OF_VERIFIED_CASE		VARCHAR(100)  NULL,
	COUNT_DATE				DATETIME  NULL,
	PREVIOUS_DIAGNOSIS_IND			VARCHAR(100)  NULL,
	PREVIOUS_DIAGNOSIS_YEAR			NUMERIC  NULL,
	PATIENT_OUTSIDE_US_GT_2_MONTHS		VARCHAR(100)  NULL,
	PRIMARY_GUARD_1_BIRTH_COUNTRY		VARCHAR(100)  NULL,
	PRIMARY_GUARD_2_BIRTH_COUNTRY		VARCHAR(100)  NULL,
	STATUS_AT_DIAGNOSIS			VARCHAR(100)  NULL,
	DISEASE_SITE				VARCHAR(100)  NULL,
	SPUTUM_SMEAR_RESULT			VARCHAR(100)  NULL,
	SPUTUM_SMEAR_COLLECT_DATE		DATETIME  NULL,
	SPUTUM_CULTURE_RESULT			VARCHAR(100)  NULL,
	SPUTUM_CULT_COLLECT_DATE		DATETIME  NULL,
	SPUTUM_CULT_RESULT_RPT_DATE		DATETIME  NULL,
	SPUTUM_CULT_RPT_LAB_TY			VARCHAR(100)  NULL,
	SMR_PATH_CYTO_RESULT			VARCHAR(100)  NULL,
	SMR_PATH_CYTO_COLLECT_DATE		DATETIME  NULL,
	SMR_PATH_CYTO_SITE			VARCHAR(100)  NULL,
	CULT_TISSUE_RESULT			VARCHAR(100)  NULL,
	CULT_TISSUE_COLLECT_DATE		DATETIME  NULL,
	CULT_TISSUE_SITE			VARCHAR(100)  NULL,
	CULT_TISSUE_RESULT_RPT_DATE		DATETIME  NULL,
	CULT_TISSUE_RESULT_RPT_LAB_TY		VARCHAR(100)  NULL,
	NAA_RESULT				VARCHAR(100)  NULL,
	NAA_COLLECT_DATE			DATETIME  NULL,
	NAA_SPEC_IS_SPUTUM_IND			VARCHAR(100)  NULL,
	NAA_SPEC_NOT_SPUTUM			VARCHAR(100)  NULL,
	NAA_RESULT_RPT_DATE			DATETIME  NULL,
	NAA_RPT_LAB_TY				VARCHAR(100)  NULL,
	CHEST_XRAY_RESULT			VARCHAR(100)  NULL,
	CHEST_XRAY_CAVITY_EVIDENCE		VARCHAR(100)  NULL,
	CHEST_XRAY_MILIARY_EVIDENCE		VARCHAR(100)  NULL,
	CT_SCAN_RESULT				VARCHAR(100)  NULL,
	CT_SCAN_CAVITY_EVIDENCE			VARCHAR(100)  NULL,
	CT_SCAN_MILIARY_EVIDENCE		VARCHAR(100)  NULL,
	TST_RESULT				VARCHAR(100)  NULL,
	TST_PLACED_DATE				DATETIME  NULL,
	TST_MM_INDURATION			NUMERIC  NULL,
	IGRA_RESULT				VARCHAR(100)  NULL,
	IGRA_COLLECT_DATE			DATETIME  NULL,
	IGRA_TEST_TY				VARCHAR(100)  NULL,
	PRIMARY_REASON_EVALUATED		VARCHAR(100)  NULL,
	HIV_STATUS				VARCHAR(100)  NULL,
	HIV_STATE_PATIENT_NUM			VARCHAR(100)  NULL,
	HIV_CITY_CNTY_PATIENT_NUM		VARCHAR(100)  NULL,
	HOMELESS_IND				VARCHAR(100)  NULL,
	CORRECTIONAL_FACIL_RESIDENT		VARCHAR(100)  NULL,
	CORRECTIONAL_FACIL_TY			VARCHAR(100)  NULL,
	CORRECTIONAL_FACIL_CUSTODY_IND		VARCHAR(100)  NULL,
	LONGTERM_CARE_FACIL_RESIDENT		VARCHAR(100)  NULL,
	LONGTERM_CARE_FACIL_TY			VARCHAR(100)  NULL,
	OCCUPATION_RISK				VARCHAR(100)  NULL,
	INJECT_DRUG_USE_PAST_YEAR		VARCHAR(100)  NULL,
	NONINJECT_DRUG_USE_PAST_YEAR		VARCHAR(100)  NULL,
	EXCESS_ALCOHOL_USE_PAST_YEAR		VARCHAR(100)  NULL,
	OTHER_TB_RISK_FACTORS			VARCHAR(100)  NULL,
	IMMIGRATION_STATUS_AT_US_ENTRY		VARCHAR(100)  NULL,
	INIT_REGIMEN_START_DATE			DATETIME  NULL,
	INIT_REGIMEN_ISONIAZID			VARCHAR(100)  NULL,
	INIT_REGIMEN_RIFAMPIN			VARCHAR(100)  NULL,
	INIT_REGIMEN_PYRAZINAMIDE		VARCHAR(100)  NULL,
	INIT_REGIMEN_ETHAMBUTOL			VARCHAR(100)  NULL,
	INIT_REGIMEN_STREPTOMYCIN		VARCHAR(100)  NULL,
	INIT_REGIMEN_ETHIONAMIDE		VARCHAR(100)  NULL,
	INIT_REGIMEN_KANAMYCIN			VARCHAR(100)  NULL,
	INIT_REGIMEN_CYCLOSERINE		VARCHAR(100)  NULL,
	INIT_REGIMEN_CAPREOMYCIN		VARCHAR(100)  NULL,
	INIT_REGIMEN_PA_SALICYLIC_ACID		VARCHAR(100)  NULL,
	INIT_REGIMEN_AMIKACIN			VARCHAR(100)  NULL,
	INIT_REGIMEN_RIFABUTIN			VARCHAR(100)  NULL,
	INIT_REGIMEN_CIPROFLOXACIN		VARCHAR(100)  NULL,
	INIT_REGIMEN_OFLOXACIN			VARCHAR(100)  NULL,
	INIT_REGIMEN_RIFAPENTINE		VARCHAR(100)  NULL,
	INIT_REGIMEN_LEVOFLOXACIN		VARCHAR(100)  NULL,
	INIT_REGIMEN_MOXIFLOXACIN		VARCHAR(100)  NULL,
	INIT_REGIMEN_OTHER_1_IND		VARCHAR(100)  NULL,
	INIT_REGIMEN_OTHER_1			VARCHAR(100)  NULL,
	INIT_REGIMEN_OTHER_2_IND		VARCHAR(100)  NULL,
	INIT_REGIMEN_OTHER_2			VARCHAR(100)  NULL,
	ISOLATE_SUBMITTED_IND			VARCHAR(100)  NULL,
	ISOLATE_ACCESSION_NUM			VARCHAR(100)  NULL,
	INIT_SUSCEPT_TESTING_DONE		VARCHAR(100)  NULL,
	FIRST_ISOLATE_COLLECT_DATE		DATETIME  NULL,
	FIRST_ISOLATE_IS_SPUTUM_IND		VARCHAR(100)  NULL,
	FIRST_ISOLATE_NOT_SPUTUM		VARCHAR(100)  NULL,
	INIT_SUSCEPT_ISONIAZID			VARCHAR(100)  NULL,
	INIT_SUSCEPT_RIFAMPIN			VARCHAR(100)  NULL,
	INIT_SUSCEPT_PYRAZINAMIDE		VARCHAR(100)  NULL,
	INIT_SUSCEPT_ETHAMBUTOL			VARCHAR(100)  NULL,
	INIT_SUSCEPT_STREPTOMYCIN		VARCHAR(100)  NULL,
	INIT_SUSCEPT_ETHIONAMIDE		VARCHAR(100)  NULL,
	INIT_SUSCEPT_KANAMYCIN			VARCHAR(100)  NULL,
	INIT_SUSCEPT_CYCLOSERINE		VARCHAR(100)  NULL,
	INIT_SUSCEPT_CAPREOMYCIN		VARCHAR(100)  NULL,
	INIT_SUSCEPT_PA_SALICYLIC_ACID		VARCHAR(100)  NULL,
	INIT_SUSCEPT_AMIKACIN			VARCHAR(100)  NULL,
	INIT_SUSCEPT_RIFABUTIN			VARCHAR(100)  NULL,
	INIT_SUSCEPT_CIPROFLOXACIN		VARCHAR(100)  NULL,
	INIT_SUSCEPT_OFLOXACIN			VARCHAR(100)  NULL,
	INIT_SUSCEPT_RIFAPENTINE		VARCHAR(100)  NULL,
	INIT_SUSCEPT_LEVOFLOXACIN		VARCHAR(100)  NULL,
	INIT_SUSCEPT_MOXIFLOXACIN		VARCHAR(100)  NULL,
	INIT_SUSCEPT_OTHER_QUNINOLONES		VARCHAR(100)  NULL,
	INIT_SUSCEPT_OTHER_1_IND		VARCHAR(100)  NULL,
	INIT_SUSCEPT_OTHER_1			VARCHAR(100)  NULL,
	INIT_SUSCEPT_OTHER_2_IND		VARCHAR(100)  NULL,
	INIT_SUSCEPT_OTHER_2			VARCHAR(100)  NULL,
	SPUTUM_CULTURE_CONV_DOCUMENTED		VARCHAR(100)  NULL,
	TB_SPUTUM_CULTURE_NEGATIVE_DAT		DATETIME  NULL,
	NO_CONV_DOC_REASON			VARCHAR(100)  NULL,
	NO_CONV_DOC_OTHER_REASON		VARCHAR(100)  NULL,
	MOVED_IND				VARCHAR(100)  NULL,
	TRANSNATIONAL_REFERRAL_IND		VARCHAR(100)  NULL,
	MOVE_CITY				VARCHAR(100)  NULL,
	THERAPY_STOP_DATE			DATETIME  NULL,
	THERAPY_STOP_REASON			VARCHAR(100)  NULL,
	THERAPY_STOP_CAUSE_OF_DEATH		VARCHAR(100)  NULL,
	THERAPY_EXTEND_GT_12_OTHER		VARCHAR(100)  NULL,
	DOT					VARCHAR(100)  NULL,
	DOT_NUMBER_WEEKS			NUMERIC  NULL,
	FINAL_SUSCEPT_TESTING			VARCHAR(100)  NULL,
	FINAL_ISOLATE_COLLECT_DATE		DATETIME  NULL,
	FINAL_ISOLATE_IS_SPUTUM_IND		VARCHAR(100)  NULL,
	FINAL_ISOLATE_NOT_SPUTUM		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_ISONIAZID			VARCHAR(100)  NULL,
	FINAL_SUSCEPT_RIFAMPIN			VARCHAR(100)  NULL,
	FINAL_SUSCEPT_PYRAZINAMIDE		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_ETHAMBUTOL		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_STREPTOMYCIN		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_ETHIONAMIDE		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_KANAMYCIN			VARCHAR(100)  NULL,
	FINAL_SUSCEPT_CYCLOSERINE		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_CAPREOMYCIN		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_PA_SALICYLIC_ACI		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_AMIKACIN			VARCHAR(100)  NULL,
	FINAL_SUSCEPT_RIFABUTIN			VARCHAR(100)  NULL,
	FINAL_SUSCEPT_CIPROFLOXACIN		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_OFLOXACIN			VARCHAR(100)  NULL,
	FINAL_SUSCEPT_RIFAPENTINE		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_LEVOFLOXACIN		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_MOXIFLOXACIN		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_OTHER_QUINOLONES		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_OTHER_IND			VARCHAR(100)  NULL,
	FINAL_SUSCEPT_OTHER			VARCHAR(100)  NULL,
	FINAL_SUSCEPT_OTHER_2_IND		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_OTHER_2			VARCHAR(100)  NULL,
	CASE_VERIFICATION			VARCHAR(100)  NULL,
	COMMENTS_FOLLOW_UP_1			VARCHAR(100)  NULL,
	COMMENTS_FOLLOW_UP_2			VARCHAR(100)  NULL,
	MOVE_CITY_2				VARCHAR(100)  NULL,
	DATE_ARRIVED_IN_US			DATETIME  NULL,
	DATE_SUBMITTED				DATETIME  NULL,
	PATIENT_BIRTH_COUNTRY			VARCHAR(100)  NULL,
	US_BORN_IND				VARCHAR(100)  NULL,
	TB_VERCRIT_CALC_IND			VARCHAR(100)  NULL,
	PROVIDER_OVERRIDE_COMMENTS		VARCHAR(100)  NULL,
	INIT_DRUG_REG_CALC 			VARCHAR(200) NULL,
	LAST_CHG_TIME 				DATETIME NULL 
) ON [PRIMARY]
GO
CREATE TABLE [DBO].[S_TB_HIV] (
	[TB_PAM_UID] 			BIGINT NOT NULL ,
	LAST_CHG_TIME 			DATETIME NULL ,
	[HIV_STATE_PATIENT_NUM] 	[VARCHAR] (50)  NULL ,
	[HIV_STATUS] 			[VARCHAR] (50)  NULL ,
	[HIV_CITY_CNTY_PATIENT_NUM] 	[VARCHAR] (50)  NULL ,
) ON [PRIMARY]
GO


CREATE TABLE DBO.S_TB_PAM_ACT_ENTITY (
	TB_PAM_ACT_ENTITY_UID 	BIGINT NOT NULL ,
	ENTITY_UID 		BIGINT NOT NULL ,
	TB_PAM_UID 		BIGINT NOT NULL ,
	TYPE_CD 		VARCHAR (50) NULL ,
	ADD_TIME 		DATETIME NULL ,
	ADD_USER_ID 		BIGINT NULL ,
	LAST_CHG_TIME 		DATETIME NULL ,
	LAST_CHG_USER_ID 	BIGINT NULL ,
	RECORD_STATUS_CD 	VARCHAR (20) NULL ,
	RECORD_STATUS_TIME 	DATETIME NULL 
) ON [PRIMARY]
GO
CREATE TABLE DBO.S_GT_12_REAS (
	NBS_CASE_ANSWER_UID 	BIGINT NOT NULL ,
	TB_PAM_UID 		BIGINT NOT NULL ,
	VALUE 			VARCHAR (250) NULL ,
	LAST_CHG_TIME 		DATETIME NULL ,
	SEQ_NBR 		INT NOT NULL 
) ON [PRIMARY]
GO
CREATE TABLE DBO.S_MOVE_CNTRY (
	NBS_CASE_ANSWER_UID 	BIGINT NOT NULL ,
	TB_PAM_UID 		BIGINT NOT NULL ,
	VALUE 			VARCHAR (250) NULL ,
	LAST_CHG_TIME 		DATETIME NULL ,
	SEQ_NBR 		INT NOT NULL 
) ON [PRIMARY]
GO
CREATE TABLE DBO.S_MOVED_WHERE (
	NBS_CASE_ANSWER_UID 	BIGINT NOT NULL ,
	TB_PAM_UID 		BIGINT NOT NULL ,
	VALUE 			VARCHAR (250) NULL ,
	LAST_CHG_TIME 		DATETIME NULL ,
	SEQ_NBR 		INT NOT NULL 
) ON [PRIMARY]
GO
CREATE TABLE DBO.S_SMR_EXAM_TY (
	NBS_CASE_ANSWER_UID 	BIGINT NOT NULL ,
	TB_PAM_UID 		BIGINT NOT NULL ,
	VALUE 			VARCHAR (250) NULL ,
	LAST_CHG_TIME 		DATETIME NULL ,
	SEQ_NBR 		INT NOT NULL 
) ON [PRIMARY]
GO

CREATE TABLE DBO.S_OUT_OF_CNTRY (
	NBS_CASE_ANSWER_UID 		BIGINT NOT NULL ,
	TB_PAM_UID 			BIGINT NOT NULL ,
	VALUE 				VARCHAR (250) NULL ,
	LAST_CHG_TIME 			DATETIME NULL ,
	SEQ_NBR 			INT NOT NULL 
) ON [PRIMARY]
GO

CREATE TABLE DBO.S_MOVE_CNTY (
	NBS_CASE_ANSWER_UID 		BIGINT NOT NULL ,
	TB_PAM_UID 			BIGINT NOT NULL ,
	VALUE 				VARCHAR (250) NULL ,
	LAST_CHG_TIME 			DATETIME NULL ,
	SEQ_NBR 			INT NOT NULL 
) ON [PRIMARY]
GO

CREATE TABLE DBO.S_ADDL_RISK (
	NBS_CASE_ANSWER_UID BIGINT NOT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	VALUE VARCHAR (250) NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	SEQ_NBR INT NOT NULL 
) ON [PRIMARY]
GO
CREATE TABLE DBO.S_DISEASE_SITE (
	NBS_CASE_ANSWER_UID BIGINT NOT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	VALUE VARCHAR (250) NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	SEQ_NBR INT NOT NULL 
) ON [PRIMARY]
GO

CREATE TABLE DBO.S_HC_PROV_TY_3 (
	NBS_CASE_ANSWER_UID BIGINT NOT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	VALUE VARCHAR (250) NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	SEQ_NBR INT NOT NULL 
) ON [PRIMARY]
GO

CREATE TABLE DBO.S_MOVE_STATE (
	NBS_CASE_ANSWER_UID BIGINT NOT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	VALUE VARCHAR (250) NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	SEQ_NBR INT NOT NULL 
) ON [PRIMARY]
GO
CREATE TABLE DBO.S_VAR_PAM_ACT_ENTITY (
	VAR_PAM_ACT_ENTITY_UID BIGINT NOT NULL ,
	ENTITY_UID BIGINT NOT NULL ,
	VAR_PAM_UID BIGINT NOT NULL ,
	TYPE_CD VARCHAR (50) NULL ,
	ADD_TIME DATETIME NULL ,
	ADD_USER_ID BIGINT NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	LAST_CHG_USER_ID BIGINT NULL ,
	RECORD_STATUS_CD VARCHAR (20) NULL ,
	RECORD_STATUS_TIME DATETIME NULL 
) ON [PRIMARY]
GO
CREATE TABLE DBO.S_RASH_LOC_GEN (
	NBS_CASE_ANSWER_UID BIGINT NOT NULL ,
	VAR_PAM_UID BIGINT NOT NULL ,
	VALUE VARCHAR (250) NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	SEQ_NBR INT NOT NULL 
) ON [PRIMARY]
GO
CREATE TABLE DBO.S_PCR_SOURCE (
	NBS_CASE_ANSWER_UID BIGINT NOT NULL ,
	VAR_PAM_UID BIGINT NOT NULL ,
	VALUE VARCHAR (250) NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	SEQ_NBR INT NOT NULL 
) ON [PRIMARY]
GO

CREATE TABLE DBO.S_VAR_PAM (
VAR_PAM_UID  			BIGINT NOT NULL,
VACCINE_TYPE_2			VARCHAR(50)  NULL,
VACCINE_MANUFACTURER_1		VARCHAR(50)  NULL,
EPI_LINKED			VARCHAR(50)  NULL,
PCR_TEST			VARCHAR(50)  NULL,
VARICELLA_NO_VACCINE_REASON	VARCHAR(50)  NULL,
SEROLOGY_TEST			VARCHAR(50)  NULL,
DFA_TEST_RESULT			VARCHAR(50)  NULL,
HEALTHCARE_WORKER		VARCHAR(50)  NULL,
IGG_TEST_WHOLE_CELL_MFGR	VARCHAR(50)  NULL,
PREVIOUS_DIAGNOSIS_AGE_UNIT	VARCHAR(50)  NULL,
PREGNANT_TRIMESTER		VARCHAR(50)  NULL,
PREVIOUS_DIAGNOSIS		VARCHAR(50)  NULL,
LAB_TESTING_OTHER_SPECIFY	VARCHAR(50)  NULL,
IGM_TEST_TYPE			VARCHAR(50)  NULL,
FEVER_TEMPERATURE_UNIT		VARCHAR(50)  NULL,
IGG_TEST			VARCHAR(50)  NULL,
MEDICATION_NAME			VARCHAR(50)  NULL,
VACCINE_MANUFACTURER_3		VARCHAR(50)  NULL,
COMPLICATIONS_PNEUMONIA		VARCHAR(50)  NULL,
DFA_TEST			VARCHAR(50)  NULL,
VESICLES			VARCHAR(50)  NULL,
VARICELLA_NO_2NDVACCINE_REASON	VARCHAR(50)  NULL,
IGM_TEST			VARCHAR(50)  NULL,
VACCINE_TYPE_4			VARCHAR(50)  NULL,
COMPLICATIONS_CEREB_ATAXIA	VARCHAR(50)  NULL,
FEVER				VARCHAR(50)  NULL,
STRAIN_TYPE			VARCHAR(50)  NULL,
LAB_TESTING_OTHER_RESULT	VARCHAR(50)  NULL,
CROPS_WAVES			VARCHAR(50)  NULL,
TREATED				VARCHAR(50)  NULL,
RASH_LOCATION			VARCHAR(50)  NULL,
PATIENT_VISIT_HC_PROVIDER	VARCHAR(50)  NULL,
RASH_CRUST			VARCHAR(50)  NULL,
TRANSMISSION_SETTING		VARCHAR(50)  NULL,
CULTURE_TEST_RESULT		VARCHAR(50)  NULL,
HEMORRHAGIC			VARCHAR(50)  NULL,
CULTURE_TEST			VARCHAR(50)  NULL,
VACCINE_TYPE_1			VARCHAR(50)  NULL,
PCR_TEST_RESULT			VARCHAR(50)  NULL,
LAB_TESTING_OTHER		VARCHAR(50)  NULL,
COMPLICATIONS			VARCHAR(50)  NULL,
COMPLICATIONS_PNEU_DIAG_BY	VARCHAR(50)  NULL,
VACCINE_TYPE_5			VARCHAR(50)  NULL,
IGG_TEST_TYPE			VARCHAR(50)  NULL,
EPI_LINKED_CASE_TYPE		VARCHAR(50)  NULL,
VACCINE_MANUFACTURER_4		VARCHAR(50)  NULL,
MACULAR_PAPULAR			VARCHAR(50)  NULL,
VACCINE_TYPE_3			VARCHAR(50)  NULL,
PREVIOUS_DIAGNOSIS_BY		VARCHAR(50)  NULL,
VESICULAR			VARCHAR(50)  NULL,
VACCINE_MANUFACTURER_5		VARCHAR(50)  NULL,
DEATH_VARICELLA			VARCHAR(50)  NULL,
IGG_TEST_GP_ELISA_MFGR		VARCHAR(50)  NULL,
VARICELLA_VACCINE		VARCHAR(50)  NULL,
IGM_TEST_RESULT			VARCHAR(50)  NULL,
IMMUNOCOMPROMISED		VARCHAR(50)  NULL,
COMPLICATIONS_OTHER		VARCHAR(50)  NULL,
ITCHY				VARCHAR(50)  NULL,
PATIENT_BIRTH_COUNTRY		VARCHAR(50)  NULL,
DEATH_AUTOPSY			VARCHAR(50)  NULL,
COMPLICATIONS_ENCEPHALITIS	VARCHAR(50)  NULL,
COMPLICATIONS_HEMORRHAGIC	VARCHAR(50)  NULL,
COMPLICATIONS_SKIN_INFECTION	VARCHAR(50)  NULL,
COMPLICATIONS_DEHYDRATION	VARCHAR(50)  NULL,
VACCINE_MANUFACTURER_2		VARCHAR(50)  NULL,
GENOTYPING_SENT_TO_CDC		VARCHAR(50)  NULL,
STRAIN_IDENTIFICATION_SENT	VARCHAR(50)  NULL,
IGG_TEST_CONVALESCENT_RESULT	VARCHAR(50)  NULL,
IGG_TEST_ACUTE_RESULT		VARCHAR(50)  NULL,
LAB_TESTING			VARCHAR(50)  NULL,
PAPULES				VARCHAR(50)  NULL,
SCABS				VARCHAR(50)  NULL,
LESIONS_TOTAL			VARCHAR(50)  NULL,
MACULES				VARCHAR(50)  NULL,
IGG_TEST_ACUTE_DATE		DATETIME  NULL,
VACCINE_DATE_4			DATETIME  NULL,
PCR_TEST_DATE			DATETIME  NULL,
VACCINE_DATE_2			DATETIME  NULL,
MEDICATION_START_DATE		DATETIME  NULL,
DFA_TEST_DATE			DATETIME  NULL,
VACCINE_DATE_3			DATETIME  NULL,
IGG_TEST_CONVALESCENT_DATE	DATETIME  NULL,
MEDICATION_STOP_DATE		DATETIME  NULL,
VACCINE_DATE_1			DATETIME  NULL,
LAB_TESTING_OTHER_DATE		DATETIME  NULL,
CULTURE_TEST_DATE		DATETIME  NULL,
GENOTYPING_SENT_TO_CDC_DATE	DATETIME  NULL,
FEVER_ONSET_DATE		DATETIME  NULL,
RASH_ONSET_DATE			DATETIME  NULL,
DEATH_VARICELLA_DATE		DATETIME  NULL,
IGM_TEST_DATE			DATETIME  NULL,
VACCINE_DATE_5			DATETIME  NULL,
VARICELLA_VACCINE_DOSES_NUMBER	NUMERIC  NULL,
FEVER_DURATION_DAYS		NUMERIC  NULL,
PREVIOUS_DIAGNOSIS_AGE		NUMERIC  NULL,
LESIONS_TOTAL_LT50		NUMERIC  NULL,
VESICLES_NUMBER			NUMERIC  NULL,
MACULES_NUMBER			NUMERIC  NULL,
PAPULES_NUMBER			NUMERIC  NULL,
PREGNANT_WEEKS			NUMERIC  NULL,
RASH_CRUSTED_DAYS		NUMERIC  NULL,
RASH_DURATION_DAYS		NUMERIC  NULL,
FEVER_TEMPERATURE		NUMERIC  NULL,
PCR_TEST_SOURCE_OTHER		VARCHAR(50)  NULL,
VARICELLA_NO_2NDVACCINE_OTHER	VARCHAR(50)  NULL,
VACCINE_LOT_5			VARCHAR(50)  NULL,
RASH_LOCATION_DERMATOME		VARCHAR(50)  NULL,
IGG_TEST_OTHER			VARCHAR(50)  NULL,
VACCINE_LOT_4			VARCHAR(50)  NULL,
VACCINE_LOT_1			VARCHAR(50)  NULL,
DEATH_CAUSE			VARCHAR(50)  NULL,
VARICELLA_NO_VACCINE_OTHER	VARCHAR(50)  NULL,
IGG_TEST_ACUTE_VALUE		VARCHAR(50)  NULL,
TRANSMISSION_SETTING_OTHER	VARCHAR(50)  NULL,
IMMUNOCOMPROMISED_CONDITION	VARCHAR(50)  NULL,
LAB_TESTING_OTHER_RESULT_VALUE	VARCHAR(50)  NULL,
VACCINE_LOT_3			VARCHAR(50)  NULL,
MEDICATION_NAME_OTHER		VARCHAR(50)  NULL,
PREVIOUS_DIAGNOSIS_BY_OTHER	VARCHAR(50)  NULL,
RASH_LOCATION_OTHER		VARCHAR(50)  NULL,
IGG_TEST_CONVALESCENT_VALUE	VARCHAR(50)  NULL,
IGM_TEST_TYPE_OTHER		VARCHAR(50)  NULL,
PCR_TEST_RESULT_OTHER		VARCHAR(50)  NULL,
VACCINE_LOT_2			VARCHAR(50)  NULL,
IGM_TEST_RESULT_VALUE		VARCHAR(50)  NULL,
COMPLICATIONS_OTHER_SPECIFY	VARCHAR(50)  NULL,
LAST_CHG_TIME           	DATETIME  NULL
)
GO
CREATE TABLE DBO.L_TB_PAM (
	TB_PAM_KEY BIGINT NOT NULL ,
	D_TB_PAM_KEY BIGINT NOT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	 PRIMARY KEY  CLUSTERED 
	(
		TB_PAM_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO
CREATE TABLE DBO.L_TB_HIV (
	TB_HIV_KEY BIGINT NOT NULL ,
	D_TB_HIV_KEY BIGINT NOT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	 PRIMARY KEY  CLUSTERED 
	(
		TB_HIV_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO

CREATE TABLE DBO.L_GT_12_REAS (
	GT_12_REAS_KEY BIGINT NOT NULL ,
	NBS_CASE_ANSWER_UID BIGINT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	D_GT_12_REAS_KEY BIGINT NOT NULL ,
	D_GT_12_REAS_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK__L_GT_12_REAS PRIMARY KEY  CLUSTERED 
	(
		GT_12_REAS_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO
CREATE TABLE DBO.L_MOVE_CNTRY (
	MOVE_CNTRY_KEY BIGINT NOT NULL ,
	NBS_CASE_ANSWER_UID BIGINT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	D_MOVE_CNTRY_KEY BIGINT NOT NULL ,
	D_MOVE_CNTRY_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK__L_MOVE_CNTRY PRIMARY KEY  CLUSTERED 
	(
		MOVE_CNTRY_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO
CREATE TABLE DBO.L_MOVED_WHERE (
	MOVED_WHERE_KEY BIGINT NOT NULL ,
	NBS_CASE_ANSWER_UID BIGINT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	D_MOVED_WHERE_KEY BIGINT NOT NULL ,
	D_MOVED_WHERE_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK__L_MOVED_WHERE PRIMARY KEY  CLUSTERED 
	(
		MOVED_WHERE_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO
CREATE TABLE DBO.L_SMR_EXAM_TY (
	SMR_EXAM_TY_KEY BIGINT NOT NULL ,
	NBS_CASE_ANSWER_UID BIGINT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	D_SMR_EXAM_TY_KEY BIGINT NOT NULL ,
	D_SMR_EXAM_TY_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK__L_SMR_EXAM_TY PRIMARY KEY  CLUSTERED 
	(
		SMR_EXAM_TY_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO

CREATE TABLE DBO.L_MOVE_CNTY (
	MOVE_CNTY_KEY BIGINT NOT NULL ,
	NBS_CASE_ANSWER_UID BIGINT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	D_MOVE_CNTY_KEY BIGINT NOT NULL ,
	D_MOVE_CNTY_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK__L_MOVE_CNTY PRIMARY KEY  CLUSTERED 
	(
		MOVE_CNTY_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO


CREATE TABLE DBO.L_ADDL_RISK (
	ADDL_RISK_KEY BIGINT NOT NULL ,
	NBS_CASE_ANSWER_UID BIGINT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	D_ADDL_RISK_KEY BIGINT NOT NULL ,
	D_ADDL_RISK_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK__L_ADDL_RISK PRIMARY KEY  CLUSTERED 
	(
		ADDL_RISK_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO

CREATE TABLE DBO.L_DISEASE_SITE (
	DISEASE_SITE_KEY BIGINT NOT NULL ,
	NBS_CASE_ANSWER_UID BIGINT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	D_DISEASE_SITE_KEY BIGINT NOT NULL ,
	D_DISEASE_SITE_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK__L_DISEASE_SITE PRIMARY KEY  CLUSTERED 
	(
		DISEASE_SITE_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO
CREATE TABLE DBO.L_OUT_OF_CNTRY (
	OUT_OF_CNTRY_KEY BIGINT NOT NULL ,
	NBS_CASE_ANSWER_UID BIGINT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	D_OUT_OF_CNTRY_KEY BIGINT NOT NULL ,
	D_OUT_OF_CNTRY_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK__L_OUT_OF_CNTRY PRIMARY KEY  CLUSTERED 
	(
		OUT_OF_CNTRY_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO

CREATE TABLE DBO.L_HC_PROV_TY_3 (
	HC_PROV_TY_3_KEY BIGINT NOT NULL ,
	NBS_CASE_ANSWER_UID BIGINT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	D_HC_PROV_TY_3_KEY BIGINT NOT NULL ,
	D_HC_PROV_TY_3_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK__L_HC_PROV_TY_3 PRIMARY KEY  CLUSTERED 
	(
		HC_PROV_TY_3_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO

CREATE TABLE DBO.L_MOVE_STATE (
	MOVE_STATE_KEY BIGINT NOT NULL ,
	NBS_CASE_ANSWER_UID BIGINT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	D_MOVE_STATE_KEY BIGINT NOT NULL ,
	D_MOVE_STATE_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK__L_MOVE_STATE PRIMARY KEY  CLUSTERED 
	(
		MOVE_STATE_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO
CREATE TABLE DBO.L_VAR_PAM (
	VAR_PAM_KEY BIGINT NOT NULL ,
	D_VAR_PAM_KEY BIGINT NOT NULL ,
	VAR_PAM_UID BIGINT NOT NULL ,
	 PRIMARY KEY  CLUSTERED 
	(
		VAR_PAM_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO
CREATE TABLE DBO.L_PCR_SOURCE (
	PCR_SOURCE_KEY BIGINT NOT NULL ,
	NBS_CASE_ANSWER_UID BIGINT NULL ,
	VAR_PAM_UID BIGINT NOT NULL ,
	D_PCR_SOURCE_KEY BIGINT NOT NULL ,
	D_PCR_SOURCE_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK__L_PCR_SOURCE_LOO__31EF7D39 PRIMARY KEY  CLUSTERED 
	(
		PCR_SOURCE_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO
CREATE TABLE DBO.L_RASH_LOC_GEN (
	RASH_LOC_GEN_KEY BIGINT NOT NULL ,
	NBS_CASE_ANSWER_UID BIGINT NULL ,
	VAR_PAM_UID BIGINT NOT NULL ,
	D_RASH_LOC_GEN_KEY BIGINT NOT NULL ,
	D_RASH_LOC_GEN_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK__L_RASH_LOC_GEN_LOO__31EF7D39 PRIMARY KEY  CLUSTERED 
	(
		RASH_LOC_GEN_KEY
	)  ON [PRIMARY] 
) ON [PRIMARY]
GO
CREATE TABLE DBO.F_S_VAR_PAM (
	PROVIDER_UID BIGINT NULL ,
	HOSPITAL_UID BIGINT NULL ,
	ORG_AS_REPORTER_UID  BIGINT NULL ,
	PERSON_AS_REPORTER_UID  BIGINT NULL ,
	VAR_PAM_UID BIGINT NOT NULL ,
	PERSON_UID BIGINT NOT NULL ,
	PHYSICIAN_UID BIGINT NULL,
	LAST_CHG_TIME   DATETIME  NULL
) ON [PRIMARY]
GO

CREATE TABLE DBO.F_S_TB_PAM (
	PROVIDER_UID BIGINT NULL ,
	HOSPITAL_UID BIGINT NULL ,
	ORG_AS_REPORTER_UID  BIGINT NULL ,
	PERSON_AS_REPORTER_UID  BIGINT NULL ,
	TB_PAM_UID BIGINT NOT NULL ,
	PERSON_UID BIGINT NOT NULL ,
	PHYSICIAN_UID BIGINT NULL,
	LAST_CHG_TIME   DATETIME  NULL
) ON [PRIMARY]
GO

CREATE TABLE DBO.D_TB_PAM (
	D_TB_PAM_KEY 			BIGINT  NOT NULL,
	TB_PAM_UID 			BIGINT NOT NULL,
	CALC_DISEASE_SITE 		VARCHAR(100)  NULL,
	LINK_STATE_CASE_NUM_1		VARCHAR(100)  NULL,
	LINK_REASON_1			VARCHAR(100)  NULL,
	LINK_STATE_CASE_NUM_2		VARCHAR(100)  NULL,
	LINK_REASON_2			VARCHAR(100)  NULL,
	COUNT_STATUS			VARCHAR(100)  NULL,
	COUNTRY_OF_VERIFIED_CASE	VARCHAR(100)  NULL,
	COUNT_DATE			DATETIME  NULL,
	PREVIOUS_DIAGNOSIS_IND		VARCHAR(100)  NULL,
	PREVIOUS_DIAGNOSIS_YEAR		NUMERIC  NULL,
	PATIENT_OUTSIDE_US_GT_2_MONTHS	VARCHAR(100)  NULL,
	PRIMARY_GUARD_1_BIRTH_COUNTRY	VARCHAR(100)  NULL,
	PRIMARY_GUARD_2_BIRTH_COUNTRY	VARCHAR(100)  NULL,
	STATUS_AT_DIAGNOSIS		VARCHAR(100)  NULL,
	DISEASE_SITE			VARCHAR(100)  NULL,
	SPUTUM_SMEAR_RESULT		VARCHAR(100)  NULL,
	SPUTUM_SMEAR_COLLECT_DATE	DATETIME  NULL,
	SPUTUM_CULTURE_RESULT		VARCHAR(100)  NULL,
	SPUTUM_CULT_COLLECT_DATE	DATETIME  NULL,
	SPUTUM_CULT_RESULT_RPT_DATE	DATETIME  NULL,
	SPUTUM_CULT_RPT_LAB_TY		VARCHAR(100)  NULL,
	SMR_PATH_CYTO_RESULT		VARCHAR(100)  NULL,
	SMR_PATH_CYTO_COLLECT_DATE	DATETIME  NULL,
	SMR_PATH_CYTO_SITE		VARCHAR(100)  NULL,
	CULT_TISSUE_RESULT		VARCHAR(100)  NULL,
	CULT_TISSUE_COLLECT_DATE	DATETIME  NULL,
	CULT_TISSUE_SITE		VARCHAR(100)  NULL,
	CULT_TISSUE_RESULT_RPT_DATE	DATETIME  NULL,
	CULT_TISSUE_RESULT_RPT_LAB_TY	VARCHAR(100)  NULL,
	NAA_RESULT			VARCHAR(100)  NULL,
	NAA_COLLECT_DATE		DATETIME  NULL,
	NAA_SPEC_IS_SPUTUM_IND		VARCHAR(100)  NULL,
	NAA_SPEC_NOT_SPUTUM		VARCHAR(100)  NULL,
	NAA_RESULT_RPT_DATE		DATETIME  NULL,
	NAA_RPT_LAB_TY			VARCHAR(100)  NULL,
	CHEST_XRAY_RESULT		VARCHAR(100)  NULL,
	CHEST_XRAY_CAVITY_EVIDENCE	VARCHAR(100)  NULL,
	CHEST_XRAY_MILIARY_EVIDENCE	VARCHAR(100)  NULL,
	CT_SCAN_RESULT			VARCHAR(100)  NULL,
	CT_SCAN_CAVITY_EVIDENCE		VARCHAR(100)  NULL,
	CT_SCAN_MILIARY_EVIDENCE	VARCHAR(100)  NULL,
	TST_RESULT			VARCHAR(100)  NULL,
	TST_PLACED_DATE			DATETIME  NULL,
	TST_MM_INDURATION		NUMERIC  NULL,
	IGRA_RESULT			VARCHAR(100)  NULL,
	IGRA_COLLECT_DATE		DATETIME  NULL,
	IGRA_TEST_TY			VARCHAR(100)  NULL,
	PRIMARY_REASON_EVALUATED	VARCHAR(100)  NULL,
	HIV_STATUS			VARCHAR(100)  NULL,
	HIV_STATE_PATIENT_NUM		VARCHAR(100)  NULL,
	HIV_CITY_CNTY_PATIENT_NUM	VARCHAR(100)  NULL,
	HOMELESS_IND			VARCHAR(100)  NULL,
	CORRECTIONAL_FACIL_RESIDENT	VARCHAR(100)  NULL,
	CORRECTIONAL_FACIL_TY		VARCHAR(100)  NULL,
	CORRECTIONAL_FACIL_CUSTODY_IND	VARCHAR(100)  NULL,
	LONGTERM_CARE_FACIL_RESIDENT	VARCHAR(100)  NULL,
	LONGTERM_CARE_FACIL_TY		VARCHAR(100)  NULL,
	OCCUPATION_RISK			VARCHAR(100)  NULL,
	INJECT_DRUG_USE_PAST_YEAR	VARCHAR(100)  NULL,
	NONINJECT_DRUG_USE_PAST_YEAR	VARCHAR(100)  NULL,
	EXCESS_ALCOHOL_USE_PAST_YEAR	VARCHAR(100)  NULL,
	OTHER_TB_RISK_FACTORS		VARCHAR(100)  NULL,
	IMMIGRATION_STATUS_AT_US_ENTRY	VARCHAR(100)  NULL,
	INIT_REGIMEN_START_DATE		DATETIME  NULL,
	INIT_REGIMEN_ISONIAZID		VARCHAR(100)  NULL,
	INIT_REGIMEN_RIFAMPIN		VARCHAR(100)  NULL,
	INIT_REGIMEN_PYRAZINAMIDE	VARCHAR(100)  NULL,
	INIT_REGIMEN_ETHAMBUTOL		VARCHAR(100)  NULL,
	INIT_REGIMEN_STREPTOMYCIN	VARCHAR(100)  NULL,
	INIT_REGIMEN_ETHIONAMIDE	VARCHAR(100)  NULL,
	INIT_REGIMEN_KANAMYCIN		VARCHAR(100)  NULL,
	INIT_REGIMEN_CYCLOSERINE	VARCHAR(100)  NULL,
	INIT_REGIMEN_CAPREOMYCIN	VARCHAR(100)  NULL,
	INIT_REGIMEN_PA_SALICYLIC_ACID	VARCHAR(100)  NULL,
	INIT_REGIMEN_AMIKACIN		VARCHAR(100)  NULL,
	INIT_REGIMEN_RIFABUTIN		VARCHAR(100)  NULL,
	INIT_REGIMEN_CIPROFLOXACIN	VARCHAR(100)  NULL,
	INIT_REGIMEN_OFLOXACIN		VARCHAR(100)  NULL,
	INIT_REGIMEN_RIFAPENTINE	VARCHAR(100)  NULL,
	INIT_REGIMEN_LEVOFLOXACIN	VARCHAR(100)  NULL,
	INIT_REGIMEN_MOXIFLOXACIN	VARCHAR(100)  NULL,
	INIT_REGIMEN_OTHER_1_IND	VARCHAR(100)  NULL,
	INIT_REGIMEN_OTHER_1		VARCHAR(100)  NULL,
	INIT_REGIMEN_OTHER_2_IND	VARCHAR(100)  NULL,
	INIT_REGIMEN_OTHER_2		VARCHAR(100)  NULL,
	ISOLATE_SUBMITTED_IND		VARCHAR(100)  NULL,
	ISOLATE_ACCESSION_NUM		VARCHAR(100)  NULL,
	INIT_SUSCEPT_TESTING_DONE	VARCHAR(100)  NULL,
	FIRST_ISOLATE_COLLECT_DATE	DATETIME  NULL,
	FIRST_ISOLATE_IS_SPUTUM_IND	VARCHAR(100)  NULL,
	FIRST_ISOLATE_NOT_SPUTUM	VARCHAR(100)  NULL,
	INIT_SUSCEPT_ISONIAZID		VARCHAR(100)  NULL,
	INIT_SUSCEPT_RIFAMPIN		VARCHAR(100)  NULL,
	INIT_SUSCEPT_PYRAZINAMIDE	VARCHAR(100)  NULL,
	INIT_SUSCEPT_ETHAMBUTOL		VARCHAR(100)  NULL,
	INIT_SUSCEPT_STREPTOMYCIN	VARCHAR(100)  NULL,
	INIT_SUSCEPT_ETHIONAMIDE	VARCHAR(100)  NULL,
	INIT_SUSCEPT_KANAMYCIN	        VARCHAR(100)  NULL,
	INIT_SUSCEPT_CYCLOSERINE	VARCHAR(100)  NULL,
	INIT_SUSCEPT_CAPREOMYCIN	VARCHAR(100)  NULL,
	INIT_SUSCEPT_PA_SALICYLIC_ACID	VARCHAR(100)  NULL,
	INIT_SUSCEPT_AMIKACIN	        VARCHAR(100)  NULL,
	INIT_SUSCEPT_RIFABUTIN	        VARCHAR(100)  NULL,
	INIT_SUSCEPT_CIPROFLOXACIN	VARCHAR(100)  NULL,
	INIT_SUSCEPT_OFLOXACIN	        VARCHAR(100)  NULL,
	INIT_SUSCEPT_RIFAPENTINE	VARCHAR(100)  NULL,
	INIT_SUSCEPT_LEVOFLOXACIN	VARCHAR(100)  NULL,
	INIT_SUSCEPT_MOXIFLOXACIN	VARCHAR(100)  NULL,
	INIT_SUSCEPT_OTHER_QUNINOLONES	VARCHAR(100)  NULL,
	INIT_SUSCEPT_OTHER_1_IND	VARCHAR(100)  NULL,
	INIT_SUSCEPT_OTHER_1	        VARCHAR(100)  NULL,
	INIT_SUSCEPT_OTHER_2_IND	VARCHAR(100)  NULL,
	INIT_SUSCEPT_OTHER_2	        VARCHAR(100)  NULL,
	SPUTUM_CULTURE_CONV_DOCUMENTED	VARCHAR(100)  NULL,
	TB_SPUTUM_CULTURE_NEGATIVE_DAT	DATETIME  NULL,
	NO_CONV_DOC_REASON	        VARCHAR(100)  NULL,
	NO_CONV_DOC_OTHER_REASON	VARCHAR(100)  NULL,
	MOVED_IND	        	VARCHAR(100)  NULL,
	TRANSNATIONAL_REFERRAL_IND	VARCHAR(100)  NULL,
	MOVE_CITY	         	VARCHAR(100)  NULL,
	THERAPY_STOP_DATE	        DATETIME  NULL,
	THERAPY_STOP_REASON	        VARCHAR(100)  NULL,
	THERAPY_STOP_CAUSE_OF_DEATH	VARCHAR(100)  NULL,
	THERAPY_EXTEND_GT_12_OTHER	VARCHAR(100)  NULL,
	DOT				VARCHAR(100)  NULL,
	DOT_NUMBER_WEEKS		NUMERIC  NULL,
	FINAL_SUSCEPT_TESTING		VARCHAR(100)  NULL,
	FINAL_ISOLATE_COLLECT_DATE	DATETIME  NULL,
	FINAL_ISOLATE_IS_SPUTUM_IND	VARCHAR(100)  NULL,
	FINAL_ISOLATE_NOT_SPUTUM	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_ISONIAZID		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_RIFAMPIN		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_PYRAZINAMIDE	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_ETHAMBUTOL	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_STREPTOMYCIN	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_ETHIONAMIDE	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_KANAMYCIN		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_CYCLOSERINE	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_CAPREOMYCIN	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_PA_SALICYLIC_ACI	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_AMIKACIN		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_RIFABUTIN		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_CIPROFLOXACIN	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_OFLOXACIN		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_RIFAPENTINE	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_LEVOFLOXACIN	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_MOXIFLOXACIN	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_OTHER_QUINOLONES	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_OTHER_IND		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_OTHER		VARCHAR(100)  NULL,
	FINAL_SUSCEPT_OTHER_2_IND	VARCHAR(100)  NULL,
	FINAL_SUSCEPT_OTHER_2		VARCHAR(100)  NULL,
	CASE_VERIFICATION		VARCHAR(100)  NULL,
	COMMENTS_FOLLOW_UP_1		VARCHAR(100)  NULL,
	COMMENTS_FOLLOW_UP_2		VARCHAR(100)  NULL,
	MOVE_CITY_2			VARCHAR(100)  NULL,
	DATE_ARRIVED_IN_US		DATETIME  NULL,
	DATE_SUBMITTED			DATETIME  NULL,
	PATIENT_BIRTH_COUNTRY		VARCHAR(100)  NULL,
	US_BORN_IND			VARCHAR(100)  NULL,
	TB_VERCRIT_CALC_IND		VARCHAR(100)  NULL,
	PROVIDER_OVERRIDE_COMMENTS	VARCHAR(100)  NULL,
	INIT_DRUG_REG_CALC 		VARCHAR(200) NULL,
	LAST_CHG_TIME 			DATETIME NULL ,
	CONSTRAINT PK__D_RVCT_PAM__48D2E291 PRIMARY KEY  CLUSTERED 
	(
		D_TB_PAM_KEY
	)  ON [PRIMARY]
) ON [PRIMARY]
GO


CREATE TABLE DBO.D_TB_HIV (
	TB_PAM_UID BIGINT NOT NULL ,
	D_TB_HIV_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	HIV_STATE_PATIENT_NUM VARCHAR (50) NULL ,
	HIV_STATUS VARCHAR (50) NULL ,
	HIV_CITY_CNTY_PATIENT_NUM VARCHAR (50) NULL ,
	 PRIMARY KEY  CLUSTERED 
	(
		D_TB_HIV_KEY
	)  ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE TABLE DBO.D_GT_12_REAS_GROUP (
	D_GT_12_REAS_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK_D_GT_12_REAS_GROUP PRIMARY KEY  CLUSTERED 
	(
		D_GT_12_REAS_GROUP_KEY
	)  ON [PRIMARY ]
) ON [PRIMARY]
GO


CREATE TABLE DBO.D_GT_12_REAS (
	TB_PAM_UID BIGINT NOT NULL ,
	D_GT_12_REAS_KEY BIGINT NOT NULL ,
	SEQ_NBR INT NULL ,
	D_GT_12_REAS_GROUP_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	VALUE VARCHAR (250) NULL ,
	CONSTRAINT PK_D_GT_12_REAS PRIMARY KEY  CLUSTERED 
	(
		D_GT_12_REAS_KEY,
		TB_PAM_UID
	)  ON [PRIMARY] ,
	CONSTRAINT FK_D_GT_12_REAS_D_GT_12_REAS_GROUP FOREIGN KEY 
	(
		D_GT_12_REAS_GROUP_KEY
	) REFERENCES D_GT_12_REAS_GROUP (
		D_GT_12_REAS_GROUP_KEY
	)
) ON [PRIMARY]
GO
CREATE TABLE DBO.D_MOVE_CNTRY_GROUP (
	D_MOVE_CNTRY_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK_D_MOVE_CNTRY_GROUP PRIMARY KEY  CLUSTERED 
	(
		D_MOVE_CNTRY_GROUP_KEY
	)  ON [PRIMARY ]
) ON [PRIMARY]
GO


CREATE TABLE DBO.D_MOVE_CNTRY (
	TB_PAM_UID BIGINT NOT NULL ,
	D_MOVE_CNTRY_KEY BIGINT NOT NULL ,
	SEQ_NBR INT NULL ,
	D_MOVE_CNTRY_GROUP_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	VALUE VARCHAR (250) NULL ,
	CONSTRAINT PK_D_MOVE_CNTRY PRIMARY KEY  CLUSTERED 
	(
		D_MOVE_CNTRY_KEY,
		TB_PAM_UID
	)  ON [PRIMARY] ,
	CONSTRAINT FK_D_MOVE_CNTRY_D_MOVE_CNTRY_GROUP FOREIGN KEY 
	(
		D_MOVE_CNTRY_GROUP_KEY
	) REFERENCES D_MOVE_CNTRY_GROUP (
		D_MOVE_CNTRY_GROUP_KEY
	)
) ON [PRIMARY]
GO
CREATE TABLE DBO.D_MOVED_WHERE_GROUP (
	D_MOVED_WHERE_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK_D_MOVED_WHERE_GROUP PRIMARY KEY  CLUSTERED 
	(
		D_MOVED_WHERE_GROUP_KEY
	)  ON [PRIMARY ]
) ON [PRIMARY]
GO


CREATE TABLE DBO.D_MOVED_WHERE (
	TB_PAM_UID BIGINT NOT NULL ,
	D_MOVED_WHERE_KEY BIGINT NOT NULL ,
	SEQ_NBR INT NULL ,
	D_MOVED_WHERE_GROUP_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	VALUE VARCHAR (250) NULL ,
	CONSTRAINT PK_D_MOVED_WHERE PRIMARY KEY  CLUSTERED 
	(
		D_MOVED_WHERE_KEY,
		TB_PAM_UID
	)  ON [PRIMARY] ,
	CONSTRAINT FK_D_MOVED_WHERE_D_MOVED_WHERE_GROUP FOREIGN KEY 
	(
		D_MOVED_WHERE_GROUP_KEY
	) REFERENCES D_MOVED_WHERE_GROUP (
		D_MOVED_WHERE_GROUP_KEY
	)
) ON [PRIMARY]
GO
CREATE TABLE DBO.D_SMR_EXAM_TY_GROUP (
	D_SMR_EXAM_TY_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK_D_SMR_EXAM_TY_GROUP PRIMARY KEY  CLUSTERED 
	(
		D_SMR_EXAM_TY_GROUP_KEY
	)  ON [PRIMARY ]
) ON [PRIMARY]
GO


CREATE TABLE DBO.D_SMR_EXAM_TY (
	TB_PAM_UID BIGINT NOT NULL ,
	D_SMR_EXAM_TY_KEY BIGINT NOT NULL ,
	SEQ_NBR INT NULL ,
	D_SMR_EXAM_TY_GROUP_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	VALUE VARCHAR (250) NULL ,
	CONSTRAINT PK_D_SMR_EXAM_TY PRIMARY KEY  CLUSTERED 
	(
		D_SMR_EXAM_TY_KEY,
		TB_PAM_UID
	)  ON [PRIMARY] ,
	CONSTRAINT FK_D_SMR_EXAM_TY_D_SMR_EXAM_TY_GROUP FOREIGN KEY 
	(
		D_SMR_EXAM_TY_GROUP_KEY
	) REFERENCES D_SMR_EXAM_TY_GROUP (
		D_SMR_EXAM_TY_GROUP_KEY
	)
) ON [PRIMARY]
GO

CREATE TABLE DBO.D_MOVE_CNTY_GROUP (
	D_MOVE_CNTY_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK_D_MOVE_CNTY_GROUP PRIMARY KEY  CLUSTERED 
	(
		D_MOVE_CNTY_GROUP_KEY
	)  ON [PRIMARY ]
) ON [PRIMARY]
GO


CREATE TABLE DBO.D_MOVE_CNTY (
	TB_PAM_UID BIGINT NOT NULL ,
	D_MOVE_CNTY_KEY BIGINT NOT NULL ,
	SEQ_NBR INT NULL ,
	D_MOVE_CNTY_GROUP_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	VALUE VARCHAR (250) NULL ,
	CONSTRAINT PK_D_MOVE_CNTY PRIMARY KEY  CLUSTERED 
	(
		D_MOVE_CNTY_KEY,
		TB_PAM_UID
	)  ON [PRIMARY] ,
	CONSTRAINT FK_D_MOVE_CNTY_D_MOVE_CNTY_GROUP FOREIGN KEY 
	(
		D_MOVE_CNTY_GROUP_KEY
	) REFERENCES D_MOVE_CNTY_GROUP (
		D_MOVE_CNTY_GROUP_KEY
	)
) ON [PRIMARY]
GO

CREATE TABLE DBO.D_ADDL_RISK_GROUP (
	D_ADDL_RISK_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK_D_ADDL_RISK_GROUP PRIMARY KEY  CLUSTERED 
	(
		D_ADDL_RISK_GROUP_KEY
	)  ON [PRIMARY ]
) ON [PRIMARY]
GO


CREATE TABLE DBO.D_ADDL_RISK (
	TB_PAM_UID BIGINT NOT NULL ,
	D_ADDL_RISK_KEY BIGINT NOT NULL ,
	SEQ_NBR INT NULL ,
	D_ADDL_RISK_GROUP_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	VALUE VARCHAR (250) NULL ,
	CONSTRAINT PK_D_ADDL_RISK PRIMARY KEY  CLUSTERED 
	(
		D_ADDL_RISK_KEY,
		TB_PAM_UID
	)  ON [PRIMARY] ,
	CONSTRAINT FK_D_ADDL_RISK_D_ADDL_RISK_GROUP FOREIGN KEY 
	(
		D_ADDL_RISK_GROUP_KEY
	) REFERENCES D_ADDL_RISK_GROUP (
		D_ADDL_RISK_GROUP_KEY
	)
) ON [PRIMARY]
GO


CREATE TABLE DBO.D_HC_PROV_TY_3_GROUP (
	D_HC_PROV_TY_3_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK_D_HC_PROV_TY_3_GROUP PRIMARY KEY  CLUSTERED 
	(
		D_HC_PROV_TY_3_GROUP_KEY
	)  ON [PRIMARY ]
) ON [PRIMARY]
GO
CREATE TABLE DBO.D_OUT_OF_CNTRY_GROUP (
	D_OUT_OF_CNTRY_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK_D_OUT_OF_CNTRY_GROUP PRIMARY KEY  CLUSTERED 
	(
		D_OUT_OF_CNTRY_GROUP_KEY
	)  ON [PRIMARY ]
) ON [PRIMARY]
GO


CREATE TABLE DBO.D_OUT_OF_CNTRY (
	TB_PAM_UID BIGINT NOT NULL ,
	D_OUT_OF_CNTRY_KEY BIGINT NOT NULL ,
	SEQ_NBR INT NULL ,
	D_OUT_OF_CNTRY_GROUP_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	VALUE VARCHAR (250) NULL ,
	CONSTRAINT PK_D_OUT_OF_CNTRY PRIMARY KEY  CLUSTERED 
	(
		D_OUT_OF_CNTRY_KEY,
		TB_PAM_UID
	)  ON [PRIMARY] ,
	CONSTRAINT FK_D_OUT_OF_CNTRY_D_OUT_OF_CNTRY_GROUP FOREIGN KEY 
	(
		D_OUT_OF_CNTRY_GROUP_KEY
	) REFERENCES D_OUT_OF_CNTRY_GROUP (
		D_OUT_OF_CNTRY_GROUP_KEY
	)
) ON [PRIMARY]
GO

CREATE TABLE DBO.D_DISEASE_SITE_GROUP (
	D_DISEASE_SITE_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK_D_DISEASE_SITE_GROUP PRIMARY KEY  CLUSTERED 
	(
		D_DISEASE_SITE_GROUP_KEY
	)  ON [PRIMARY ]
) ON [PRIMARY]
GO


CREATE TABLE DBO.D_DISEASE_SITE (
	TB_PAM_UID BIGINT NOT NULL ,
	D_DISEASE_SITE_KEY BIGINT NOT NULL ,
	SEQ_NBR INT NULL ,
	D_DISEASE_SITE_GROUP_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	VALUE VARCHAR (250) NULL ,
	CONSTRAINT PK_D_DISEASE_SITE PRIMARY KEY  CLUSTERED 
	(
		D_DISEASE_SITE_KEY,
		TB_PAM_UID
	)  ON [PRIMARY] ,
	CONSTRAINT FK_D_DISEASE_SITE_D_DISEASE_SITE_GROUP FOREIGN KEY 
	(
		D_DISEASE_SITE_GROUP_KEY
	) REFERENCES D_DISEASE_SITE_GROUP (
		D_DISEASE_SITE_GROUP_KEY
	)
) ON [PRIMARY]
GO

CREATE TABLE DBO.D_HC_PROV_TY_3 (
	TB_PAM_UID BIGINT NOT NULL ,
	D_HC_PROV_TY_3_KEY BIGINT NOT NULL ,
	SEQ_NBR INT NULL ,
	D_HC_PROV_TY_3_GROUP_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	VALUE VARCHAR (250) NULL ,
	CONSTRAINT PK_D_HC_PROV_TY_3 PRIMARY KEY  CLUSTERED 
	(
		D_HC_PROV_TY_3_KEY,
		TB_PAM_UID
	)  ON [PRIMARY] ,
	CONSTRAINT FK_D_HC_PROV_TY_3_D_HC_PROV_TY_3_GROUP FOREIGN KEY 
	(
		D_HC_PROV_TY_3_GROUP_KEY
	) REFERENCES D_HC_PROV_TY_3_GROUP (
		D_HC_PROV_TY_3_GROUP_KEY
	)
) ON [PRIMARY]
GO
CREATE TABLE DBO.D_MOVE_STATE_GROUP (
	D_MOVE_STATE_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK_D_MOVE_STATE_GROUP PRIMARY KEY  CLUSTERED 
	(
		D_MOVE_STATE_GROUP_KEY
	)  ON [PRIMARY ]
) ON [PRIMARY]
GO


CREATE TABLE DBO.D_MOVE_STATE (
	TB_PAM_UID BIGINT NOT NULL ,
	D_MOVE_STATE_KEY BIGINT NOT NULL ,
	SEQ_NBR INT NULL ,
	D_MOVE_STATE_GROUP_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME DATETIME NULL ,
	VALUE VARCHAR (250) NULL ,
	CONSTRAINT PK_D_MOVE_STATE PRIMARY KEY  CLUSTERED 
	(
		D_MOVE_STATE_KEY,
		TB_PAM_UID
	)  ON [PRIMARY] ,
	CONSTRAINT FK_D_MOVE_STATE_D_MOVE_STATE_GROUP FOREIGN KEY 
	(
		D_MOVE_STATE_GROUP_KEY
	) REFERENCES D_MOVE_STATE_GROUP (
		D_MOVE_STATE_GROUP_KEY
	)
) ON [PRIMARY]
GO
CREATE TABLE DBO.D_PCR_SOURCE_GROUP (
	D_PCR_SOURCE_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK_D_PCR_SOURCE_GROUP PRIMARY KEY  CLUSTERED 
	(
		D_PCR_SOURCE_GROUP_KEY
	)  ON [PRIMARY ]
) ON [PRIMARY]
GO
CREATE TABLE DBO.D_RASH_LOC_GEN_GROUP (
	D_RASH_LOC_GEN_GROUP_KEY BIGINT NOT NULL ,
	CONSTRAINT PK_D_RASH_LOC_GEN_GROUP PRIMARY KEY  CLUSTERED 
	(
		D_RASH_LOC_GEN_GROUP_KEY
	)  ON [PRIMARY ]
) ON [PRIMARY]
GO


CREATE TABLE DBO.D_RASH_LOC_GEN (
	VAR_PAM_UID BIGINT NOT NULL ,
	D_RASH_LOC_GEN_KEY BIGINT NOT NULL ,
	SEQ_NBR INT NULL ,
	D_RASH_LOC_GEN_GROUP_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME           DATETIME  NULL,
	VALUE VARCHAR (250) NULL ,
	CONSTRAINT PK_D_RASH_LOC_GEN PRIMARY KEY  CLUSTERED 
	(
		D_RASH_LOC_GEN_KEY,
		VAR_PAM_UID
	)  ON [PRIMARY] ,
	CONSTRAINT FK_D_RASH_LOC_GEN_D_RASH_LOC_GEN_GROUP FOREIGN KEY 
	(
		D_RASH_LOC_GEN_GROUP_KEY
	) REFERENCES D_RASH_LOC_GEN_GROUP (
		D_RASH_LOC_GEN_GROUP_KEY
	)
) ON [PRIMARY]
GO

CREATE TABLE DBO.D_PCR_SOURCE (
	VAR_PAM_UID BIGINT NOT NULL ,
	D_PCR_SOURCE_KEY BIGINT NOT NULL ,
	SEQ_NBR INT NULL ,
	D_PCR_SOURCE_GROUP_KEY BIGINT NOT NULL ,
	LAST_CHG_TIME           DATETIME  NULL,
	VALUE VARCHAR (250) NULL ,
	CONSTRAINT PK_D_PCR_SOURCE PRIMARY KEY  CLUSTERED 
	(
		D_PCR_SOURCE_KEY,
		VAR_PAM_UID
	)  ON [PRIMARY] ,
	CONSTRAINT FK_D_PCR_SOURCE_D_PCR_SOURCE_GROUP FOREIGN KEY 
	(
		D_PCR_SOURCE_GROUP_KEY
	) REFERENCES D_PCR_SOURCE_GROUP (
		D_PCR_SOURCE_GROUP_KEY
	)
) ON [PRIMARY]
GO
CREATE TABLE DBO.D_VAR_PAM (
	D_VAR_PAM_KEY 			BIGINT NOT NULL,
	VAR_PAM_UID  			BIGINT NOT NULL,
	VACCINE_TYPE_2			VARCHAR(50)  NULL,
	VACCINE_MANUFACTURER_1		VARCHAR(50)  NULL,
	EPI_LINKED			VARCHAR(50)  NULL,
	PCR_TEST			VARCHAR(50)  NULL,
	VARICELLA_NO_VACCINE_REASON	VARCHAR(50)  NULL,
	SEROLOGY_TEST			VARCHAR(50)  NULL,
	DFA_TEST_RESULT			VARCHAR(50)  NULL,
	HEALTHCARE_WORKER		VARCHAR(50)  NULL,
	IGG_TEST_WHOLE_CELL_MFGR	VARCHAR(50)  NULL,
	PREVIOUS_DIAGNOSIS_AGE_UNIT	VARCHAR(50)  NULL,
	PREGNANT_TRIMESTER		VARCHAR(50)  NULL,
	PREVIOUS_DIAGNOSIS		VARCHAR(50)  NULL,
	LAB_TESTING_OTHER_SPECIFY	VARCHAR(50)  NULL,
	IGM_TEST_TYPE			VARCHAR(50)  NULL,
	FEVER_TEMPERATURE_UNIT		VARCHAR(50)  NULL,
	IGG_TEST			VARCHAR(50)  NULL,
	MEDICATION_NAME			VARCHAR(50)  NULL,
	VACCINE_MANUFACTURER_3		VARCHAR(50)  NULL,
	COMPLICATIONS_PNEUMONIA		VARCHAR(50)  NULL,
	DFA_TEST			VARCHAR(50)  NULL,
	VESICLES			VARCHAR(50)  NULL,
	VARICELLA_NO_2NDVACCINE_REASON	VARCHAR(50)  NULL,
	IGM_TEST			VARCHAR(50)  NULL,
	VACCINE_TYPE_4			VARCHAR(50)  NULL,
	COMPLICATIONS_CEREB_ATAXIA	VARCHAR(50)  NULL,
	FEVER				VARCHAR(50)  NULL,
	STRAIN_TYPE			VARCHAR(50)  NULL,
	LAB_TESTING_OTHER_RESULT	VARCHAR(50)  NULL,
	CROPS_WAVES			VARCHAR(50)  NULL,
	TREATED				VARCHAR(50)  NULL,
	RASH_LOCATION			VARCHAR(50)  NULL,
	PATIENT_VISIT_HC_PROVIDER	VARCHAR(50)  NULL,
	RASH_CRUST			VARCHAR(50)  NULL,
	TRANSMISSION_SETTING		VARCHAR(50)  NULL,
	CULTURE_TEST_RESULT		VARCHAR(50)  NULL,
	HEMORRHAGIC			VARCHAR(50)  NULL,
	CULTURE_TEST			VARCHAR(50)  NULL,
	VACCINE_TYPE_1			VARCHAR(50)  NULL,
	PCR_TEST_RESULT			VARCHAR(50)  NULL,
	LAB_TESTING_OTHER		VARCHAR(50)  NULL,
	COMPLICATIONS			VARCHAR(50)  NULL,
	COMPLICATIONS_PNEU_DIAG_BY	VARCHAR(50)  NULL,
	VACCINE_TYPE_5			VARCHAR(50)  NULL,
	IGG_TEST_TYPE			VARCHAR(50)  NULL,
	EPI_LINKED_CASE_TYPE		VARCHAR(50)  NULL,
	VACCINE_MANUFACTURER_4		VARCHAR(50)  NULL,
	MACULAR_PAPULAR			VARCHAR(50)  NULL,
	VACCINE_TYPE_3			VARCHAR(50)  NULL,
	PREVIOUS_DIAGNOSIS_BY		VARCHAR(50)  NULL,
	VESICULAR			VARCHAR(50)  NULL,
	VACCINE_MANUFACTURER_5		VARCHAR(50)  NULL,
	DEATH_VARICELLA			VARCHAR(50)  NULL,
	IGG_TEST_GP_ELISA_MFGR		VARCHAR(50)  NULL,
	VARICELLA_VACCINE		VARCHAR(50)  NULL,
	IGM_TEST_RESULT			VARCHAR(50)  NULL,
	IMMUNOCOMPROMISED		VARCHAR(50)  NULL,
	COMPLICATIONS_OTHER		VARCHAR(50)  NULL,
	ITCHY				VARCHAR(50)  NULL,
	PATIENT_BIRTH_COUNTRY		VARCHAR(50)  NULL,
	DEATH_AUTOPSY			VARCHAR(50)  NULL,
	COMPLICATIONS_ENCEPHALITIS	VARCHAR(50)  NULL,
	COMPLICATIONS_HEMORRHAGIC	VARCHAR(50)  NULL,
	COMPLICATIONS_SKIN_INFECTION	VARCHAR(50)  NULL,
	COMPLICATIONS_DEHYDRATION	VARCHAR(50)  NULL,
	VACCINE_MANUFACTURER_2		VARCHAR(50)  NULL,
	GENOTYPING_SENT_TO_CDC		VARCHAR(50)  NULL,
	STRAIN_IDENTIFICATION_SENT	VARCHAR(50)  NULL,
	IGG_TEST_CONVALESCENT_RESULT	VARCHAR(50)  NULL,
	IGG_TEST_ACUTE_RESULT		VARCHAR(50)  NULL,
	LAB_TESTING			VARCHAR(50)  NULL,
	PAPULES				VARCHAR(50)  NULL,
	SCABS				VARCHAR(50)  NULL,
	LESIONS_TOTAL			VARCHAR(50)  NULL,
	MACULES				VARCHAR(50)  NULL,
	IGG_TEST_ACUTE_DATE		DATETIME  NULL,
	VACCINE_DATE_4			DATETIME  NULL,
	PCR_TEST_DATE			DATETIME  NULL,
	VACCINE_DATE_2			DATETIME  NULL,
	MEDICATION_START_DATE		DATETIME  NULL,
	DFA_TEST_DATE			DATETIME  NULL,
	VACCINE_DATE_3			DATETIME  NULL,
	IGG_TEST_CONVALESCENT_DATE	DATETIME  NULL,
	MEDICATION_STOP_DATE		DATETIME  NULL,
	VACCINE_DATE_1			DATETIME  NULL,
	LAB_TESTING_OTHER_DATE		DATETIME  NULL,
	CULTURE_TEST_DATE		DATETIME  NULL,
	GENOTYPING_SENT_TO_CDC_DATE	DATETIME  NULL,
	FEVER_ONSET_DATE		DATETIME  NULL,
	RASH_ONSET_DATE			DATETIME  NULL,
	DEATH_VARICELLA_DATE		DATETIME  NULL,
	IGM_TEST_DATE			DATETIME  NULL,
	VACCINE_DATE_5			DATETIME  NULL,
	VARICELLA_VACCINE_DOSES_NUMBER	NUMERIC  NULL,
	FEVER_DURATION_DAYS		NUMERIC  NULL,
	PREVIOUS_DIAGNOSIS_AGE		NUMERIC  NULL,
	LESIONS_TOTAL_LT50		NUMERIC  NULL,
	VESICLES_NUMBER			NUMERIC  NULL,
	MACULES_NUMBER			NUMERIC  NULL,
	PAPULES_NUMBER			NUMERIC  NULL,
	PREGNANT_WEEKS			NUMERIC  NULL,
	RASH_CRUSTED_DAYS		NUMERIC  NULL,
	RASH_DURATION_DAYS		NUMERIC  NULL,
	FEVER_TEMPERATURE		NUMERIC  NULL,
	PCR_TEST_SOURCE_OTHER		VARCHAR(50)  NULL,
	VARICELLA_NO_2NDVACCINE_OTHER	VARCHAR(50)  NULL,
	VACCINE_LOT_5			VARCHAR(50)  NULL,
	RASH_LOCATION_DERMATOME		VARCHAR(50)  NULL,
	IGG_TEST_OTHER			VARCHAR(50)  NULL,
	VACCINE_LOT_4			VARCHAR(50)  NULL,
	VACCINE_LOT_1			VARCHAR(50)  NULL,
	DEATH_CAUSE			VARCHAR(50)  NULL,
	VARICELLA_NO_VACCINE_OTHER	VARCHAR(50)  NULL,
	IGG_TEST_ACUTE_VALUE		VARCHAR(50)  NULL,
	TRANSMISSION_SETTING_OTHER	VARCHAR(50)  NULL,
	IMMUNOCOMPROMISED_CONDITION	VARCHAR(50)  NULL,
	LAB_TESTING_OTHER_RESULT_VALUE	VARCHAR(50)  NULL,
	VACCINE_LOT_3			VARCHAR(50)  NULL,
	MEDICATION_NAME_OTHER		VARCHAR(50)  NULL,
	PREVIOUS_DIAGNOSIS_BY_OTHER	VARCHAR(50)  NULL,
	RASH_LOCATION_OTHER		VARCHAR(50)  NULL,
	IGG_TEST_CONVALESCENT_VALUE	VARCHAR(50)  NULL,
	IGM_TEST_TYPE_OTHER		VARCHAR(50)  NULL,
	PCR_TEST_RESULT_OTHER		VARCHAR(50)  NULL,
	VACCINE_LOT_2			VARCHAR(50)  NULL,
	IGM_TEST_RESULT_VALUE		VARCHAR(50)  NULL,
	LAST_CHG_TIME           	DATETIME  NULL,
	COMPLICATIONS_OTHER_SPECIFY	VARCHAR(50)  NULL,
	CONSTRAINT PK__D_VAR_PAM PRIMARY KEY  CLUSTERED 
	(
		D_VAR_PAM_KEY
	)  ON [PRIMARY]
) ON [PRIMARY]
GO
CREATE TABLE DBO.F_TB_PAM (
	PERSON_KEY 			BIGINT NOT NULL ,
	D_TB_PAM_KEY 			BIGINT NOT NULL ,
	PROVIDER_KEY 			BIGINT NOT NULL ,
	D_MOVE_STATE_GROUP_KEY 		BIGINT NOT NULL ,
	D_HC_PROV_TY_3_GROUP_KEY 	BIGINT NOT NULL ,
	D_DISEASE_SITE_GROUP_KEY 	BIGINT NOT NULL ,
	D_ADDL_RISK_GROUP_KEY 		BIGINT NOT NULL ,
	D_MOVE_CNTY_GROUP_KEY 		BIGINT NOT NULL ,
	D_GT_12_REAS_GROUP_KEY 		BIGINT NOT NULL ,
	D_MOVE_CNTRY_GROUP_KEY 		BIGINT NOT NULL ,
	D_MOVED_WHERE_GROUP_KEY 	BIGINT NOT NULL ,
	D_OUT_OF_CNTRY_GROUP_KEY 	BIGINT NOT NULL ,
	D_SMR_EXAM_TY_GROUP_KEY 	BIGINT NOT NULL ,
	ADD_DATE_KEY			BIGINT NOT NULL,
  	LAST_CHG_DATE_KEY		BIGINT NOT NULL,
  	INVESTIGATION_KEY 		BIGINT NOT NULL ,
	HOSPITAL_KEY 			BIGINT NOT NULL,
	ORG_AS_REPORTER_KEY 		BIGINT NOT NULL,
	PERSON_AS_REPORTER_KEY 		BIGINT NOT NULL,
	PHYSICIAN_KEY 			BIGINT NOT NULL,
	
	   CONSTRAINT FK_F_TB_PAM_D_TB_PAM FOREIGN KEY 
	       (
	           D_TB_PAM_KEY
	       ) REFERENCES D_TB_PAM (
	           D_TB_PAM_KEY
	       ),
	       CONSTRAINT FK_F_TB_PAM_D_MOVE_STATE_GRP FOREIGN KEY 
	           (
	               D_MOVE_STATE_GROUP_KEY
	           ) REFERENCES D_MOVE_STATE_GROUP (
	               D_MOVE_STATE_GROUP_KEY
	       ),
	       CONSTRAINT FK_F_TB_PAM_D_HC_PROV_TY3_GRP FOREIGN KEY 
	           (
	               D_HC_PROV_TY_3_GROUP_KEY
	           ) REFERENCES D_HC_PROV_TY_3_GROUP (
	               D_HC_PROV_TY_3_GROUP_KEY
	       ),
	       CONSTRAINT FK_F_TB_PAM_D_DIS_SITE_GRP FOREIGN KEY 
	           (
	               D_DISEASE_SITE_GROUP_KEY
	           ) REFERENCES D_DISEASE_SITE_GROUP (
	               D_DISEASE_SITE_GROUP_KEY
	       ),
	       CONSTRAINT FK_F_TB_PAM_D_ADDL_RISK_GRP FOREIGN KEY 
	           (
	               D_ADDL_RISK_GROUP_KEY
	           ) REFERENCES D_ADDL_RISK_GROUP (
	               D_ADDL_RISK_GROUP_KEY
	       ),
	       CONSTRAINT FK_F_TB_PAM_D_MOVE_CNTY_GRP FOREIGN KEY 
	           (
	               D_MOVE_CNTY_GROUP_KEY
	           ) REFERENCES D_MOVE_CNTY_GROUP (
	               D_MOVE_CNTY_GROUP_KEY
	       ),
	       CONSTRAINT FK_F_TB_PAM_D_GT_12_REAS_GRP FOREIGN KEY 
	           (
	               D_GT_12_REAS_GROUP_KEY
	           ) REFERENCES D_GT_12_REAS_GROUP (
	               D_GT_12_REAS_GROUP_KEY
	       ),
	       CONSTRAINT FK_F_TB_PAM_D_MOVED_WHERE_GRP FOREIGN KEY 
	           (
	               D_MOVED_WHERE_GROUP_KEY
	           ) REFERENCES D_MOVED_WHERE_GROUP (
	               D_MOVED_WHERE_GROUP_KEY
	       ),
	       CONSTRAINT FK_F_TB_PAM_D_SMR_EXAM_TY_GRP FOREIGN KEY 
	           (
	               D_SMR_EXAM_TY_GROUP_KEY
	           ) REFERENCES D_SMR_EXAM_TY_GROUP (
	               D_SMR_EXAM_TY_GROUP_KEY
	       ),
	       CONSTRAINT FK_F_TB_PAM_D_MOVE_CNTRY_GRP FOREIGN KEY 
	           (
	               D_MOVE_CNTRY_GROUP_KEY
	           ) REFERENCES D_MOVE_CNTRY_GROUP (
	               D_MOVE_CNTRY_GROUP_KEY
	       ),
	       CONSTRAINT FK_F_TB_PAM_D_OUT_OF_CTRY_GRP FOREIGN KEY 
	           (
	               D_OUT_OF_CNTRY_GROUP_KEY
	           ) REFERENCES D_OUT_OF_CNTRY_GROUP (
	               D_OUT_OF_CNTRY_GROUP_KEY
	       ),
	       CONSTRAINT FK_F_TB_PAM_PERSON FOREIGN KEY 
	       (
	           PERSON_KEY
	       ) REFERENCES D_PATIENT(
	           PATIENT_KEY
	       ),
	       CONSTRAINT FK_F_TB_PAM_PROVIDER FOREIGN KEY 
	           (
	               PROVIDER_KEY
	           ) REFERENCES D_PROVIDER (
	               PROVIDER_KEY
	           ),
	       
	       CONSTRAINT FK_F_TB_PAM_HOSPITAL FOREIGN KEY 
	           (
	               HOSPITAL_KEY
	           ) REFERENCES D_ORGANIZATION (
	               ORGANIZATION_KEY
	           ),
	       CONSTRAINT FK_F_TB_PAM_ORG_REPORTER FOREIGN KEY 
	           (
	               ORG_AS_REPORTER_KEY
	           ) REFERENCES D_ORGANIZATION (
	               ORGANIZATION_KEY
	           ),
	       CONSTRAINT FK_F_TB_PAM_PERSON_REPORTER FOREIGN KEY 
	           (
	               PERSON_AS_REPORTER_KEY
	           ) REFERENCES D_PROVIDER (
	               PROVIDER_KEY
	           ),    
	           
	       CONSTRAINT FK_F_TB_PAM_PHYSICIAN FOREIGN KEY 
	           (
	               PHYSICIAN_KEY
	           ) REFERENCES D_PROVIDER (
	               PROVIDER_KEY
	       )


) ON [PRIMARY]
GO
CREATE TABLE DBO.F_VAR_PAM (
	PERSON_KEY 			BIGINT NOT NULL ,
	D_VAR_PAM_KEY 			BIGINT NOT NULL ,
	PROVIDER_KEY 			BIGINT NOT NULL ,
	D_PCR_SOURCE_GROUP_KEY 		BIGINT NOT NULL,
	D_RASH_LOC_GEN_GROUP_KEY 	BIGINT NOT NULL,
	HOSPITAL_KEY 			BIGINT NOT NULL,
	ORG_AS_REPORTER_KEY 		BIGINT NOT NULL,
	PERSON_AS_REPORTER_KEY 		BIGINT NOT NULL,
	PHYSICIAN_KEY 			BIGINT NOT NULL,
	ADD_DATE_KEY			BIGINT NOT NULL,
  	LAST_CHG_DATE_KEY		BIGINT NOT NULL,
  	INVESTIGATION_KEY 		BIGINT NOT NULL ,
	CONSTRAINT FK_F_PCR_SOURCE_GROUP FOREIGN KEY 
		(
			D_PCR_SOURCE_GROUP_KEY
		) REFERENCES D_PCR_SOURCE_GROUP (
			D_PCR_SOURCE_GROUP_KEY
	),
	CONSTRAINT FK_F_RASH_LOC_GEN_GROUP FOREIGN KEY 
		(
			D_RASH_LOC_GEN_GROUP_KEY
		) REFERENCES D_RASH_LOC_GEN_GROUP (
			D_RASH_LOC_GEN_GROUP_KEY
	),
	CONSTRAINT FK_F_VAR_PAM_D_VAR_PAM FOREIGN KEY 
	(
		D_VAR_PAM_KEY
	) REFERENCES D_VAR_PAM (
		D_VAR_PAM_KEY
	),
	CONSTRAINT FK_F_VAR_PAM_PERSON FOREIGN KEY 
	(
		PERSON_KEY
	) REFERENCES D_PATIENT (
		PATIENT_KEY
	),
	CONSTRAINT FK_F_VAR_PAM_PERSON_REPORTER FOREIGN KEY 
	(
		PERSON_AS_REPORTER_KEY
	) REFERENCES D_PROVIDER (
		PROVIDER_KEY
	),
	CONSTRAINT FK_F_VAR_PAM_HOSPITAL FOREIGN KEY 
	(
		HOSPITAL_KEY
	) REFERENCES D_ORGANIZATION (
		ORGANIZATION_KEY
	),
	CONSTRAINT FK_F_VAR_PAM_ORG_REPORTER FOREIGN KEY 
	(
		ORG_AS_REPORTER_KEY
	) REFERENCES D_ORGANIZATION (
		ORGANIZATION_KEY
	)
) ON [PRIMARY]
GO

CREATE TABLE dbo.SUMMARY_CASE_GROUP (
       SUMMARY_CASE_SRC_KEY bigint NOT NULL,
       SUMMARY_CASE_SRC_TXT varchar(100) NULL
)
go
ALTER TABLE dbo.SUMMARY_CASE_GROUP
       ADD PRIMARY KEY (SUMMARY_CASE_SRC_KEY)
go

CREATE TABLE dbo.SUMMARY_REPORT_CASE (
       SUM_RPT_CASE_COUNT   	numeric NULL,
       SUM_RPT_CASE_COMMENTS	varchar(2000) NULL,
       INVESTIGATION_KEY    	bigint NOT NULL,
       SUM_RPT_CASE_STATUS  	varchar(20) NULL,
       SUMMARY_CASE_SRC_KEY 	bigint NOT NULL,
       NOTIFICATION_SEND_DT_KEY bigint NOT NULL,
       COUNTY_CD varchar 	(50) NOT NULL ,
       COUNTY_NAME varchar 	(300) NOT NULL ,
       STATE_CD  varchar 	(50)  NOT NULL ,
       CONDITION_KEY        	bigint NOT NULL,
       LDF_GROUP_KEY        	bigint NOT NULL,
       LAST_UPDATE_DT_KEY  	bigint NULL
)
go
ALTER TABLE dbo.SUMMARY_REPORT_CASE
       ADD PRIMARY KEY (INVESTIGATION_KEY, SUMMARY_CASE_SRC_KEY, 
              NOTIFICATION_SEND_DT_KEY, CONDITION_KEY, 
              LDF_GROUP_KEY)
go
ALTER TABLE dbo.SUMMARY_REPORT_CASE
       ADD FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION
                             ON DELETE NO ACTION
go
ALTER TABLE dbo.SUMMARY_REPORT_CASE
       ADD FOREIGN KEY (SUMMARY_CASE_SRC_KEY)
                             REFERENCES SUMMARY_CASE_GROUP
                             ON DELETE NO ACTION
go
ALTER TABLE dbo.SUMMARY_REPORT_CASE
       ADD FOREIGN KEY (NOTIFICATION_SEND_DT_KEY)
                             REFERENCES RDB_DATE
                            ON DELETE NO ACTION
go
ALTER TABLE dbo.SUMMARY_REPORT_CASE
       ADD FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION
                             ON DELETE NO ACTION
go

ALTER TABLE dbo.SUMMARY_REPORT_CASE
       ADD FOREIGN KEY (LDF_GROUP_KEY)
                             REFERENCES LDF_GROUP
                           ON DELETE NO ACTION
go

CREATE TABLE dbo.NOTIFICATION (
       NOTIFICATION_STATUS  varchar(20) NULL,
       NOTIFICATION_COMMENTS varchar(1000) NULL,
       NOTIFICATION_KEY     BIGINT NOT NULL,
       NOTIFICATION_LOCAL_ID varchar(50) NULL,
       NOTIFICATION_SUBMITTED_BY numeric NULL
)
go


ALTER TABLE dbo.NOTIFICATION
       ADD PRIMARY KEY (NOTIFICATION_KEY)
go


CREATE TABLE dbo.NOTIFICATION_EVENT (
       PATIENT_KEY          BIGINT NOT NULL,
       NOTIFICATION_SENT_DT_KEY BIGINT NOT NULL,
       NOTIFICATION_SUBMIT_DT_KEY BIGINT NOT NULL,
       NOTIFICATION_KEY     BIGINT NOT NULL,
       COUNT                numeric NULL,
       INVESTIGATION_KEY    BIGINT NOT NULL,
       CONDITION_KEY        BIGINT NOT NULL
)
go


ALTER TABLE dbo.NOTIFICATION_EVENT
       ADD PRIMARY KEY (PATIENT_KEY, NOTIFICATION_SENT_DT_KEY, 
              NOTIFICATION_SUBMIT_DT_KEY, INVESTIGATION_KEY, 
              CONDITION_KEY, NOTIFICATION_KEY)
go

ALTER TABLE dbo.NOTIFICATION_EVENT
       ADD FOREIGN KEY (NOTIFICATION_SENT_DT_KEY)
                             REFERENCES RDB_DATE
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.NOTIFICATION_EVENT
       ADD FOREIGN KEY (PATIENT_KEY)
                             REFERENCES D_PATIENT 
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.NOTIFICATION_EVENT
       ADD FOREIGN KEY (INVESTIGATION_KEY)
                             REFERENCES INVESTIGATION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.NOTIFICATION_EVENT
       ADD FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.NOTIFICATION_EVENT
       ADD FOREIGN KEY (NOTIFICATION_SUBMIT_DT_KEY)
                             REFERENCES RDB_DATE
                             ON DELETE NO ACTION
go


ALTER TABLE dbo.NOTIFICATION_EVENT
       ADD FOREIGN KEY (NOTIFICATION_KEY)
                             REFERENCES NOTIFICATION
                             ON DELETE NO ACTION
go







CREATE TABLE DBO.TREATMENT (
       TREATMENT_KEY        BIGINT NOT NULL,
       TREATMENT_UID        BIGINT NULL,
       TREATMENT_LOCAL_ID   VARCHAR(50) NULL,
       TREATMENT_NM         VARCHAR(150) NULL,
       TREATMENT_DRUG       VARCHAR(50) NULL,
       TREATMENT_DOSAGE_STRENGTH VARCHAR(20) NULL,
       TREATMENT_DOSAGE_STRENGTH_UNIT VARCHAR(20) NULL,
       TREATMENT_FREQUENCY  VARCHAR(20) NULL,
       TREATMENT_DURATION   VARCHAR(10) NULL,
       TREATMENT_DURATION_UNIT VARCHAR(20) NULL,
       TREATMENT_COMMENTS   VARCHAR(1000) NULL,
       TREATMENT_ROUTE      VARCHAR(25) NULL,
       CUSTOM_TREATMENT     VARCHAR(100) NULL,
       TREATMENT_SHARED_IND VARCHAR(50) NULL,
       TREATMENT_OID        BIGINT NULL,
       RECORD_STATUS_CD VARCHAR(8) NOT NULL,
       CONSTRAINT CHK_TREATMENT_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
)

go



ALTER TABLE TREATMENT
       ADD   PRIMARY KEY (TREATMENT_KEY) 
       
go       


CREATE TABLE DBO.TREATMENT_EVENT (
       TREATMENT_DT_KEY     BIGINT NOT NULL,
       TREATMENT_PROVIDING_ORG_KEY BIGINT NOT NULL,
       PATIENT_KEY          BIGINT NOT NULL,
       TREATMENT_COUNT      NUMERIC NULL,
       TREATMENT_KEY        BIGINT NOT NULL,
       MORB_RPT_KEY         BIGINT NOT NULL,
       TREATMENT_PHYSICIAN_KEY BIGINT NOT NULL,
       INVESTIGATION_KEY    BIGINT NOT NULL,
       CONDITION_KEY        BIGINT NOT NULL,
       LDF_GROUP_KEY        BIGINT NOT NULL,
       RECORD_STATUS_CD VARCHAR(8) NOT NULL,
       CONSTRAINT CHK_TRE_EVENT_RECORD_STATUS CHECK (RECORD_STATUS_CD IN ('ACTIVE','INACTIVE'))
)

go


ALTER TABLE TREATMENT_EVENT
       ADD PRIMARY KEY (TREATMENT_DT_KEY, 
              TREATMENT_PROVIDING_ORG_KEY, PATIENT_KEY, TREATMENT_KEY, 
              MORB_RPT_KEY, TREATMENT_PHYSICIAN_KEY, 
              INVESTIGATION_KEY, CONDITION_KEY,LDF_GROUP_KEY  ) 
              
go              




CREATE TABLE DBO.LAB_RESULT_GROUP (
       LAB_RESULT_GRP_KEY   BIGINT NOT NULL
)

go

CREATE TABLE DBO.LAB_RESULT_CONDITION (
       LAB_RESULT_GRP_KEY   BIGINT NOT NULL,
       CONDITION_KEY        BIGINT NULL
)

go

ALTER TABLE LAB_RESULT_CONDITION
       ADD  PRIMARY KEY (LAB_RESULT_GRP_KEY) 
       
go

ALTER TABLE LAB_RESULT_GROUP
       ADD PRIMARY KEY (LAB_RESULT_GRP_KEY)

go       


                          

ALTER TABLE LAB_RESULT_CONDITION
       ADD   FOREIGN KEY (CONDITION_KEY)
                             REFERENCES CONDITION   

go



ALTER TABLE LAB_RESULT_CONDITION
       ADD   FOREIGN KEY (LAB_RESULT_GRP_KEY)
                             REFERENCES LAB_RESULT_GROUP   

go








CREATE TABLE DBO.SR100(
	LOCAL_ID 				VARCHAR (50)  NOT NULL ,
	MMWRWK 					NUMERIC  NOT NULL ,
	MMWRYR 					NUMERIC  NOT NULL ,
	NBR_CASES 				NUMERIC(8,0) NULL ,
	CONDITION_CD 				VARCHAR (50)  NOT NULL ,
	CONDITION 				VARCHAR (300)  NOT NULL ,
	COUNTY_CD 				VARCHAR (50) NOT NULL ,
	COUNTY_NAME 				VARCHAR (300) NOT NULL ,
	STATE_CD 				VARCHAR (50)  NOT NULL ,
	RPT_SOURCE 				VARCHAR (100)  NULL ,
	RPT_SOURCE_DESC 			VARCHAR (300)  NULL ,
	DATE_REPORTED 				DATETIME NOT NULL ,
	MONTH_REPORTED 				VARCHAR (20)  NOT NULL ,
	NOTIF_CREATE_DATE 			DATETIME NULL ,
        NOTIF_CREATE_MONTH 			VARCHAR (20)  NULL ,
        NOTIF_CREATE_YEAR 			NUMERIC (4,0) NULL ,
	REPORT_COMMENTS 			VARCHAR (2000)  NULL,
        DATE_ADDED 				DATETIME NOT NULL ,
        ADD_USER_NAME 				VARCHAR (300)  NOT NULL,
        INVESTIGATION_KEY 			BIGINT NOT NULL
) 
GO


CREATE TABLE dbo.MORBIDITY_REPORT_DATAMART(
	MORBIDITY_REPORT_KEY BIGINT NULL,
	MORBIDITY_REPORT_LOCAL_ID varchar(50) NULL,
	PATIENT_LOCAL_ID varchar(50) NULL,
	PATIENT_GENERAL_COMMENTS varchar(2000) NULL,
	PATIENT_FIRST_NAME varchar(50) NULL,
	PATIENT_MIDDLE_NAME varchar(50) NULL,
	PATIENT_LAST_NAME varchar(50) NULL,
	PATIENT_NAME_SUFFIX varchar(300) NULL,
	PATIENT_STREET_ADDRESS_1 varchar(100) NULL,
	PATIENT_STREET_ADDRESS_2 varchar(100) NULL,
	PATIENT_CITY varchar(100) NULL,
	PATIENT_STATE varchar(100) NULL,
	PATIENT_ZIP varchar(20) NULL,
	PATIENT_COUNTY varchar(300) NULL,
	PATIENT_COUNTRY varchar(300) NULL,
	PATIENT_PHONE_NUMBER_HOME varchar(50) NULL,
	PATIENT_PHONE_EXT_HOME varchar(50) NULL,
	PATIENT_PHONE_NUMBER_WORK varchar(50) NULL,
	PATIENT_PHONE_EXT_WORK varchar(50) NULL,
	PATIENT_DOB datetime NULL,
	AGE_REPORTED numeric(19, 0) NULL,
	AGE_REPORTED_UNIT varchar(300) NULL,
	PATIENT_CURRENT_SEX varchar(50) NULL,
	PATIENT_DECEASED_INDICATOR varchar(20) NULL,
	PATIENT_DECEASED_DATE datetime NULL,
	PATIENT_MARITAL_STATUS varchar(100) NULL,
	PATIENT_SSN varchar(20) NULL,
	PATIENT_ETHNICITY varchar(100) NULL,
	RACE_CALCULATED varchar(4000) NULL,
	RACE_CALCULATED_DETAILS varchar(500) NULL,
	CONDITION_NAME varchar(300) NULL,
	PROGRAM_AREA_DESCRIPTION varchar(100) NULL,
	JURISDICTION_NAME varchar(100) NULL,
	MORBIDITY_REPORT_TYPE varchar(300) NULL,
	DELIVERY_METHOD varchar(300) NULL,
	MORBIDITY_REPORT_DATE datetime NULL,
	PH_RECEIVE_DT datetime NULL,
	REPORT_FAC_NAME varchar(300) NULL,
	REPORT_FAC_STREET_ADDR_1 varchar(100) NULL,
	REPORT_FAC_STREET_ADDR_2 varchar(100) NULL,
	REPORT_FAC_CITY varchar(100) NULL,
	REPORT_FAC_STATE varchar(100) NULL,
	REPORT_FAC_ZIP varchar(20) NULL,
	REPORT_FAC_PHONE varchar(50) NULL,
	REPORT_FAC_PHONE_EXT varchar(50) NULL,
	PROVIDER_FIRST_NAME varchar(50) NULL,
	PROVIDER_LAST_NAME varchar(50) NULL,
	PROVIDER_STREET_ADDR_1 varchar(100) NULL,
	PROVIDER_STREET_ADDR_2 varchar(100) NULL,
	PROVIDER_CITY varchar(100) NULL,
	PROVIDER_STATE varchar(100) NULL,
	PROVIDER_ZIP varchar(20) NULL,
	PROVIDER_PHONE varchar(50) NULL,
	PROVIDER_PHONE_EXT varchar(50) NULL,
	REPORTER_FIRST_NAME varchar(50) NULL,
	REPORTER_LAST_NAME varchar(50) NULL,
	REPORTER_STREET_ADDR_1 varchar(100) NULL,
	REPORTER_STREET_ADDR_2 varchar(100) NULL,
	REPORTER_CITY varchar(100) NULL,
	REPORTER_STATE varchar(100) NULL,
	REPORTER_ZIP varchar(20) NULL,
	REPORTER_PHONE varchar(50) NULL,
	REPORTER_PHONE_EXT varchar(50) NULL,
	ILLNESS_ONSET_DATE datetime NULL,
	DIAGNOSIS_DATE datetime NULL,
	DIE_FROM_ILLNESS varchar(300) NULL,
	HOSPITALIZED varchar(300) NULL,
	HOSPITAL_ADMIN_DATE datetime NULL,
	HOSPITAL_DISCHARGE_DATE datetime NULL,
	HOSPITAL_FAC_NAME varchar(100) NULL,
	HOSPITAL_FAC_STREET_ADDR_1 varchar(100) NULL,
	HOSPITAL_FAC_STREET_ADDR_2 varchar(100) NULL,
	HOSPITAL_FAC_CITY varchar(100) NULL,
	HOSPITAL_FAC_STATE varchar(100) NULL,
	HOSPITAL_FAC_ZIP varchar(20) NULL,
	HOSPITAL_FAC_PHONE varchar(50) NULL,
	HOSPITAL_FAC_PHONE_EXT varchar(50) NULL,
	PREGNANT varchar(50) NULL,
	FOOD_HANDLER varchar(50) NULL,
	DAYCARE varchar(50) NULL,
	NURSING_HOME varchar(50) NULL,
	HEALTHCARE_ORGANIZATION varchar(50) NULL,
	FOOD_WATERBORNE_ILLNESS varchar(50) NULL,
	OTHER_EPI varchar(2000) NULL,
	SPECIMEN_COLLECTION_DATE_1 datetime NULL,
	LAB_REPORT_DATE_1 datetime NULL,
	RESULTED_TEST_NAME_1 varchar(2000) NULL,
	SPECIMEN_SOURCE_1 varchar(2000) NULL,
	RESULTED_TEST_RESULT_1 varchar(2000) NULL,
	RESULTED_TEST_NUMERIC_CONCAT_1 varchar(2000) NULL,
	RESULTED_TEST_TEXT_RESULT_1 varchar(2000) NULL,
	LAB_RESULT_COMMENTS_1 varchar(2000) NULL,
	SPECIMEN_COLLECTION_DATE_2 datetime NULL,
	LAB_REPORT_DATE_2 datetime NULL,
	RESULTED_TEST_NAME_2 varchar(2000) NULL,
	SPECIMEN_SOURCE_2 varchar(2000) NULL,
	RESULTED_TEST_RESULT_2 varchar(2000) NULL,
	RESULTED_TEST_NUMERIC_CONCAT_2 varchar(2000) NULL,
	RESULTED_TEST_TEXT_RESULT_2 varchar(2000) NULL,
	LAB_RESULT_COMMENTS_2 varchar(2000) NULL,
	SPECIMEN_COLLECTION_DATE_3 datetime NULL,
	LAB_REPORT_DATE_3 datetime NULL,
	RESULTED_TEST_NAME_3 varchar(2000) NULL,
	SPECIMEN_SOURCE_3 varchar(2000) NULL,
	RESULTED_TEST_RESULT_3 varchar(2000) NULL,
	RESULTED_TEST_NUMERIC_CONCAT_3 varchar(2000) NULL,
	RESULTED_TEST_TEXT_RESULT_3 varchar(2000) NULL,
	LAB_RESULT_COMMENTS_3 varchar(2000) NULL,
	LAB_GT3_CREATED_IND varchar(3) NULL,
	TREATMENT_DATE_1 datetime NULL,
	TREATMENT_NAME_1 varchar(1000) NULL,
	TREATMENT_COMMENTS_1 varchar(1000) NULL,
	TREATMENT_CUSTOM_NAME_1 varchar(1000) NULL,
	TREATMENT_DATE_2 datetime NULL,
	TREATMENT_NAME_2 varchar(1000) NULL,
	TREATMENT_COMMENTS_2 varchar(1000) NULL,
	TREATMENT_CUSTOM_NAME_2 varchar(1000) NULL,
	TREATMENT_DATE_3 datetime NULL,
	TREATMENT_NAME_3 varchar(1000) NULL,
	TREATMENT_COMMENTS_3 varchar(1000) NULL,
	TREATMENT_CUSTOM_NAME_3 varchar(1000) NULL,
	TREATMENT_GT3_CREATED_IND varchar(3) NULL,
	MORB_RPT_COMMENTS varchar(2000) NULL,
	INVESTIGATION_KEY BIGINT NULL,
	INVESTIGATION_CREATED_IND varchar(3) NULL,
	CASE_STATUS varchar(50) NULL,
	REPORTING_FACILITY_UID BIGINT NULL,
	PROGRAM_JURISDICTION_OID numeric(19, 0) NULL,
	MORB_REPORT_CREATE_DATE datetime NULL,
	MORB_REPORT_CREATED_BY varchar(100) NULL,
	MORB_REPORT_LAST_UPDATED_DATE datetime NULL,
	MORB_REPORT_LAST_UPDATED_BY varchar(100) NULL,
	EXTERNAL_IND varchar(50) NULL
) 
GO



CREATE TABLE DBO.TB_DATAMART (
CALC_5_YEAR_AGE_GROUP         	NUMERIC NULL, 
CALC_10_YEAR_AGE_GROUP        	NUMERIC NULL, 
PATIENT_NAME_SUFFIX           	VARCHAR (50) NULL, 
PATIENT_STATE                 	VARCHAR (50) NULL, 
PATIENT_COUNTY                	VARCHAR (50) NULL, 
PATIENT_COUNTRY               	VARCHAR (50) NULL, 
PATIENT_WITHIN_CITY_LIMITS    	VARCHAR (50) NULL, 
AGE_REPORTED_UNIT             	VARCHAR (50) NULL, 
PATIENT_BIRTH_SEX             	VARCHAR (50) NULL, 
PATIENT_CURRENT_SEX           	VARCHAR (50) NULL, 
PATIENT_DECEASED_INDICATOR    	VARCHAR (50) NULL, 
PATIENT_MARITAL_STATUS        	VARCHAR (50) NULL, 
PATIENT_ETHNICITY             	VARCHAR (50) NULL, 
RACE_CALCULATED               	VARCHAR (4000) NULL, 
RACE_CALC_DETAILS             	VARCHAR (200) NULL, 
RACE_ASIAN_1                  	VARCHAR (50) NULL, 
RACE_ASIAN_2                  	VARCHAR (50) NULL, 
RACE_ASIAN_3                  	VARCHAR (50) NULL, 
RACE_ASIAN_GT3_IND            	VARCHAR (50) NULL, 
RACE_ASIAN_ALL                	VARCHAR (4000) NULL, 
RACE_NAT_HI_1                 	VARCHAR (50) NULL, 
RACE_NAT_HI_2                 	VARCHAR (50) NULL, 
RACE_NAT_HI_3                 	VARCHAR (50) NULL, 
RACE_NAT_HI_GT3_IND           	VARCHAR (50) NULL, 
RACE_NAT_HI_ALL               	VARCHAR (4000) NULL, 
JURISDICTION_NAME             	VARCHAR (50) NULL, 
PROGRAM_AREA_DESCRIPTION      	VARCHAR (50) NULL, 
INVESTIGATION_STATUS          	VARCHAR (50) NULL, 
LINK_REASON_1                 	VARCHAR (50) NULL, 
LINK_REASON_2                 	VARCHAR (50) NULL, 
PREVIOUS_DIAGNOSIS_IND        	VARCHAR (50) NULL, 
US_BORN_IND                   	VARCHAR (50) NULL, 
PATIENT_BIRTH_COUNTRY         	VARCHAR (50) NULL, 
PATIENT_OUTSIDE_US_GT_2_MONTHS 	VARCHAR (50) NULL, 
OUT_OF_CNTRY_1                	VARCHAR (50) NULL, 
OUT_OF_CNTRY_2                	VARCHAR (50) NULL, 
OUT_OF_CNTRY_3                	VARCHAR (50) NULL, 
OUT_OF_CNTRY_GT3_IND          	VARCHAR (50) NULL, 
OUT_OF_CNTRY_ALL              	VARCHAR (4000) NULL, 
PRIMARY_GUARD_1_BIRTH_COUNTRY 	VARCHAR (50) NULL, 
PRIMARY_GUARD_2_BIRTH_COUNTRY 	VARCHAR (50) NULL, 
STATUS_AT_DIAGNOSIS           	VARCHAR (50) NULL, 
DISEASE_SITE_1                	VARCHAR (50) NULL, 
DISEASE_SITE_2                	VARCHAR (50) NULL, 
DISEASE_SITE_3                	VARCHAR (50) NULL, 
DISEASE_SITE_GT3_IND          	VARCHAR (50) NULL, 
DISEASE_SITE_ALL              	VARCHAR (4000) NULL, 
CALC_DISEASE_SITE             	VARCHAR (50) NULL, 
SPUTUM_SMEAR_RESULT           	VARCHAR (50) NULL, 
SPUTUM_CULTURE_RESULT         	VARCHAR (50) NULL, 
SPUTUM_CULT_RPT_LAB_TY        	VARCHAR (50) NULL, 
SMR_PATH_CYTO_RESULT          	VARCHAR (50) NULL, 
SMR_PATH_CYTO_SITE            	VARCHAR (50) NULL, 
SMR_EXAM_TY_1                 	VARCHAR (50) NULL, 
SMR_EXAM_TY_2                 	VARCHAR (50) NULL, 
SMR_EXAM_TY_3                 	VARCHAR (50) NULL, 
SMR_EXAM_TY_GT3_IND           	VARCHAR (50) NULL, 
SMR_EXAM_TY_ALL               	VARCHAR (4000) NULL, 
CULT_TISSUE_RESULT            	VARCHAR (50) NULL, 
CULT_TISSUE_SITE              	VARCHAR (50) NULL, 
CULT_TISSUE_RESULT_RPT_LAB_TY 	VARCHAR (50) NULL, 
NAA_RESULT                    	VARCHAR (50) NULL, 
NAA_SPEC_IS_SPUTUM_IND        	VARCHAR (50) NULL, 
NAA_SPEC_NOT_SPUTUM           	VARCHAR (50) NULL, 
NAA_RPT_LAB_TY                	VARCHAR (50) NULL, 
CHEST_XRAY_RESULT             	VARCHAR (50) NULL, 
CHEST_XRAY_CAVITY_EVIDENCE    	VARCHAR (50) NULL, 
CHEST_XRAY_MILIARY_EVIDENCE   	VARCHAR (50) NULL, 
CT_SCAN_RESULT                	VARCHAR (50) NULL, 
CT_SCAN_CAVITY_EVIDENCE       	VARCHAR (50) NULL, 
CT_SCAN_MILIARY_EVIDENCE      	VARCHAR (50) NULL, 
TST_RESULT                    	VARCHAR (50) NULL, 
IGRA_RESULT                   	VARCHAR (50) NULL, 
PRIMARY_REASON_EVALUATED      	VARCHAR (50) NULL, 
HOMELESS_IND                  	VARCHAR (50) NULL, 
CORRECTIONAL_FACIL_RESIDENT   	VARCHAR (50) NULL, 
CORRECTIONAL_FACIL_TY         	VARCHAR (50) NULL, 
CORRECTIONAL_FACIL_CUSTODY_IND	VARCHAR (50) NULL, 
LONGTERM_CARE_FACIL_RESIDENT  	VARCHAR (50) NULL, 
LONGTERM_CARE_FACIL_TY        	VARCHAR (50) NULL, 
OCCUPATION_RISK               	VARCHAR (50) NULL, 
INJECT_DRUG_USE_PAST_YEAR     	VARCHAR (50) NULL, 
NONINJECT_DRUG_USE_PAST_YEAR  	VARCHAR (50) NULL, 
ADDL_RISK_1                   	VARCHAR (50) NULL, 
EXCESS_ALCOHOL_USE_PAST_YEAR  	VARCHAR (50) NULL, 
ADDL_RISK_2                   	VARCHAR (50) NULL, 
ADDL_RISK_GT3_IND             	VARCHAR (50) NULL, 
ADDL_RISK_3                   	VARCHAR (50) NULL, 
ADDL_RISK_ALL                 	VARCHAR (4000) NULL, 
IMMIGRATION_STATUS_AT_US_ENTRY 	VARCHAR (50) NULL, 
INIT_REGIMEN_ISONIAZID        	VARCHAR (50) NULL, 
INIT_REGIMEN_RIFAMPIN         	VARCHAR (50) NULL, 
INIT_REGIMEN_PYRAZINAMIDE     	VARCHAR (50) NULL, 
INIT_REGIMEN_ETHAMBUTOL       	VARCHAR (50) NULL, 
INIT_REGIMEN_STREPTOMYCIN     	VARCHAR (50) NULL, 
INIT_REGIMEN_ETHIONAMIDE      	VARCHAR (50) NULL, 
INIT_REGIMEN_KANAMYCIN        	VARCHAR (50) NULL, 
INIT_REGIMEN_CYCLOSERINE      	VARCHAR (50) NULL, 
INIT_REGIMEN_CAPREOMYCIN      	VARCHAR (50) NULL, 
INIT_REGIMEN_PA_SALICYLIC_ACID 	VARCHAR (50) NULL, 
INIT_REGIMEN_AMIKACIN         	VARCHAR (50) NULL, 
INIT_REGIMEN_RIFABUTIN        	VARCHAR (50) NULL, 
INIT_REGIMEN_CIPROFLOXACIN    	VARCHAR (50) NULL, 
INIT_REGIMEN_OFLOXACIN        	VARCHAR (50) NULL, 
INIT_REGIMEN_RIFAPENTINE      	VARCHAR (50) NULL, 
INIT_REGIMEN_LEVOFLOXACIN     	VARCHAR (50) NULL, 
INIT_REGIMEN_MOXIFLOXACIN     	VARCHAR (50) NULL, 
INIT_REGIMEN_OTHER_1_IND      	VARCHAR (50) NULL, 
INIT_REGIMEN_OTHER_2_IND      	VARCHAR (50) NULL, 
ISOLATE_SUBMITTED_IND         	VARCHAR (50) NULL, 
INIT_SUSCEPT_TESTING_DONE     	VARCHAR (50) NULL, 
FIRST_ISOLATE_IS_SPUTUM_IND  	VARCHAR (50) NULL, 
FIRST_ISOLATE_NOT_SPUTUM     	VARCHAR (50) NULL, 
INIT_SUSCEPT_ISONIAZID        	VARCHAR (50) NULL, 
INIT_SUSCEPT_RIFAMPIN         	VARCHAR (50) NULL, 
INIT_SUSCEPT_PYRAZINAMIDE     	VARCHAR (50) NULL, 
INIT_SUSCEPT_ETHAMBUTOL       	VARCHAR (50) NULL, 
INIT_SUSCEPT_STREPTOMYCIN     	VARCHAR (50) NULL, 
INIT_SUSCEPT_ETHIONAMIDE      	VARCHAR (50) NULL, 
INIT_SUSCEPT_KANAMYCIN        	VARCHAR (50) NULL, 
INIT_SUSCEPT_CYCLOSERINE      	VARCHAR (50) NULL, 
INIT_SUSCEPT_CAPREOMYCIN      	VARCHAR (50) NULL, 
INIT_SUSCEPT_PA_SALICYLIC_ACID 	VARCHAR (50) NULL, 
INIT_SUSCEPT_AMIKACIN         	VARCHAR (50) NULL, 
INIT_SUSCEPT_RIFABUTIN        	VARCHAR (50) NULL, 
INIT_SUSCEPT_CIPROFLOXACIN    	VARCHAR (50) NULL, 
INIT_SUSCEPT_OFLOXACIN        	VARCHAR (50) NULL, 
INIT_SUSCEPT_RIFAPENTINE      	VARCHAR (50) NULL, 
INIT_SUSCEPT_LEVOFLOXACIN     	VARCHAR (50) NULL, 
INIT_SUSCEPT_MOXIFLOXACIN     	VARCHAR (50) NULL, 
INIT_SUSCEPT_OTHER_QUNINOLONES 	VARCHAR (50) NULL, 
INIT_SUSCEPT_OTHER_1_IND      	VARCHAR (50) NULL, 
INIT_SUSCEPT_OTHER_2_IND      	VARCHAR (50) NULL, 
SPUTUM_CULTURE_CONV_DOCUMENTED 	VARCHAR (50) NULL, 
NO_CONV_DOC_REASON            	VARCHAR (50) NULL, 
MOVED_WHERE_1                 	VARCHAR (50) NULL, 
MOVED_IND	      	      	VARCHAR(100)  NULL,
MOVED_WHERE_2                 	VARCHAR (50) NULL, 
MOVED_WHERE_GT3_IND           	VARCHAR (50) NULL, 
MOVED_WHERE_3                 	VARCHAR (50) NULL,
MOVED_WHERE_ALL               	VARCHAR (4000) NULL, 
MOVE_CITY	      		VARCHAR(100)  NULL,
MOVE_CNTY_1                   	VARCHAR (50) NULL, 
MOVE_CNTY_2                   	VARCHAR (50) NULL, 
MOVE_CNTY_GT3_IND             	VARCHAR (50) NULL, 
MOVE_CNTY_3                   	VARCHAR (50) NULL, 
MOVE_STATE_1                  	VARCHAR (50) NULL, 
MOVE_CNTY_ALL                 	VARCHAR (4000) NULL, 
MOVE_STATE_2                  	VARCHAR (50) NULL, 
MOVE_STATE_GT3_IND            	VARCHAR (50) NULL, 
MOVE_STATE_3                  	VARCHAR (50) NULL, 
MOVE_CNTRY_1                  	VARCHAR (50) NULL, 
MOVE_STATE_ALL                	VARCHAR (4000) NULL, 
MOVE_CNTRY_2                  	VARCHAR (50) NULL, 
MOVE_CNTRY_GT3_IND            	VARCHAR (50) NULL, 
MOVE_CNTRY_3                  	VARCHAR (50) NULL, 
MOVE_CNTRY_ALL                	VARCHAR (4000) NULL, 
TRANSNATIONAL_REFERRAL_IND    	VARCHAR (50) NULL, 
THERAPY_STOP_REASON           	VARCHAR (50) NULL, 
GT_12_REAS_1                  	VARCHAR (50) NULL, 
THERAPY_STOP_CAUSE_OF_DEATH   	VARCHAR (50) NULL, 
GT_12_REAS_2                  	VARCHAR (50) NULL, 
GT_12_REAS_GT3_IND            	VARCHAR (50) NULL, 
GT_12_REAS_3                  	VARCHAR (50) NULL, 
GT_12_REAS_ALL                	VARCHAR (4000) NULL, 
HC_PROV_TY_1                  	VARCHAR (50) NULL, 
HC_PROV_TY_2                  	VARCHAR (50) NULL, 
HC_PROV_TY_GT3_IND            	VARCHAR (50) NULL, 
HC_PROV_TY_3                  	VARCHAR (50) NULL, 
HC_PROV_TY_ALL                	VARCHAR (4000) NULL, 
DOT                           	VARCHAR (50) NULL, 
FINAL_SUSCEPT_TESTING         	VARCHAR (50) NULL, 
FINAL_ISOLATE_IS_SPUTUM_IND   	VARCHAR (50) NULL, 
FINAL_ISOLATE_NOT_SPUTUM      	VARCHAR (50) NULL, 
FINAL_SUSCEPT_ISONIAZID       	VARCHAR (50) NULL, 
FINAL_SUSCEPT_RIFAMPIN        	VARCHAR (50) NULL, 
FINAL_SUSCEPT_PYRAZINAMIDE    	VARCHAR (50) NULL, 
FINAL_SUSCEPT_ETHAMBUTOL      	VARCHAR (50) NULL, 
FINAL_SUSCEPT_STREPTOMYCIN    	VARCHAR (50) NULL, 
FINAL_SUSCEPT_ETHIONAMIDE     	VARCHAR (50) NULL, 
FINAL_SUSCEPT_KANAMYCIN       	VARCHAR (50) NULL, 
FINAL_SUSCEPT_CYCLOSERINE     	VARCHAR (50) NULL, 
FINAL_SUSCEPT_CAPREOMYCIN     	VARCHAR (50) NULL, 
FINAL_SUSCEPT_PA_SALICYLIC_ACI 	VARCHAR (50) NULL, 
FINAL_SUSCEPT_AMIKACIN        	VARCHAR (50) NULL, 
FINAL_SUSCEPT_RIFABUTIN       	VARCHAR (50) NULL, 
FINAL_SUSCEPT_CIPROFLOXACIN   	VARCHAR (50) NULL, 
FINAL_SUSCEPT_OFLOXACIN       	VARCHAR (50) NULL, 
FINAL_SUSCEPT_RIFAPENTINE     	VARCHAR (50) NULL, 
FINAL_SUSCEPT_LEVOFLOXACIN    	VARCHAR (50) NULL, 
FINAL_SUSCEPT_MOXIFLOXACIN    	VARCHAR (50) NULL, 
FINAL_SUSCEPT_OTHER_QUINOLONES 	VARCHAR (50) NULL, 
FINAL_SUSCEPT_OTHER_IND       	VARCHAR (50) NULL, 
FINAL_SUSCEPT_OTHER_2_IND     	VARCHAR (50) NULL, 
CASE_VERIFICATION             	VARCHAR (50) NULL, 
CASE_STATUS                   	VARCHAR (50) NULL, 
COUNT_STATUS                  	VARCHAR (50) NULL, 
COUNTRY_OF_VERIFIED_CASE      	VARCHAR (50) NULL, 
NOTIFICATION_STATUS           	VARCHAR (50) NULL, 
NOTIFICATION_SENT_DATE        	DATETIME NULL, 
PATIENT_DOB                   	DATETIME NULL, 
PATIENT_DECEASED_DATE         	DATETIME NULL, 
INVESTIGATION_START_DATE      	DATETIME NULL, 
INVESTIGATOR_ASSIGN_DATE      	DATETIME NULL, 
DATE_REPORTED                 	DATETIME NULL, 
DATE_SUBMITTED                	DATETIME NULL, 
PREVIOUS_DIAGNOSIS_YEAR       	NUMERIC  NULL, 
DATE_ARRIVED_IN_US            	DATETIME NULL, 
INVESTIGATION_DEATH_DATE      	DATETIME NULL,
SPUTUM_SMEAR_COLLECT_DATE     	DATETIME NULL, 
SPUTUM_CULT_COLLECT_DATE      	DATETIME NULL, 
SPUTUM_CULT_RESULT_RPT_DATE   	DATETIME NULL, 
SMR_PATH_CYTO_COLLECT_DATE    	DATETIME NULL, 
CULT_TISSUE_COLLECT_DATE      	DATETIME NULL, 
CULT_TISSUE_RESULT_RPT_DATE   	DATETIME NULL, 
NAA_COLLECT_DATE              	DATETIME NULL, 
NAA_RESULT_RPT_DATE           	DATETIME NULL, 
TST_PLACED_DATE               	DATETIME NULL, 
IGRA_COLLECT_DATE             	DATETIME NULL, 
INIT_REGIMEN_START_DATE       	DATETIME NULL, 
FIRST_ISOLATE_COLLECT_DATE    	DATETIME NULL, 
TB_SPUTUM_CULTURE_NEGATIVE_DAT 	DATETIME NULL, 
THERAPY_STOP_DATE             	DATETIME NULL, 
FINAL_ISOLATE_COLLECT_DATE    	DATETIME NULL, 
COUNT_DATE                    	DATETIME NULL, 
INVESTIGATION_CREATE_DATE     	DATETIME NULL, 
INVESTIGATION_LAST_UPDTD_DATE 	DATETIME NULL, 
INVESTIGATION_KEY             	BIGINT NOT NULL, 
CALC_REPORTED_AGE             	NUMERIC NULL, 
PATIENT_PHONE_EXT_HOME        	VARCHAR (50) NULL,  
PATIENT_PHONE_EXT_WORK        	VARCHAR (50) NULL, 
AGE_REPORTED                  	NUMERIC NULL, 
TST_MM_INDURATION             	NUMERIC NULL, 
DOT_NUMBER_WEEKS              	NUMERIC NULL, 
MMWR_WEEK                     	NUMERIC NULL, 
MMWR_YEAR                     	NUMERIC NULL, 
PROGRAM_JURISDICTION_OID      	BIGINT, 
PATIENT_LOCAL_ID              	VARCHAR (50) NULL, 
INVESTIGATION_LOCAL_ID        	VARCHAR (50) NULL, 
PATIENT_GENERAL_COMMENTS      	VARCHAR (2000) NULL, 
PATIENT_FIRST_NAME            	VARCHAR (50) NULL, 
PATIENT_MIDDLE_NAME           	VARCHAR (50) NULL, 
PATIENT_LAST_NAME             	VARCHAR (50) NULL, 
PATIENT_STREET_ADDRESS_1      	VARCHAR (50) NULL, 
PATIENT_STREET_ADDRESS_2      	VARCHAR (50) NULL, 
PATIENT_CITY                  	VARCHAR (50) NULL, 
PATIENT_ZIP                   	VARCHAR (50) NULL, 
PATIENT_PHONE_NUMBER_HOME     	VARCHAR (50) NULL, 
PATIENT_PHONE_NUMBER_WORK     	VARCHAR (50) NULL, 
PATIENT_SSN                   	VARCHAR (50) NULL, 
INVESTIGATOR_FIRST_NAME       	VARCHAR (50) NULL, 
INVESTIGATOR_LAST_NAME        	VARCHAR (50) NULL, 
INVESTIGATOR_PHONE_NUMBER     	VARCHAR (50) NULL, 
STATE_CASE_NUMBER             	VARCHAR (50) NULL, 
CITY_COUNTY_CASE_NUMBER       	VARCHAR (50) NULL, 
LINK_STATE_CASE_NUM_1         	VARCHAR (50) NULL, 
LINK_STATE_CASE_NUM_2         	VARCHAR (50) NULL, 
IGRA_TEST_TY                  	VARCHAR (50) NULL, 
OTHER_TB_RISK_FACTORS         	VARCHAR (50) NULL, 
INIT_REGIMEN_OTHER_1          	VARCHAR (50) NULL, 
INIT_REGIMEN_OTHER_2          	VARCHAR (50) NULL, 
GENERAL_COMMENTS              	VARCHAR (2000) NULL, 
ISOLATE_ACCESSION_NUM         	VARCHAR (50) NULL, 
INIT_SUSCEPT_OTHER_1          	VARCHAR (50) NULL, 
INIT_SUSCEPT_OTHER_2          	VARCHAR (50) NULL, 
COMMENTS_FOLLOW_UP_1          	VARCHAR (2000) NULL, 
NO_CONV_DOC_OTHER_REASON      	VARCHAR (50) NULL, 
MOVE_CITY_2        	      	VARCHAR (50) NULL, 
THERAPY_EXTEND_GT_12_OTHER    	VARCHAR (50) NULL, 
FINAL_SUSCEPT_OTHER           	VARCHAR (50) NULL, 
FINAL_SUSCEPT_OTHER_2         	VARCHAR (50) NULL, 
COMMENTS_FOLLOW_UP_2          	VARCHAR (2000) NULL, 
DIE_FRM_THIS_ILLNESS_IND      	VARCHAR (50) NULL,  
PROVIDER_OVERRIDE_COMMENTS    	VARCHAR (2000) NULL, 
INVESTIGATION_CREATED_BY      	VARCHAR (50) NULL, 
INVESTIGATION_LAST_UPDTD_BY   	VARCHAR (50) NULL, 
NOTIFICATION_LOCAL_ID         	VARCHAR (50) NULL, 
NOTIFICATION_SUBMITTER        	VARCHAR (50) NULL,
INIT_DRUG_REG_CALC 		VARCHAR(200) NULL,
REPORTER_PHONE_NUMBER	        VARCHAR(50)     NULL,
REPORTING_SOURCE_NAME         	VARCHAR(50)	NULL,
REPORTING_SOURCE_TYPE           VARCHAR(50)	NULL,
REPORTER_FIRST_NAME           	VARCHAR(50)	NULL,
REPORTER_LAST_NAME            	VARCHAR(50)	NULL,
PHYSICIAN_FIRST_NAME       	VARCHAR(50)	NULL,
PHYSICIAN_LAST_NAME        	VARCHAR(50)	NULL,
PHYSICIAN_PHONE_NUMBER     	VARCHAR(50)	NULL,
HOSPITALIZED		  	VARCHAR(50)	NULL,
HOSPITAL_NAME		  	VARCHAR(50)	NULL,
HOSPITALIZED_ADMISSION_DATE   	DATETIME	NULL,
HOSPITALIZED_DISCHARGE_DATE   	DATETIME	NULL,
HOSPITALIZED_DURATION_DAYS    	NUMERIC		NULL,
DIAGNOSIS_DATE                	DATETIME	NULL,
ILLNESS_ONSET_DATE            	DATETIME	NULL,
ILLNESS_ONSET_AGE             	NUMERIC		NULL,
ILLNESS_ONSET_AGE_UNIT        	VARCHAR(50)	NULL,
ILLNESS_END_DATE 		DATETIME	NULL,
ILLNESS_DURATION		NUMERIC		NULL,
ILLNESS_DURATION_UNIT		VARCHAR(50)	NULL,
PREGNANT                      	VARCHAR(50)	NULL,
DAYCARE				VARCHAR(50)	NULL,
FOOD_HANDLER			VARCHAR(50)	NULL,
DISEASE_ACQUIRED_WHERE		VARCHAR(50)	NULL,
DISEASE_ACQUIRED_COUNTRY	VARCHAR(50)	NULL,
DISEASE_ACQUIRED_STATE 		VARCHAR(50)	NULL,
DISEASE_ACQUIRED_CITY		VARCHAR(100)	NULL,
DISEASE_ACQUIRED_COUNTY		VARCHAR(50)	NULL,
TRANSMISSION_MODE		VARCHAR(50)	NULL,	
DETECTION_METHOD		VARCHAR(50)	NULL,
OUTBREAK                      	VARCHAR(50)	NULL,
OUTBREAK_NAME                 	VARCHAR(100)	NULL,
CONFIRMATION_METHOD_1          	VARCHAR(50)	NULL,
CONFIRMATION_METHOD_2          	VARCHAR(50)	NULL,
CONFIRMATION_METHOD_3          	VARCHAR(50)	NULL,
CONFIRMATION_METHOD_ALL        	VARCHAR(4000)	NULL,
CONFIRMATION_DATE	 	DATETIME	NULL,
CONFIRMATION_METHOD_GT3_IND 	VARCHAR(2000)	NULL,
DATE_REPORTED_TO_COUNTY 	DATETIME	NULL
) 
GO

CREATE TABLE DBO.TB_HIV_DATAMART (
CALC_5_YEAR_AGE_GROUP         	NUMERIC	   NULL, 
CALC_10_YEAR_AGE_GROUP        	NUMERIC	   NULL, 
PATIENT_NAME_SUFFIX           	VARCHAR (50) NULL, 
PATIENT_STATE                 	VARCHAR (50) NULL, 
PATIENT_COUNTY                	VARCHAR (50) NULL, 
PATIENT_COUNTRY               	VARCHAR (50) NULL, 
PATIENT_WITHIN_CITY_LIMITS    	VARCHAR (50) NULL, 
AGE_REPORTED_UNIT             	VARCHAR (50) NULL, 
PATIENT_BIRTH_SEX             	VARCHAR (50) NULL, 
PATIENT_CURRENT_SEX           	VARCHAR (50) NULL, 
PATIENT_DECEASED_INDICATOR    	VARCHAR (50) NULL, 
PATIENT_MARITAL_STATUS        	VARCHAR (50) NULL, 
PATIENT_ETHNICITY             	VARCHAR (50) NULL, 
RACE_CALCULATED               	VARCHAR (4000) NULL, 
RACE_CALC_DETAILS             	VARCHAR (200) NULL, 
RACE_ASIAN_1                  	VARCHAR (50) NULL, 
RACE_ASIAN_2                  	VARCHAR (50) NULL, 
RACE_ASIAN_3                  	VARCHAR (50) NULL, 
RACE_ASIAN_GT3_IND            	VARCHAR (50) NULL, 
RACE_ASIAN_ALL                	VARCHAR (4000) NULL, 
RACE_NAT_HI_1                 	VARCHAR (50) NULL, 
RACE_NAT_HI_2                 	VARCHAR (50) NULL, 
RACE_NAT_HI_3                 	VARCHAR (50) NULL, 
RACE_NAT_HI_GT3_IND           	VARCHAR (50) NULL, 
RACE_NAT_HI_ALL               	VARCHAR (4000) NULL, 
JURISDICTION_NAME             	VARCHAR (50) NULL, 
PROGRAM_AREA_DESCRIPTION      	VARCHAR (50) NULL, 
INVESTIGATION_STATUS          	VARCHAR (50) NULL, 
LINK_REASON_1                 	VARCHAR (50) NULL, 
LINK_REASON_2                 	VARCHAR (50) NULL, 
PREVIOUS_DIAGNOSIS_IND        	VARCHAR (50) NULL, 
US_BORN_IND                   	VARCHAR (50) NULL, 
PATIENT_BIRTH_COUNTRY         	VARCHAR (50) NULL, 
PATIENT_OUTSIDE_US_GT_2_MONTHS	VARCHAR (50) NULL, 
OUT_OF_CNTRY_1                	VARCHAR (50) NULL, 
OUT_OF_CNTRY_2                	VARCHAR (50) NULL, 
OUT_OF_CNTRY_3                	VARCHAR (50) NULL, 
OUT_OF_CNTRY_GT3_IND          	VARCHAR (50) NULL, 
OUT_OF_CNTRY_ALL              	VARCHAR (4000) NULL, 
PRIMARY_GUARD_1_BIRTH_COUNTRY 	VARCHAR (50) NULL, 
PRIMARY_GUARD_2_BIRTH_COUNTRY 	VARCHAR (50) NULL, 
STATUS_AT_DIAGNOSIS           	VARCHAR (50) NULL, 
DISEASE_SITE_1                	VARCHAR (50) NULL, 
DISEASE_SITE_2                	VARCHAR (50) NULL, 
DISEASE_SITE_3                	VARCHAR (50) NULL,
DISEASE_SITE_GT3_IND          	VARCHAR (50) NULL,
DISEASE_SITE_ALL              	VARCHAR (4000) NULL, 
CALC_DISEASE_SITE             	VARCHAR (50) NULL, 
SPUTUM_SMEAR_RESULT           	VARCHAR (50) NULL, 
SPUTUM_CULTURE_RESULT         	VARCHAR (50) NULL, 
SPUTUM_CULT_RPT_LAB_TY        	VARCHAR (50) NULL, 
SMR_PATH_CYTO_RESULT          	VARCHAR (50) NULL, 
SMR_PATH_CYTO_SITE            	VARCHAR (50) NULL, 
SMR_EXAM_TY_1                 	VARCHAR (50) NULL, 
SMR_EXAM_TY_2                 	VARCHAR (50) NULL, 
SMR_EXAM_TY_3                 	VARCHAR (50) NULL, 
SMR_EXAM_TY_GT3_IND           	VARCHAR (50) NULL, 
SMR_EXAM_TY_ALL               	VARCHAR (4000) NULL, 
CULT_TISSUE_RESULT            	VARCHAR (50) NULL, 
CULT_TISSUE_SITE              	VARCHAR (50) NULL, 
CULT_TISSUE_RESULT_RPT_LAB_TY 	VARCHAR (50) NULL, 
NAA_RESULT                    	VARCHAR (50) NULL, 
NAA_SPEC_IS_SPUTUM_IND        	VARCHAR (50) NULL, 
NAA_SPEC_NOT_SPUTUM           	VARCHAR (50) NULL, 
NAA_RPT_LAB_TY                	VARCHAR (50) NULL, 
CHEST_XRAY_RESULT             	VARCHAR (50) NULL, 
CHEST_XRAY_CAVITY_EVIDENCE    	VARCHAR (50) NULL, 
CHEST_XRAY_MILIARY_EVIDENCE   	VARCHAR (50) NULL, 
CT_SCAN_RESULT                	VARCHAR (50) NULL, 
CT_SCAN_CAVITY_EVIDENCE       	VARCHAR (50) NULL, 
CT_SCAN_MILIARY_EVIDENCE      	VARCHAR (50) NULL, 
TST_RESULT                    	VARCHAR (50) NULL, 
IGRA_RESULT                   	VARCHAR (50) NULL, 
PRIMARY_REASON_EVALUATED      	VARCHAR (50) NULL, 
HOMELESS_IND                  	VARCHAR (50) NULL, 
CORRECTIONAL_FACIL_RESIDENT   	VARCHAR (50) NULL, 
CORRECTIONAL_FACIL_TY         	VARCHAR (50) NULL, 
CORRECTIONAL_FACIL_CUSTODY_IND	VARCHAR (50) NULL, 
LONGTERM_CARE_FACIL_RESIDENT  	VARCHAR (50) NULL, 
LONGTERM_CARE_FACIL_TY        	VARCHAR (50) NULL, 
OCCUPATION_RISK               	VARCHAR (50) NULL, 
INJECT_DRUG_USE_PAST_YEAR     	VARCHAR (50) NULL, 
NONINJECT_DRUG_USE_PAST_YEAR  	VARCHAR (50) NULL, 
ADDL_RISK_1                   	VARCHAR (50) NULL, 
EXCESS_ALCOHOL_USE_PAST_YEAR  	VARCHAR (50) NULL, 
ADDL_RISK_2                   	VARCHAR (50) NULL, 
ADDL_RISK_GT3_IND             	VARCHAR (50) NULL, 
ADDL_RISK_3                   	VARCHAR (50) NULL, 
ADDL_RISK_ALL                 	VARCHAR (4000) NULL, 
IMMIGRATION_STATUS_AT_US_ENTRY 	VARCHAR (50) NULL, 
INIT_REGIMEN_ISONIAZID        	VARCHAR (50) NULL, 
INIT_REGIMEN_RIFAMPIN         	VARCHAR (50) NULL, 
INIT_REGIMEN_PYRAZINAMIDE     	VARCHAR (50) NULL, 
INIT_REGIMEN_ETHAMBUTOL       	VARCHAR (50) NULL, 
INIT_REGIMEN_STREPTOMYCIN     	VARCHAR (50) NULL, 
INIT_REGIMEN_ETHIONAMIDE      	VARCHAR (50) NULL, 
INIT_REGIMEN_KANAMYCIN        	VARCHAR (50) NULL, 
INIT_REGIMEN_CYCLOSERINE      	VARCHAR (50) NULL, 
INIT_REGIMEN_CAPREOMYCIN      	VARCHAR (50) NULL, 
INIT_REGIMEN_PA_SALICYLIC_ACID 	VARCHAR (50) NULL, 
INIT_REGIMEN_AMIKACIN         	VARCHAR (50) NULL, 
INIT_REGIMEN_RIFABUTIN        	VARCHAR (50) NULL, 
INIT_REGIMEN_CIPROFLOXACIN    	VARCHAR (50) NULL, 
INIT_REGIMEN_OFLOXACIN        	VARCHAR (50) NULL, 
INIT_REGIMEN_RIFAPENTINE      	VARCHAR (50) NULL, 
INIT_REGIMEN_LEVOFLOXACIN     	VARCHAR (50) NULL, 
INIT_REGIMEN_MOXIFLOXACIN     	VARCHAR (50) NULL, 
INIT_REGIMEN_OTHER_1_IND      	VARCHAR (50) NULL, 
INIT_REGIMEN_OTHER_2_IND      	VARCHAR (50) NULL, 
ISOLATE_SUBMITTED_IND         	VARCHAR (50) NULL, 
INIT_SUSCEPT_TESTING_DONE     	VARCHAR (50) NULL, 
FIRST_ISOLATE_IS_SPUTUM_IND  	VARCHAR (50) NULL, 
FIRST_ISOLATE_NOT_SPUTUM     	VARCHAR (50) NULL, 
INIT_SUSCEPT_ISONIAZID       	VARCHAR (50) NULL, 
INIT_SUSCEPT_RIFAMPIN         	VARCHAR (50) NULL, 
INIT_SUSCEPT_PYRAZINAMIDE     	VARCHAR (50) NULL, 
INIT_SUSCEPT_ETHAMBUTOL       	VARCHAR (50) NULL, 
INIT_SUSCEPT_STREPTOMYCIN     	VARCHAR (50) NULL, 
INIT_SUSCEPT_ETHIONAMIDE      	VARCHAR (50) NULL, 
INIT_SUSCEPT_KANAMYCIN        	VARCHAR (50) NULL, 
INIT_SUSCEPT_CYCLOSERINE      	VARCHAR (50) NULL, 
INIT_SUSCEPT_CAPREOMYCIN      	VARCHAR (50) NULL, 
INIT_SUSCEPT_PA_SALICYLIC_ACID 	VARCHAR (50) NULL, 
INIT_SUSCEPT_AMIKACIN         	VARCHAR (50) NULL, 
INIT_SUSCEPT_RIFABUTIN        	VARCHAR (50) NULL, 
INIT_SUSCEPT_CIPROFLOXACIN    	VARCHAR (50) NULL, 
INIT_SUSCEPT_OFLOXACIN        	VARCHAR (50) NULL, 
INIT_SUSCEPT_RIFAPENTINE      	VARCHAR (50) NULL, 
INIT_SUSCEPT_LEVOFLOXACIN     	VARCHAR (50) NULL, 
INIT_SUSCEPT_MOXIFLOXACIN     	VARCHAR (50) NULL, 
INIT_SUSCEPT_OTHER_QUNINOLONES 	VARCHAR (50) NULL, 
INIT_SUSCEPT_OTHER_1_IND      	VARCHAR (50) NULL, 
INIT_SUSCEPT_OTHER_2_IND      	VARCHAR (50) NULL, 
SPUTUM_CULTURE_CONV_DOCUMENTED 	VARCHAR (50) NULL, 
NO_CONV_DOC_REASON            	VARCHAR (50) NULL, 
MOVED_WHERE_1                 	VARCHAR (50) NULL, 
MOVED_IND	       	      	VARCHAR(100)  NULL,
MOVED_WHERE_2                 	VARCHAR (50) NULL, 
MOVED_WHERE_GT3_IND           	VARCHAR (50) NULL, 
MOVED_WHERE_3                 	VARCHAR (50) NULL, 
MOVED_WHERE_ALL               	VARCHAR (4000) NULL, 
MOVE_CITY	       	      	VARCHAR(100)  NULL,
MOVE_CNTY_1                   	VARCHAR (50) NULL, 
MOVE_CNTY_2                   	VARCHAR (50) NULL, 
MOVE_CNTY_GT3_IND             	VARCHAR (50) NULL, 
MOVE_CNTY_3                   	VARCHAR (50) NULL, 
MOVE_STATE_1                  	VARCHAR (50) NULL, 
MOVE_CNTY_ALL                 	VARCHAR (4000) NULL, 
MOVE_STATE_2                  	VARCHAR (50) NULL, 
MOVE_STATE_GT3_IND            	VARCHAR (50) NULL, 
MOVE_STATE_3                  	VARCHAR (50) NULL, 
MOVE_CNTRY_1                  	VARCHAR (50) NULL, 
MOVE_STATE_ALL                	VARCHAR (4000) NULL, 
MOVE_CNTRY_2                  	VARCHAR (50) NULL, 
MOVE_CNTRY_GT3_IND            	VARCHAR (50) NULL, 
MOVE_CNTRY_3                  	VARCHAR (50) NULL, 
MOVE_CNTRY_ALL                	VARCHAR (4000) NULL, 
TRANSNATIONAL_REFERRAL_IND    	VARCHAR (50) NULL, 
THERAPY_STOP_REASON           	VARCHAR (50) NULL, 
GT_12_REAS_1                  	VARCHAR (50) NULL, 
THERAPY_STOP_CAUSE_OF_DEATH   	VARCHAR (50) NULL, 
GT_12_REAS_2                  	VARCHAR (50) NULL, 
GT_12_REAS_GT3_IND            	VARCHAR (50) NULL, 
GT_12_REAS_3                  	VARCHAR (50) NULL, 
GT_12_REAS_ALL                	VARCHAR (4000) NULL, 
HC_PROV_TY_1                  	VARCHAR (50) NULL, 
HC_PROV_TY_2                  	VARCHAR (50) NULL, 
HC_PROV_TY_GT3_IND            	VARCHAR (50) NULL, 
HC_PROV_TY_3                  	VARCHAR (50) NULL, 
HC_PROV_TY_ALL                	VARCHAR (4000) NULL, 
DOT                           	VARCHAR (50) NULL, 
FINAL_SUSCEPT_TESTING         	VARCHAR (50) NULL, 
FINAL_ISOLATE_IS_SPUTUM_IND   	VARCHAR (50) NULL, 
FINAL_ISOLATE_NOT_SPUTUM      	VARCHAR (50) NULL, 
FINAL_SUSCEPT_ISONIAZID       	VARCHAR (50) NULL, 
FINAL_SUSCEPT_RIFAMPIN        	VARCHAR (50) NULL, 
FINAL_SUSCEPT_PYRAZINAMIDE    	VARCHAR (50) NULL, 
FINAL_SUSCEPT_ETHAMBUTOL      	VARCHAR (50) NULL, 
FINAL_SUSCEPT_STREPTOMYCIN    	VARCHAR (50) NULL, 
FINAL_SUSCEPT_ETHIONAMIDE     	VARCHAR (50) NULL, 
FINAL_SUSCEPT_KANAMYCIN       	VARCHAR (50) NULL, 
FINAL_SUSCEPT_CYCLOSERINE     	VARCHAR (50) NULL, 
FINAL_SUSCEPT_CAPREOMYCIN     	VARCHAR (50) NULL, 
FINAL_SUSCEPT_PA_SALICYLIC_ACI	VARCHAR (50) NULL, 
FINAL_SUSCEPT_AMIKACIN        	VARCHAR (50) NULL, 
FINAL_SUSCEPT_RIFABUTIN       	VARCHAR (50) NULL, 
FINAL_SUSCEPT_CIPROFLOXACIN   	VARCHAR (50) NULL, 
FINAL_SUSCEPT_OFLOXACIN       	VARCHAR (50) NULL, 
FINAL_SUSCEPT_RIFAPENTINE     	VARCHAR (50) NULL, 
FINAL_SUSCEPT_LEVOFLOXACIN    	VARCHAR (50) NULL, 
FINAL_SUSCEPT_MOXIFLOXACIN    	VARCHAR (50) NULL, 
FINAL_SUSCEPT_OTHER_QUINOLONES 	VARCHAR (50) NULL, 
FINAL_SUSCEPT_OTHER_IND       	VARCHAR (50) NULL, 
FINAL_SUSCEPT_OTHER_2_IND     	VARCHAR (50) NULL, 
CASE_VERIFICATION             	VARCHAR (50) NULL, 
CASE_STATUS                   	VARCHAR (50) NULL, 
COUNT_STATUS                  	VARCHAR (50) NULL, 
COUNTRY_OF_VERIFIED_CASE      	VARCHAR (50) NULL, 
NOTIFICATION_STATUS           	VARCHAR (50) NULL, 
NOTIFICATION_SENT_DATE        	DATETIME NULL, 
PATIENT_DOB                   	DATETIME NULL, 
PATIENT_DECEASED_DATE         	DATETIME NULL, 
INVESTIGATION_START_DATE      	DATETIME NULL, 
INVESTIGATOR_ASSIGN_DATE      	DATETIME NULL, 
DATE_REPORTED                 	DATETIME NULL, 
DATE_SUBMITTED                	DATETIME NULL, 
PREVIOUS_DIAGNOSIS_YEAR       	NUMERIC NULL, 
DATE_ARRIVED_IN_US            	DATETIME NULL, 
INVESTIGATION_DEATH_DATE      	DATETIME NULL,
SPUTUM_SMEAR_COLLECT_DATE     	DATETIME NULL, 
SPUTUM_CULT_COLLECT_DATE      	DATETIME NULL, 
SPUTUM_CULT_RESULT_RPT_DATE   	DATETIME NULL, 
SMR_PATH_CYTO_COLLECT_DATE    	DATETIME NULL, 
CULT_TISSUE_COLLECT_DATE      	DATETIME NULL, 
CULT_TISSUE_RESULT_RPT_DATE   	DATETIME NULL, 
NAA_COLLECT_DATE              	DATETIME NULL, 
NAA_RESULT_RPT_DATE           	DATETIME NULL, 
TST_PLACED_DATE               	DATETIME NULL, 
IGRA_COLLECT_DATE             	DATETIME NULL, 
INIT_REGIMEN_START_DATE       	DATETIME NULL, 
FIRST_ISOLATE_COLLECT_DATE    	DATETIME NULL, 
TB_SPUTUM_CULTURE_NEGATIVE_DAT 	DATETIME NULL, 
THERAPY_STOP_DATE             	DATETIME NULL, 
FINAL_ISOLATE_COLLECT_DATE    	DATETIME NULL, 
COUNT_DATE                    	DATETIME NULL, 
INVESTIGATION_CREATE_DATE     	DATETIME NULL, 
INVESTIGATION_LAST_UPDTD_DATE 	DATETIME NULL, 
INVESTIGATION_KEY             	BIGINT NOT NULL, 
CALC_REPORTED_AGE             	NUMERIC NULL, 
PATIENT_PHONE_EXT_HOME        	VARCHAR(50) NULL, 
PATIENT_PHONE_EXT_WORK        	VARCHAR(50) NULL, 
AGE_REPORTED                  	NUMERIC NULL, 
TST_MM_INDURATION             	NUMERIC NULL, 
DOT_NUMBER_WEEKS              	NUMERIC NULL, 
MMWR_WEEK                     	NUMERIC NULL, 
MMWR_YEAR                     	NUMERIC NULL, 
PROGRAM_JURISDICTION_OID      	BIGINT, 
PATIENT_LOCAL_ID              	VARCHAR (50) NULL, 
INVESTIGATION_LOCAL_ID        	VARCHAR (50) NULL, 
PATIENT_GENERAL_COMMENTS      	VARCHAR (2000) NULL, 
PATIENT_FIRST_NAME            	VARCHAR (50) NULL, 
PATIENT_MIDDLE_NAME           	VARCHAR (50) NULL, 
PATIENT_LAST_NAME             	VARCHAR (50) NULL, 
PATIENT_STREET_ADDRESS_1      	VARCHAR (50) NULL, 
PATIENT_STREET_ADDRESS_2      	VARCHAR (50) NULL, 
PATIENT_CITY                  	VARCHAR (50) NULL, 
PATIENT_ZIP                   	VARCHAR (50) NULL, 
PATIENT_PHONE_NUMBER_HOME     	VARCHAR (50) NULL, 
PATIENT_PHONE_NUMBER_WORK     	VARCHAR (50) NULL, 
PATIENT_SSN                   	VARCHAR (50) NULL, 
INVESTIGATOR_FIRST_NAME       	VARCHAR (50) NULL, 
INVESTIGATOR_LAST_NAME        	VARCHAR (50) NULL, 
INVESTIGATOR_PHONE_NUMBER     	VARCHAR (50) NULL, 
STATE_CASE_NUMBER             	VARCHAR (50) NULL, 
CITY_COUNTY_CASE_NUMBER       	VARCHAR (50) NULL, 
LINK_STATE_CASE_NUM_1         	VARCHAR (50) NULL, 
LINK_STATE_CASE_NUM_2         	VARCHAR (50) NULL, 
IGRA_TEST_TY                  	VARCHAR (50) NULL, 
OTHER_TB_RISK_FACTORS         	VARCHAR (50) NULL, 
INIT_REGIMEN_OTHER_1          	VARCHAR (50) NULL, 
INIT_REGIMEN_OTHER_2          	VARCHAR (50) NULL, 
GENERAL_COMMENTS              	VARCHAR (2000) NULL, 
ISOLATE_ACCESSION_NUM         	VARCHAR (50) NULL, 
INIT_SUSCEPT_OTHER_1          	VARCHAR (50) NULL, 
INIT_SUSCEPT_OTHER_2          	VARCHAR (50) NULL, 
COMMENTS_FOLLOW_UP_1          	VARCHAR (2000) NULL, 
NO_CONV_DOC_OTHER_REASON      	VARCHAR (50) NULL, 
MOVE_CITY_2      	      	VARCHAR (50) NULL, 
THERAPY_EXTEND_GT_12_OTHER    	VARCHAR (50) NULL, 
FINAL_SUSCEPT_OTHER           	VARCHAR (50) NULL, 
FINAL_SUSCEPT_OTHER_2         	VARCHAR (50) NULL, 
COMMENTS_FOLLOW_UP_2          	VARCHAR (2000) NULL, 
DIE_FRM_THIS_ILLNESS_IND      	VARCHAR (50) NULL, 
PROVIDER_OVERRIDE_COMMENTS    	VARCHAR (2000) NULL, 
INVESTIGATION_CREATED_BY      	VARCHAR (50) NULL, 
INVESTIGATION_LAST_UPDTD_BY   	VARCHAR (50) NULL, 
NOTIFICATION_LOCAL_ID         	VARCHAR (50) NULL, 
NOTIFICATION_SUBMITTER        	VARCHAR (50) NULL,
HIV_STATE_PATIENT_NUM 	      	VARCHAR (50) NULL ,
HIV_STATUS 		      	VARCHAR (50) NULL ,
HIV_CITY_CNTY_PATIENT_NUM     	VARCHAR (50) NULL ,
D_TB_HIV_KEY  		      	BIGINT     NULL,
INIT_DRUG_REG_CALC 		VARCHAR(200) NULL,
REPORTER_PHONE_NUMBER	        VARCHAR(50)     NULL,
REPORTING_SOURCE_NAME         	VARCHAR(50)	NULL,
REPORTING_SOURCE_TYPE           VARCHAR(50)	NULL,
REPORTER_FIRST_NAME           	VARCHAR(50)	NULL,
REPORTER_LAST_NAME            	VARCHAR(50)	NULL,
PHYSICIAN_FIRST_NAME       	VARCHAR(50)	NULL,
PHYSICIAN_LAST_NAME        	VARCHAR(50)	NULL,
PHYSICIAN_PHONE_NUMBER     	VARCHAR(50)	NULL,
HOSPITALIZED		  	VARCHAR(50)	NULL,
HOSPITAL_NAME		  	VARCHAR(50)	NULL,
HOSPITALIZED_ADMISSION_DATE   	DATETIME	NULL,
HOSPITALIZED_DISCHARGE_DATE   	DATETIME	NULL,
HOSPITALIZED_DURATION_DAYS    	NUMERIC		NULL,
DIAGNOSIS_DATE                	DATETIME	NULL,
ILLNESS_ONSET_DATE            	DATETIME	NULL,
ILLNESS_ONSET_AGE             	NUMERIC		NULL,
ILLNESS_ONSET_AGE_UNIT        	VARCHAR(50)	NULL,
ILLNESS_END_DATE 		DATETIME	NULL,
ILLNESS_DURATION		NUMERIC		NULL,
ILLNESS_DURATION_UNIT		VARCHAR(50)	NULL,
PREGNANT                      	VARCHAR(50)	NULL,
DAYCARE				VARCHAR(50)	NULL,
FOOD_HANDLER			VARCHAR(50)	NULL,
DISEASE_ACQUIRED_WHERE		VARCHAR(50)	NULL,
DISEASE_ACQUIRED_COUNTRY	VARCHAR(50)	NULL,
DISEASE_ACQUIRED_STATE 		VARCHAR(50)	NULL,
DISEASE_ACQUIRED_CITY		VARCHAR(100)	NULL,
DISEASE_ACQUIRED_COUNTY		VARCHAR(50)	NULL,
TRANSMISSION_MODE		VARCHAR(50)	NULL,	
DETECTION_METHOD		VARCHAR(50)	NULL,
OUTBREAK                      	VARCHAR(50)	NULL,
OUTBREAK_NAME                 	VARCHAR(100)	NULL,
CONFIRMATION_METHOD_1          	VARCHAR(50)	NULL,
CONFIRMATION_METHOD_2          	VARCHAR(50)	NULL,
CONFIRMATION_METHOD_3          	VARCHAR(50)	NULL,
CONFIRMATION_METHOD_ALL        	VARCHAR(4000)	NULL,
CONFIRMATION_DATE	 	DATETIME	NULL,
CONFIRMATION_METHOD_GT3_IND 	VARCHAR(2000)	NULL,
DATE_REPORTED_TO_COUNTY 	DATETIME	NULL
) 
GO

IF OBJECT_ID ('CASE_LAB_DATAMART') IS  NULL 
CREATE TABLE DBO.CASE_LAB_DATAMART(
INVESTIGATION_KEY 		BIGINT	 NOT NULL,
PATIENT_LOCAL_ID 		VARCHAR(50) NULL,
INVESTIGATION_LOCAL_ID 		VARCHAR(50) NULL,
PATIENT_FIRST_NM 		VARCHAR(50) NULL,
PATIENT_MIDDLE_NM 		VARCHAR(50) NULL,
PATIENT_LAST_NM 		VARCHAR(50) NULL,
PATIENT_STREET_ADDRESS_1 	VARCHAR(100) NULL,
PATIENT_STREET_ADDRESS_2 	VARCHAR(100) NULL,
PATIENT_CITY 			VARCHAR(100) NULL,
PATIENT_STATE 			VARCHAR(100) NULL,
PATIENT_ZIP 			VARCHAR(20) NULL,
PATIENT_COUNTY 			VARCHAR(300) NULL,
PATIENT_HOME_PHONE 		VARCHAR(50) NULL,
PATIENT_DOB 			DATETIME		 NULL,
AGE_REPORTED 			NUMERIC NULL,
AGE_REPORTED_UNIT 		VARCHAR(50) NULL,
PATIENT_CURRENT_SEX 		VARCHAR(50) NULL,
RACE 				VARCHAR(500) NULL,
JURISDICTION_NAME 		VARCHAR(100) NULL,
PROGRAM_AREA_DESCRIPTION 	VARCHAR(50) NULL,
INVESTIGATION_START_DATE 	DATETIME	 NULL,
CASE_STATUS 			VARCHAR(50) NULL,
DISEASE 			VARCHAR(50) NULL,
DISEASE_CD 			VARCHAR(50) NULL,
REPORTING_SOURCE 		VARCHAR(100) NULL,
GENERAL_COMMENTS 		VARCHAR(2000) NULL,
PHYSICIAN_NAME 			VARCHAR(102) NULL,
PHYSICIAN_PHONE 		VARCHAR(46) NULL,
LABORATORY_INFORMATION 		VARCHAR(4000) NULL,
PROGRAM_JURISDICTION_OID 	NUMERIC NULL,
PHC_ADD_TIME 			DATETIME 		NULL,
PHC_LAST_CHG_TIME         DATETIME         NULL,
EVENT_DATE                      DATETIME         NULL,
EARLIEST_SPECIMEN_COLLECT_DATE DATETIME NULL
)
GO


CREATE TABLE DBO.BMIRD_STREP_PNEUMO_DATAMART(
INVESTIGATION_KEY 		BIGINT NOT NULL,
PATIENT_LOCAL_ID 		VARCHAR(50) NOT NULL,
INVESTIGATION_LOCAL_ID 		VARCHAR(50) NOT NULL,
DISEASE 			VARCHAR(50) NULL,
DISEASE_CD 			VARCHAR(50) NULL,
PATIENT_FIRST_NAME 		VARCHAR(50) NULL,
PATIENT_LAST_NAME 		VARCHAR(50) NULL,
PATIENT_DOB 			DATETIME NULL,
PATIENT_CURRENT_SEX 		VARCHAR(50) NULL,
AGE_REPORTED 			NUMERIC NULL,
AGE_REPORTED_UNIT 		VARCHAR(50) NULL,
PATIENT_STREET_ADDRESS_1 	VARCHAR(100) NULL,
PATIENT_STREET_ADDRESS_2 	VARCHAR(100) NULL,
PATIENT_CITY 			VARCHAR(100) NULL,
PATIENT_STATE 			VARCHAR(100) NULL,
PATIENT_ZIP 			VARCHAR(20) NULL,
PATIENT_COUNTY 			VARCHAR(300) NULL,
PATIENT_ETHNICITY 		VARCHAR(300) NULL,
RACE_CALCULATED 		VARCHAR(500) NULL,
RACE_CALC_DETAILS 		VARCHAR(500) NULL,
EARLIEST_RPT_TO_CNTY_DT 	DATETIME NULL,
EARLIEST_RPT_TO_STATE_DT 	DATETIME NULL,
HOSPITALIZED 			VARCHAR(50) NULL,
HOSPITALIZED_ADMISSION_DATE 	DATETIME NULL,
HOSPITALIZED_DISCHARGE_DATE 	DATETIME NULL,
HOSPITALIZED_DURATION_DAYS 	NUMERIC NULL,
HOSPITAL_NAME 			VARCHAR(100) NULL,
ILLNESS_ONSET_DATE 		DATETIME NULL,
ILLNESS_END_DATE 		DATETIME NULL,
DIE_FRM_THIS_ILLNESS_IND 	VARCHAR(50) NULL,
TYPE_INFECTION_BACTEREMIA 	VARCHAR(3) NULL,
TYPE_INFECTION_PNEUMONIA 	VARCHAR(3) NULL,
TYPE_INFECTION_MENINGITIS 	VARCHAR(3) NULL,
TYPE_INFECTION_EMPYEMA 		VARCHAR(3) NULL,
TYPE_INFECTION_CELLULITIS 	VARCHAR(3) NULL,
TYPE_INFECTION_PERITONITIS 	VARCHAR(3) NULL,
TYPE_INFECTION_PERICARDITIS 	VARCHAR(3) NULL,
TYPE_INFECTION_PUERPERAL_SEP 	VARCHAR(3) NULL,
TYPE_INFECTION_SEP_ARTHRITIS 	VARCHAR(3) NULL,
TYPE_INFECTION_OTHERS_CONCAT 	VARCHAR(500) NULL,
TYPE_INFECTION_OTHER_SPECIFY 	VARCHAR(2000) NULL,
BACTERIAL_SPECIES_ISOLATED 	VARCHAR(50) NULL,
BACTERIAL_SPECIES_ISOLATED_OTH 	VARCHAR(50) NULL,
FIRST_POSITIVE_CULTURE_DT 	DATETIME NULL,
STERILE_SITE_BLOOD 		VARCHAR(3) NULL,
STERILE_SITE_CEREBRAL_SF 	VARCHAR(3) NULL,
STERILE_SITE_PLEURAL_FLUID 	VARCHAR(3) NULL,
STERILE_SITE_PERITONEAL_FLUID 	VARCHAR(3) NULL,
STERILE_SITE_PERICARDIAL_FLUID 	VARCHAR(3) NULL,
STERILE_SITE_JOINT_FLUID 	VARCHAR(3) NULL,
STERILE_SITE_OTHERS_CONCAT 	VARCHAR(500) NULL,
STERILE_SITE_OTHER 		VARCHAR(2000) NULL,
INTERNAL_BODY_SITE 		VARCHAR(100) NULL,
NON_STERILE_SITE_1 		VARCHAR(50) NULL,
NON_STERILE_SITE_2 		VARCHAR(50) NULL,
NON_STERILE_SITE_3 		VARCHAR(50) NULL,
NON_STERILE_SITE_OTHER 		VARCHAR(100) NULL,
UNDERLYING_CONDITION_IND 	VARCHAR(50) NULL,
UNDERLYING_CONDITION_1 		VARCHAR(50) NULL,
UNDERLYING_CONDITION_2 		VARCHAR(50) NULL,
UNDERLYING_CONDITION_3 		VARCHAR(50) NULL,
UNDERLYING_CONDITION_4 		VARCHAR(50) NULL,
UNDERLYING_CONDITION_5 		VARCHAR(50) NULL,
UNDERLYING_CONDITION_6 		VARCHAR(50) NULL,
UNDERLYING_CONDITION_7 		VARCHAR(50) NULL,
UNDERLYING_CONDITION_8 		VARCHAR(50) NULL,
OTHER_MALIGNANCY 		VARCHAR(2000) NULL,
ORGAN_TRANSPLANT 		VARCHAR(2000) NULL,
OTHER_PRIOR_ILLNESS_1 		VARCHAR(100) NULL,
OTHER_PRIOR_ILLNESS_2 		VARCHAR(100) NULL,
OTHER_PRIOR_ILLNESS_3 		VARCHAR(100) NULL,
CASE_STATUS 			VARCHAR(50) NULL,
MMWR_WEEK 			NUMERIC NULL,
MMWR_YEAR 			NUMERIC NULL,
SAME_PATHOGEN_RECURRENT 	VARCHAR(50) NULL,
CASE_REPORT_STATUS 		VARCHAR(50) NULL,
OXACILLIN_INTERPRETATION 	VARCHAR(50) NULL,
OXACILLIN_ZONE_SIZE  		NUMERIC NULL,
ANTIMICROBIAL_AGENT_TESTED_1 	VARCHAR(50) NULL,
SUSCEPTABILITY_METHOD_1 	VARCHAR(50) NULL,
S_I_R_U_RESULT_1 		VARCHAR(50) NULL,
MIC_SIGN_1 			VARCHAR(50) NULL,
MIC_VALUE_1 			VARCHAR(50) NULL,
ANTIMICROBIAL_AGENT_TESTED_2 	VARCHAR(50) NULL,
SUSCEPTABILITY_METHOD_2 	VARCHAR(50) NULL,
S_I_R_U_RESULT_2 		VARCHAR(50) NULL,
MIC_SIGN_2 			VARCHAR(50) NULL,
MIC_VALUE_2 			VARCHAR(50) NULL,
ANTIMICROBIAL_AGENT_TESTED_3 	VARCHAR(50) NULL,
SUSCEPTABILITY_METHOD_3 	VARCHAR(50) NULL,
S_I_R_U_RESULT_3 		VARCHAR(50) NULL,
MIC_SIGN_3 			VARCHAR(50) NULL,
MIC_VALUE_3 			VARCHAR(50) NULL,
ANTIMICROBIAL_AGENT_TESTED_4 	VARCHAR(50) NULL,
SUSCEPTABILITY_METHOD_4 	VARCHAR(50) NULL,
S_I_R_U_RESULT_4 		VARCHAR(50) NULL,
MIC_SIGN_4 			VARCHAR(50) NULL,
MIC_VALUE_4 			VARCHAR(50) NULL,
ANTIMICROBIAL_AGENT_TESTED_5 	VARCHAR(50) NULL,
SUSCEPTABILITY_METHOD_5 	VARCHAR(50) NULL,
S_I_R_U_RESULT_5 		VARCHAR(50) NULL,
MIC_SIGN_5 			VARCHAR(50) NULL,
MIC_VALUE_5 			VARCHAR(50) NULL,
ANTIMICROBIAL_AGENT_TESTED_6 	VARCHAR(50) NULL,
SUSCEPTABILITY_METHOD_6 	VARCHAR(50) NULL,
S_I_R_U_RESULT_6 		VARCHAR(50) NULL,
MIC_SIGN_6 			VARCHAR(50) NULL,
MIC_VALUE_6 			VARCHAR(50) NULL,
ANTIMICROBIAL_AGENT_TESTED_7 	VARCHAR(50) NULL,
SUSCEPTABILITY_METHOD_7 	VARCHAR(50) NULL,
S_I_R_U_RESULT_7 		VARCHAR(50) NULL,
MIC_SIGN_7 			VARCHAR(50) NULL,
MIC_VALUE_7 			VARCHAR(50) NULL,
ANTIMICROBIAL_AGENT_TESTED_8 	VARCHAR(50) NULL,
SUSCEPTABILITY_METHOD_8 	VARCHAR(50) NULL,
S_I_R_U_RESULT_8 		VARCHAR(50) NULL,
MIC_SIGN_8 			VARCHAR(50) NULL,
MIC_VALUE_8 			VARCHAR(50) NULL,
ANTIMIC_GT_8_AGENT_AND_RESULT  	VARCHAR(2000) NULL,
PERSISTENT_DISEASE_IND 		VARCHAR(50) NULL,
ADD_CULTURE_1_DATE 		DATETIME NULL,
ADD_CULTURE_1_SITE_1 		VARCHAR(50) NULL,
ADD_CULTURE_1_SITE_2 		VARCHAR(50) NULL,
ADD_CULTURE_1_SITE_3 		VARCHAR(50) NULL,
ADD_CULTURE_1_OTHER_SITE 	VARCHAR(50) NULL,
ADD_CULTURE_2_DATE 		DATETIME NULL,
ADD_CULTURE_2_SITE_1 		VARCHAR(50) NULL,
ADD_CULTURE_2_SITE_2 		VARCHAR(50) NULL,
ADD_CULTURE_2_SITE_3 		VARCHAR(50) NULL,
ADD_CULTURE_2_OTHER_SITE 	VARCHAR(50) NULL,
VACCINE_POLYSACCHARIDE 		VARCHAR(50) NULL,
VACCINE_CONJUGATE 		VARCHAR(50) NULL,
PROGRAM_JURISDICTION_OID 	NUMERIC NULL,
GENERAL_COMMENTS 		VARCHAR(2000) NULL,
PHC_ADD_TIME 			DATETIME NULL,
PHC_LAST_CHG_TIME 		DATETIME NULL,
EVENT_DATE 			DATETIME NULL,
EVENT_DATE_TYPE 		VARCHAR(60) NULL,
CULTURE_SEROTYPE VARCHAR(50) NULL,
OTHSEROTYPE VARCHAR(100) NULL
)
GO

IF OBJECT_ID ('INV_SUMM_DATAMART') IS  NULL 	
CREATE TABLE DBO.INV_SUMM_DATAMART(
	INVESTIGATION_KEY             	BIGINT 		NOT NULL,
	PATIENT_KEY             	BIGINT 	NULL,
	PATIENT_LOCAL_ID              	VARCHAR(50)	NULL,
	INVESTIGATION_LOCAL_ID        	VARCHAR(50)	NULL,
	DISEASE				VARCHAR(100)	NULL,
	DISEASE_CD			VARCHAR(50)	NULL,
	PATIENT_FIRST_NAME            	VARCHAR(50)	NULL,
	PATIENT_LAST_NAME             	VARCHAR(50)	NULL,
	PATIENT_DOB                   	DATETIME       	NULL,
	PATIENT_CURRENT_SEX           	VARCHAR(50)	NULL,
	AGE_REPORTED                  	NUMERIC(20)    	NULL,
	AGE_REPORTED_UNIT             	VARCHAR(300)	NULL,
	PATIENT_STREET_ADDRESS_1      	VARCHAR(100)	NULL,
	PATIENT_STREET_ADDRESS_2      	VARCHAR(100)     NULL,
	PATIENT_CITY                  	VARCHAR(100)     NULL,
	PATIENT_STATE                 	VARCHAR(100)     NULL,
	PATIENT_ZIP                   	VARCHAR(20)     NULL,
	PATIENT_COUNTY                	VARCHAR(100)     NULL,
	PATIENT_ETHNICITY             	VARCHAR(300)	NULL,
	RACE_CALCULATED               	VARCHAR(4000)	NULL,
	RACE_CALC_DETAILS             	VARCHAR(2000)     NULL,
	INVESTIGATION_STATUS		VARCHAR(50)	NULL,
	EARLIEST_RPT_TO_CNTY_DT		DATETIME	NULL,
	EARLIEST_RPT_TO_STATE_DT	DATETIME	NULL,
	DIAGNOSIS_DATE				DATETIME	NULL,
	ILLNESS_ONSET_DATE	        DATETIME	NULL,
	CASE_STATUS					VARCHAR(50)	NULL,
	MMWR_WEEK                   NUMERIC(20)     NULL,
	MMWR_YEAR                   NUMERIC(20)     NULL,
	INVESTIGATION_CREATE_DATE	DATETIME	NULL,
	INVESTIGATION_CREATED_BY	VARCHAR(50)	NULL,
	INVESTIGATION_LAST_UPDTD_DATE	DATETIME	NULL,
	NOTIFICATION_STATUS           	VARCHAR(50)	NULL,
	INVESTIGATION_LAST_UPDTD_BY   	VARCHAR(50)	NULL,
	PROGRAM_JURISDICTION_OID	NUMERIC(20)	NULL,
	EVENT_DATE			DATETIME	NULL,
	EVENT_DATE_TYPE			VARCHAR(100)	NULL,
	LABORATORY_INFORMATION		VARCHAR(4000)	NULL,
	FIRST_POSITIVE_CULTURE_DT       DATETIME	NULL,
	EARLIEST_SPECIMEN_COLLECT_DATE  DATETIME	NULL,
	PROGRAM_AREA			VARCHAR(50)	NULL,
	PHYSICIAN_LAST_NAME		VARCHAR(50)	NULL,
	PHYSICIAN_FIRST_NAME		VARCHAR(50)	NULL,
	NOTIFICATION_LOCAL_ID		VARCHAR(50)	NULL,
	NOTIFICATION_CREATE_DATE	DATETIME	NULL,
	NOTIFICATION_SUBMITTER		VARCHAR(50)	NULL,
	NOTIFICATION_LAST_UPDATED_DATE	DATETIME	NULL,
	NOTIFICATION_LAST_UPDATED_USER	VARCHAR(50)	NULL,
	INV_RPT_DT DATETIME NULL,
 	INV_START_DT DATETIME NULL,
 	CONFIRMATION_DT DATETIME NULL,
 	CONFIRMATION_METHOD VARCHAR(4000) NULL,
 	HSPTL_ADMISSION_DT DATETIME NULL,
 	CURR_PROCESS_STATE VARCHAR(50)	NULL ,
	PATIENT_COUNTY_CODE  VARCHAR(50) NULL, 
	JURISDICTION_NM VARCHAR(100) NULL
	
) 
GO



create view dbo.REJECTED_NND as
SELECT 
  c.condition_desc,
  c.condition_cd,
  rd.date_mm_dd_yyyy,
  n.notification_status,
  n.notification_comments,
  i.inv_case_status,
  i.inv_local_id,
  i.case_rpt_mmwr_wk,
  i.case_rpt_mmwr_yr,
  p.patient_local_id as person_local_id,
  p.patient_first_name as person_first_nm,
  p.patient_last_name as person_last_nm,
  i.jurisdiction_nm,
  i.investigation_status,
  i.case_oid AS 'program_jurisdiction_oid'
FROM 
  rdb..notification_event ne,
  rdb..notification n,
  rdb..condition c,
  rdb..investigation i,
  rdb..d_patient p,
  rdb..rdb_date rd
WHERE 
  ne.notification_key = n.notification_key  and
  ne.notification_submit_dt_key = rd.date_key  and
  ne.condition_key = c.condition_key  and
  ne.investigation_key = i.investigation_key  and
  ne.patient_key = p.patient_key  and
  n.notification_status = 'REJECTED'  and
  i.case_type !=  'S' 
GO

create VIEW dbo.ORG_LINE_LIST as    
SELECT 
  org.organization_local_id as org_local_id,
  org.organization_name as org_nm,
  org.organization_quick_code as org_quick_cd,
  org.organization_entry_method as org_electronic_ind,
  org.organization_state as state_short_desc,
  org.organization_county as cnty_short_desc,
  org.organization_city as city_short_desc,
  org.organization_zip as zip_cd_5,
  org.organization_street_address_1 as street_addr_1,
  org.organization_street_address_2 as street_addr_2,
  org.organization_phone_work as phone_nbr,
  org.organization_phone_ext_work as phone_ext,
  org.organization_county_code as cnty_fips,
  org.organization_state_code as state_fips
FROM 
  rdb..d_organization org
WHERE 
  org.organization_key > '1'    
GO

CREATE VIEW dbo.Lab_Test_Report
AS 
SELECT TOP 100 PERCENT
lt.ROOT_ORDERED_TEST_PNTR, 
lt.PARENT_TEST_PNTR, 
lt.LAB_TEST_PNTR, 
org1.ORGANIZATION_NAME AS reporting_facility, 
org2.ORGANIZATION_NAME AS ordering_facility, 
cond.PROGRAM_AREA_CD, 
cond.PROGRAM_AREA_DESC, 
lt.JURISDICTION_CD, 
lt.JURISDICTION_NM, 
lt.LAB_RPT_CREATED_DT AS lab_rpt_dt, 
lt.LAB_RPT_RECEIVED_BY_PH_DT, 
lt.ACCESSION_NBR, 
lt.SPECIMEN_SRC, 
lt.SPECIMEN_SITE, 
lt.SPECIMEN_SITE_DESC, 
lt.SPECIMEN_COLLECTION_DT, 
lt.ROOT_ORDERED_TEST_NM AS ordered_test_nm, 
lt.LAB_TEST_CD_DESC AS lab_test_nm, 
lt.LAB_TEST_DT AS resulted_dt, 
lt.LAB_TEST_STATUS, 
lt.SPECIMEN_DESC, 
lt.LAB_TEST_TYPE, 
lt.OID AS program_jurisdiction_oid, 
lt.LAB_RPT_SHARE_IND AS shared_ind, 
lrv.NUMERIC_RESULT AS numeric_result_val, 
lrv.Result_Units,
lrv.LAB_RESULT_TXT_VAL AS text_result_val, 
lrv.REF_RANGE_FRM, 
lrv.REF_RANGE_TO, 
lrv.TEST_RESULT_VAL_CD AS coded_result_val, 
lrv.TEST_RESULT_VAL_CD_DESC AS coded_result_val_desc, 
pat.PATIENT_FIRST_NAME AS patient_first_nm, 
pat.PATIENT_MIDDLE_NAME AS patient_middle_nm, 
pat.PATIENT_LAST_NAME AS patient_last_nm, 
pat.PATIENT_NAME_SUFFIX AS patient_nm_suffix, 
prov.PROVIDER_FIRST_NAME AS provider_first_nm, 
prov.PROVIDER_MIDDLE_NAME AS provider_middle_nm, 
prov.PROVIDER_LAST_NAME AS provider_last_nm, 
prov.PROVIDER_NAME_PREFIX AS provider_nm_prefix, 
pat.PATIENT_STREET_ADDRESS_1 as STREET_ADDR_1, 
pat.PATIENT_STREET_ADDRESS_2 as STREET_ADDR_2, 
--loc.CITY_FIPS AS city_cd, 
pat.PATIENT_CITY AS city_desc, 
pat.PATIENT_STATE_CODE AS state_cd, 
pat.PATIENT_STATE AS state_desc, 
pat.PATIENT_ZIP AS zip_cd, 
--loc.ZIP_SHORT_DESC AS zip_cd_desc,
ltr.RECORD_STATUS_CD AS record_status_cd,
lt.LAB_RPT_LOCAL_ID,
pat.patient_local_id,
lt.elr_ind
FROM 
LAB_TEST lt 
INNER JOIN LAB_TEST_RESULT ltr 
ON lt.LAB_TEST_KEY = ltr.LAB_TEST_KEY 
AND ltr.PATIENT_KEY <> 1 
INNER JOIN TEST_RESULT_GROUPING trg 
ON trg.TEST_RESULT_GRP_KEY = ltr.TEST_RESULT_GRP_KEY 
left JOIN LAB_RESULT_VAL lrv 
ON trg.TEST_RESULT_GRP_KEY = lrv.TEST_RESULT_GRP_KEY 
INNER JOIN CONDITION cond 
ON cond.CONDITION_KEY = ltr.CONDITION_KEY 
INNER JOIN D_PATIENT pat 
ON pat.PATIENT_KEY = ltr.PATIENT_KEY 
INNER JOIN D_PROVIDER prov 
ON prov.PROVIDER_KEY = ltr.ORDERING_PROVIDER_KEY 
INNER JOIN D_ORGANIZATION org1 
ON org1.ORGANIZATION_KEY = ltr.REPORTING_LAB_KEY 
INNER JOIN D_ORGANIZATION org2 
ON org2.ORGANIZATION_KEY = ltr.ORDERING_ORG_KEY
ORDER BY lt.ROOT_ORDERED_TEST_PNTR, lt.PARENT_TEST_PNTR, lt.LAB_TEST_PNTR;
GO


/****** Object:  Table [dbo].[MORBIDITY_REPORT_EVENT]    Script Date: 9/13/2021 6:38:36 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
CREATE TABLE [dbo].[MORBIDITY_REPORT_EVENT](
	[NURSING_HOME_KEY] [bigint] NOT NULL,
	[HEALTH_CARE_KEY] [bigint] NOT NULL,
	[MORB_RPT_CREATE_DT_KEY] [bigint] NOT NULL,
	[HSPTL_DISCHARGE_DT_KEY] [bigint] NOT NULL,
	[ILLNESS_ONSET_DT_KEY] [bigint] NOT NULL,
	[MORB_RPT_SRC_ORG_KEY] [bigint] NOT NULL,
	[PATIENT_KEY] [bigint] NOT NULL,
	[MORB_RPT_KEY] [bigint] NOT NULL,
	[MORB_RPT_DT_KEY] [bigint] NOT NULL,
	[PHYSICIAN_KEY] [bigint] NOT NULL,
	[REPORTER_KEY] [bigint] NOT NULL,
	[HSPTL_KEY] [bigint] NOT NULL,
	[MORB_RPT_COUNT] [bigint] NULL,
	[INVESTIGATION_KEY] [bigint] NOT NULL,
	[CONDITION_KEY] [bigint] NOT NULL,
	[LDF_GROUP_KEY] [bigint] NOT NULL,
	[RECORD_STATUS_CD] [varchar](8) NOT NULL,
 CONSTRAINT [PK__MORBIDITY_REPORT__3B8AE1CA] PRIMARY KEY CLUSTERED 
(
	[NURSING_HOME_KEY] ASC,
	[HEALTH_CARE_KEY] ASC,
	[MORB_RPT_CREATE_DT_KEY] ASC,
	[HSPTL_DISCHARGE_DT_KEY] ASC,
	[ILLNESS_ONSET_DT_KEY] ASC,
	[MORB_RPT_SRC_ORG_KEY] ASC,
	[PATIENT_KEY] ASC,
	[MORB_RPT_KEY] ASC,
	[MORB_RPT_DT_KEY] ASC,
	[REPORTER_KEY] ASC,
	[PHYSICIAN_KEY] ASC,
	[HSPTL_KEY] ASC,
	[INVESTIGATION_KEY] ASC,
	[CONDITION_KEY] ASC,
	[LDF_GROUP_KEY] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT]  WITH CHECK ADD  CONSTRAINT [FK__MORBIDITY__HEALT__3F5B72AE] FOREIGN KEY([HEALTH_CARE_KEY])
REFERENCES [dbo].[D_ORGANIZATION] ([ORGANIZATION_KEY])
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT] CHECK CONSTRAINT [FK__MORBIDITY__HEALT__3F5B72AE]
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT]  WITH CHECK ADD  CONSTRAINT [FK__MORBIDITY__HSPTL__404F96E7] FOREIGN KEY([HSPTL_KEY])
REFERENCES [dbo].[D_ORGANIZATION] ([ORGANIZATION_KEY])
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT] CHECK CONSTRAINT [FK__MORBIDITY__HSPTL__404F96E7]
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT]  WITH CHECK ADD  CONSTRAINT [FK__MORBIDITY__MORB___4237DF59] FOREIGN KEY([MORB_RPT_SRC_ORG_KEY])
REFERENCES [dbo].[D_ORGANIZATION] ([ORGANIZATION_KEY])
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT] CHECK CONSTRAINT [FK__MORBIDITY__MORB___4237DF59]
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT]  WITH CHECK ADD  CONSTRAINT [FK__MORBIDITY__MORB___432C0392] FOREIGN KEY([MORB_RPT_KEY])
REFERENCES [dbo].[MORBIDITY_REPORT] ([MORB_RPT_KEY])
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT] CHECK CONSTRAINT [FK__MORBIDITY__MORB___432C0392]
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT]  WITH CHECK ADD  CONSTRAINT [FK__MORBIDITY__NURSI__4143BB20] FOREIGN KEY([NURSING_HOME_KEY])
REFERENCES [dbo].[D_ORGANIZATION] ([ORGANIZATION_KEY])
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT] CHECK CONSTRAINT [FK__MORBIDITY__NURSI__4143BB20]
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT]  WITH CHECK ADD  CONSTRAINT [FK__MORBIDITY__PHYSI__3D732A3C] FOREIGN KEY([PHYSICIAN_KEY])
REFERENCES [dbo].[D_PROVIDER] ([PROVIDER_KEY])
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT] CHECK CONSTRAINT [FK__MORBIDITY__PHYSI__3D732A3C]
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT]  WITH CHECK ADD  CONSTRAINT [FK__MORBIDITY__REPOR__3E674E75] FOREIGN KEY([REPORTER_KEY])
REFERENCES [dbo].[D_PROVIDER] ([PROVIDER_KEY])
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT] CHECK CONSTRAINT [FK__MORBIDITY__REPOR__3E674E75]
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT]  WITH CHECK ADD  CONSTRAINT [FK_PATIENT_KEY] FOREIGN KEY([PATIENT_KEY])
REFERENCES [dbo].[L_PATIENT] ([PATIENT_KEY])
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT] CHECK CONSTRAINT [FK_PATIENT_KEY]
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT]  WITH CHECK ADD  CONSTRAINT [CHK_MORBRPTEVNT_RECORD_STATUS] CHECK  (([RECORD_STATUS_CD]='INACTIVE' OR [RECORD_STATUS_CD]='ACTIVE'))
GO

IF OBJECT_ID ('MORBIDITY_REPORT_EVENT', 'U') IS NULL
ALTER TABLE [dbo].[MORBIDITY_REPORT_EVENT] CHECK CONSTRAINT [CHK_MORBRPTEVNT_RECORD_STATUS]
GO


IF OBJECT_ID ('RDB_TABLE_METADATA', 'U') IS NOT NULL DROP TABLE RDB_TABLE_METADATA;
GO
IF OBJECT_ID ('RDB_METADATAINIT_TEMP', 'U') IS NOT NULL DROP TABLE RDB_METADATAINIT_TEMP;
GO
IF OBJECT_ID ('CODESETGROUPID_TEMP', 'U') IS NOT NULL DROP TABLE CODESETGROUPID_TEMP;
GO
IF OBJECT_ID ('CODESETNAME_TEMP', 'U') IS NOT NULL DROP TABLE CODESETNAME_TEMP;
GO

IF OBJECT_ID ('RDB_METADATAINIT_TEMP', 'U') IS NOT NULL DROP TABLE RDB_METADATAINIT_TEMP;
GO
IF OBJECT_ID ('CODESETGROUPID_TEMP', 'U') IS NOT NULL DROP TABLE CODESETGROUPID_TEMP;
GO
IF OBJECT_ID ('CODESETNAME_TEMP', 'U') IS NOT NULL DROP TABLE CODESETNAME_TEMP;
GO
IF OBJECT_ID ('dbo.ACTIVITY_LOG_DETAIL') IS NOT NULL truncate table dbo.ACTIVITY_LOG_DETAIL; 
go

IF OBJECT_ID ('dbo.ACTIVITY_LOG_MASTER') IS NOT NULL delete from  dbo.ACTIVITY_LOG_MASTER; 
go




INSERT INTO dbo.ACTIVITY_LOG_MASTER (activity_log_master_uid , refresh_ind, start_date, end_date) VALUES (1 ,'T', '01/01/1990', '01/01/1990')

INSERT INTO dbo.ACTIVITY_LOG_DETAIL (activity_log_detail_uid,activity_log_master_uid, process_uid) VALUES  (1, 1, 1)
GO


INSERT INTO D_PATIENT (PATIENT_KEY) VALUES (1);
GO
INSERT INTO L_PATIENT (PATIENT_KEY, PATIENT_UID) VALUES (1, 1);
GO
INSERT INTO D_PROVIDER (PROVIDER_KEY) VALUES (1);
GO
INSERT INTO L_PROVIDER (PROVIDER_KEY, PROVIDER_UID) VALUES (1, 1);
GO
INSERT INTO D_ORGANIZATION (ORGANIZATION_KEY) VALUES (1);
GO
INSERT INTO L_ORGANIZATION (ORGANIZATION_KEY, ORGANIZATION_UID) VALUES (1, 1);
GO

INSERT INTO MORBIDITY_REPORT (MORB_RPT_KEY, RECORD_STATUS_CD )VALUES(1, 'ACTIVE');
GO
INSERT INTO TEST_RESULT_GROUPING (TEST_RESULT_GRP_KEY) VALUES(1);
GO
INSERT INTO RESULT_COMMENT_GROUP(RESULT_COMMENT_GRP_KEY)VALUES(1);
GO
INSERT INTO CONFIRMATION_METHOD(CONFIRMATION_METHOD_KEY)VALUES(1);
GO

INSERT INTO INVESTIGATION (INVESTIGATION_KEY, RECORD_STATUS_CD) VALUES (1, 'INACTIVE');
GO
INSERT INTO L_INVESTIGATION (INVESTIGATION_KEY) VALUES (1);
GO


INSERT INTO L_CONTACT_RECORD (CT_CONTACT_UID, D_CONTACT_RECORD_KEY) VALUES (1,1);
GO
INSERT INTO D_CONTACT_RECORD (D_CONTACT_RECORD_KEY) VALUES (1);



DECLARE @sql nvarchar(max) = N'';

;WITH x AS 
(
  SELECT DISTINCT obj = 
      QUOTENAME(OBJECT_SCHEMA_NAME(parent_object_id)) + '.' 
    + QUOTENAME(OBJECT_NAME(parent_object_id)) 
  FROM sys.foreign_keys
   where QUOTENAME(OBJECT_NAME(parent_object_id))  not like '%ACTIVITY%'
)
SELECT @sql += N'ALTER TABLE ' + obj + N' WITH CHECK CHECK CONSTRAINT ALL;
' FROM x;

EXEC sys.sp_executesql @sql;
