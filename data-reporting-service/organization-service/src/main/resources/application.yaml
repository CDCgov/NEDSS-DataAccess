spring:
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.springframework.kafka.support.serializer.StringOrBytesSerializer
    stream:
      input:
        organization:
          topic-name: cdc.${DB_ODSE:nbs_odse}.dbo.Organization
        defaultData:
          topic-name: cdc.${DB_ODSE:nbs_odse}.dbo.Default.input
      output:
        organizationElastic:
          topic-name: ${PROVIDER_ELASTIC:nbs_organization_elastic}
        organizationReporting:
          topic-name: ${ORGANIZATION_REPORTING:nbs_organization}

    streams:
      application-id: debezium-cdc-consumer-app-1
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
    consumer:
      key-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    admin:
      auto-create: true
  application:
    name: data-reporting-service
  datasource:
    password: ${DB_PASSWORD:-fake.fake.fake.1234}
    username: ${DB_USERNAME:-sa}
    url: jdbc:sqlserver://${DB_URL:localhost}:1433;databaseName=${DB_ODSE:nbs_odse};encrypt=true;trustServerCertificate=true;
  liquibase:
    change-log: db/changelog/db.changelog-master.yaml
logging:
  #  Only one config can be active at a time
  config: classpath:logback-config.xml
  file:
    name: OrganizationService.log
    path: ${DA_LOG_PATH:logs}
server:
  port: '8092'
