plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
    id 'org.sonarqube' version '4.2.1.3168'
}

group = 'gov.cdc.etldatapipeline'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.0'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'com.microsoft.sqlserver:mssql-jdbc:12.3.0.jre17-preview'
    implementation 'ch.qos.logback:logback-classic'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    implementation 'org.springframework.kafka:spring-kafka:3.1.2'
    implementation 'org.apache.kafka:connect-api:3.7.0'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'com.google.guava:guava:33.1.0-jre'

    if (findProject(':common-util')) {
        implementation project(':common-util')
    } else {
        // this mostly needed when testing the app on idea
        implementation files('libs/common-util-0.0.1-SNAPSHOT.jar')
    }

    testImplementation(platform('org.junit:junit-bom:5.9.1'))
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test:6.2.0'
    testImplementation 'org.testcontainers:testcontainers:1.19.8'
    testImplementation "org.testcontainers:kafka:1.19.8"
    testImplementation "org.testcontainers:junit-jupiter:1.19.8"
}

tasks.named('test') {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectKey", "CDCgov_NEDSS-DataAccess"
        property "sonar.organization", "cdcgov"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}
