buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.liquibase.gradle' version '2.2.2'
    id 'org.sonarqube' version '4.2.1.3168'
}

//apply plugin: 'org.owasp.dependencycheck'

group = 'gov.cdc.eltdatapipeline'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

tasks.withType(Jar).configureEach { duplicatesStrategy = DuplicatesStrategy.EXCLUDE }

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Liquibase
    liquibaseRuntime 'org.liquibase:liquibase-core:4.27.0'
    liquibaseRuntime 'info.picocli:picocli:4.7.5'
    liquibaseRuntime 'com.microsoft.sqlserver:mssql-jdbc:12.6.1.jre11'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'gov.cdc.etldatapipeline.EtlDataPipelineApplication'
        )
    }
    zip64 true
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    // Gather all runtime dependencies
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

apply plugin: "org.liquibase.gradle"

ext {
    NBS_DB_VER = '15.1'
}

liquibase {
    activities {
        odse_main {
            changelogFile "./src/main/resources/db/changelog/db.master.changelog-${NBS_DB_VER}.yaml"
            url "jdbc:sqlserver://${System.env.DB_URL}:1433;databaseName=master;encrypt=true;trustServerCertificate=true"
            username "${System.env.DB_USERNAME}"
            password "${System.env.DB_PASSWORD}"
        }
        odse_main {
            changelogFile "./src/main/resources/db/changelog/db.odse.changelog-${NBS_DB_VER}.yaml"
            url "jdbc:sqlserver://${System.env.DB_URL}:1433;databaseName=${System.env.DB_ODSE};encrypt=true;trustServerCertificate=true"
            username "${System.env.DB_USERNAME}"
            password "${System.env.DB_PASSWORD}"
        }
        rdb_main {
            changelogFile "./src/main/resources/db/changelog/db.rdb.changelog-${NBS_DB_VER}.yaml"
            url "jdbc:sqlserver://${System.env.DB_URL}:1433;databaseName=${System.env.DB_RDB};encrypt=true;trustServerCertificate=true"
            username "${System.env.DB_USERNAME}"
            password "${System.env.DB_PASSWORD}"
        }
    }
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectKey", "CDCgov_NEDSS-DataAccess"
        property "sonar.organization", "cdcgov"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/investigation-service/build/customJacocoReportDir/test/jacocoTestReport.xml," +
                "${rootDir}/ldfdata-service/build/customJacocoReportDir/test/jacocoTestReport.xml,${rootDir}/observation-service/build/customJacocoReportDir/test/jacocoTestReport.xml,${rootDir}/person-service/build/customJacocoReportDir/test/jacocoTestReport.xml," +
                "${rootDir}/post-processing-service/build/customJacocoReportDir/test/jacocoTestReport.xml"
    }
}